########################### -*- Mode: Fundamental -*- #########################
## localStrict.te --- 
## Author           : Manoj Srivastava ( srivasta@glaurung.internal.golden-gryphon.com ) 
## Created On       : Thu May 10 23:57:50 2007
## Created On Node  : glaurung.internal.golden-gryphon.com
## Last Modified By : Manoj Srivastava
## Last Modified On : Fri May 11 00:58:55 2007
## Last Machine Used: glaurung.internal.golden-gryphon.com
## Update Count     : 4
## Status           : Unknown, Use with caution!
## HISTORY          : 
## Description      : 
##
## This is a example local policy, which is used by the author to set
## up am user mode linux virtual machine in enforcing mode using the
## strict policy.  With this policy module loaded, root can run
## apt/aptitude/dpkg, install and remove packages, and mount a hostfs
## filesystem.
##
## This .te file can be compiled with:
##   checkmodule -M -m -o localStrict.mod localStrict.te
##   semodule_package -o localStrict.pp -m localStrict.mod
## And loaded into policy with:
##   semodule -i localStrict.pp
##
## arch-tag: b4a20d2d-3c47-40c3-bc8f-a6adc1f31250
##
###############################################################################

module localstrict 1.0;

require {
        type crond_t;
        type fsadm_log_t;
        type fsadm_t;
        type init_t;
        type initrc_t;
        type mount_t;
        type system_chkpwd_t;
        type security_t;
        type semanage_t;
        type var_run_t;
        class dir search;
        class file write;
        class filesystem getattr;
        class process setrlimit;
}

#============= crond_t ==============
# Since cron policy explicitly did not give permission for this, 
# we should silence the audit messages.
# src="crond_t" tgt="crond_t" class="process", perms="setrlimit"
# comm="cron" exe="" path=""
dontaudit crond_t self:process setrlimit;

#============= fsadm_t ==============
# fsck does not need to look at /selinux
# src="fsadm_t" tgt="security_t" class="filesystem", perms="getattr"
# comm="fsck" exe="" path=""
dontaudit fsadm_t security_t:filesystem getattr;

#============= init_t ==============
# VFS: Mounted root (ext3 filesystem) readonly.
# audit(1178724097.332:2): policy loaded auid=4294967295
# line_ioctl: tty0: ioctl KDSIGACCEPT called
# Init does an getattr on /selnux
# src="init_t" tgt="security_t" class="filesystem", perms="getattr"
# comm="init" exe="" path=""
dontaudit init_t security_t:filesystem getattr;

#============= initrc_t ==============
# /etc/init.d/checkroot.sh running "/sbin/logsave", as well as
# /etc/init.d/checkfs.sh
# src="initrc_t" tgt="fsadm_log_t" class="file", perms="write"
# comm="logsave" exe="" path=""
allow initrc_t fsadm_log_t:file write;

#============= mount_t ==============
# This is mount 
# src="mount_t" tgt="security_t" class="filesystem", perms="getattr"
# comm="mount" exe="" path=""
dontaudit  mount_t security_t:filesystem getattr;

#============= semanage_t ==============
# This was from semanage -i foo.pp
# src="semanage_t" tgt="security_t" class="filesystem", perms="getattr"
# comm="semodule" exe="" path=""
dontaudit semanage_t security_t:filesystem getattr;

#============= system_chkpwd_t ==============
# There is no need for a helper binary for the pam_unix module to
# look into /selinux (unix_chkpwd)
# src="system_chkpwd_t" tgt="security_t" class="filesystem", perms="getattr"
# comm="unix_chkpwd" exe="" path=""
dontaudit  system_chkpwd_t security_t:filesystem getattr;

# I have no idea why this is looking in /var/run
# src="system_chkpwd_t" tgt="var_run_t" class="dir", perms="search"
# comm="unix_chkpwd" exe="" path=""
dontaudit system_chkpwd_t var_run_t:dir search;
