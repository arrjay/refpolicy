From: =?UTF-8?q?Mika=20Pfl=C3=BCger?= <debian@mikapflueger.de>
Date: Fri, 2 Mar 2012 02:38:15 +0100
Subject: Refinements for MCS policy

---
 policy/modules/kernel/mcs.if     |   50 ++++++++++++++++++++++++++++++++++++++
 policy/modules/kernel/mcs.te     |   11 ++++++++
 policy/modules/kernel/selinux.te |    1 +
 3 files changed, 62 insertions(+), 0 deletions(-)

diff --git a/policy/modules/kernel/mcs.if b/policy/modules/kernel/mcs.if
index 66cbb76..53cb5ae 100644
--- a/policy/modules/kernel/mcs.if
+++ b/policy/modules/kernel/mcs.if
@@ -122,3 +122,53 @@ interface(`mcs_process_set_categories',`
 
 	typeattribute $1 mcssetcats;
 ')
+
+########################################
+## <summary>
+##     Make specified domain MCS trusted
+##     for setting the low level of its range for the processes it executes,
+##      IE MCS will not be mandatory for it.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain target for user exemption.
+##     </summary>
+## </param>
+#
+interface(`mcs_process_set_low',`
+	gen_require(`
+		attribute mcssetlow;
+	')
+
+	typeattribute $1 mcssetlow;
+')
+
+########################################
+## <summary>
+##      Make specified object MCS trusted.
+## </summary>
+## <desc>
+##      <p>
+##      Make specified object MCS trusted.  This
+##      allows all levels to read and write the
+##      object.
+##      </p>
+##      <p>
+##      This currently only applies to filesystem
+##      objects, for example, files and directories.
+##      </p>
+## </desc>
+## <param name="domain">
+##      <summary>
+##      The type of the object.
+##      </summary>
+## </param>
+#
+interface(`mcs_trusted_object',`
+	gen_require(`
+		attribute mcstrustedobject;
+	')
+
+	typeattribute $1 mcstrustedobject;
+')
+
diff --git a/policy/modules/kernel/mcs.te b/policy/modules/kernel/mcs.te
index 0e5b661..dcda2f3 100644
--- a/policy/modules/kernel/mcs.te
+++ b/policy/modules/kernel/mcs.te
@@ -5,8 +5,19 @@ policy_module(mcs, 1.2.0)
 # Declarations
 #
 
+# process may kill all processes (init)
 attribute mcskillall;
+# process may ptrace at all levels
 attribute mcsptraceall;
+# process may run a child in any level
 attribute mcssetcats;
+# process may set the low level for a child with no restriction
+attribute mcssetlow;
+# object may be accessed by any process at a higher level
+attribute mcstrustedobject;
+# process may write all files/dirs
 attribute mcswriteall;
+# process may read all files/dirs
 attribute mcsreadall;
+# process may delete all files and write dirs as appropriate
+attribute mcsdeleteall;
diff --git a/policy/modules/kernel/selinux.te b/policy/modules/kernel/selinux.te
index 4baa2b9..8793eaf 100644
--- a/policy/modules/kernel/selinux.te
+++ b/policy/modules/kernel/selinux.te
@@ -19,6 +19,7 @@ attribute selinux_unconfined_type;
 type security_t, boolean_type;
 fs_type(security_t)
 mls_trusted_object(security_t)
+mcs_trusted_object(security_t)
 sid security gen_context(system_u:object_r:security_t,mls_systemhigh)
 genfscon selinuxfs / gen_context(system_u:object_r:security_t,s0)
 genfscon securityfs / gen_context(system_u:object_r:security_t,s0)
