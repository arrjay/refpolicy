From: =?UTF-8?q?Mika=20Pfl=C3=BCger?= <debian@mikapflueger.de>
Date: Sun, 4 Mar 2012 01:31:41 +0100
Subject: Clamav policy adjustments: * Allow clamd_t to search bin_t and read
 bin_t links * Allow clamd_t to search postfix_spool_t for creation
 of Unix domain socket in the sub-directory, this is ugly and a
 little bit wrong but makes it easier to configure Postfix * Allow
 freshclam_t to read the routing table and talk to http_cache_port_t
 * Create new interface crond_search_dir() and use it to allow
 crond_t to search clamd_var_lib_t for amavis cron jobs * Allow
 clamd_t to read files under /usr (for Perl) * Allow it to talk to
 itself by unix stream sockets and bind to UDP nodes Closes: #502274
 * Allow clamd_t access to inherit it's own fds * Give freshclam_t
 and clamd_t the same access WRT execmem * Allow freshclam_t to read
 proc_t files

---
 policy/modules/services/clamav.fc |    7 +++++--
 policy/modules/services/clamav.te |   32 ++++++++++++++++++++++++++++++++
 policy/modules/services/cron.if   |   19 +++++++++++++++++++
 3 files changed, 56 insertions(+), 2 deletions(-)

diff --git a/policy/modules/services/clamav.fc b/policy/modules/services/clamav.fc
index e8e9a21..560e9e5 100644
--- a/policy/modules/services/clamav.fc
+++ b/policy/modules/services/clamav.fc
@@ -8,13 +8,16 @@
 /usr/sbin/clamd			--	gen_context(system_u:object_r:clamd_exec_t,s0)
 /usr/sbin/clamav-milter		--	gen_context(system_u:object_r:clamd_exec_t,s0)
 
+/var/run/clamav(/.*)?			gen_context(system_u:object_r:clamd_var_run_t,s0)
+/var/run/clamd\..*			gen_context(system_u:object_r:clamd_var_run_t,s0)
+/var/run/clamav\..*			gen_context(system_u:object_r:clamd_var_run_t,s0)
+/var/spool/postfix/clamav(/.*)?		gen_context(system_u:object_r:clamd_var_run_t,s0)
+
 /var/clamav(/.*)?			gen_context(system_u:object_r:clamd_var_lib_t,s0)
 /var/lib/clamav(/.*)?			gen_context(system_u:object_r:clamd_var_lib_t,s0)
 /var/log/clamav.*			gen_context(system_u:object_r:clamd_var_log_t,s0)
 /var/log/clamav/freshclam.*	--	gen_context(system_u:object_r:freshclam_var_log_t,s0)
 /var/log/clamd.*			gen_context(system_u:object_r:clamd_var_log_t,s0)
 /var/run/amavis(d)?/clamd\.pid	--	gen_context(system_u:object_r:clamd_var_run_t,s0)
-/var/run/clamav.*			gen_context(system_u:object_r:clamd_var_run_t,s0)
-/var/run/clamd.*			gen_context(system_u:object_r:clamd_var_run_t,s0)
 /var/spool/amavisd/clamd\.sock	-s	gen_context(system_u:object_r:clamd_var_run_t,s0)
 /var/spool/MailScanner(/.*)?		gen_context(system_u:object_r:clamd_var_run_t,s0)
diff --git a/policy/modules/services/clamav.te b/policy/modules/services/clamav.te
index f758323..b1c40cb 100644
--- a/policy/modules/services/clamav.te
+++ b/policy/modules/services/clamav.te
@@ -36,6 +36,10 @@ logging_log_file(clamd_var_log_t)
 type clamd_var_lib_t;
 files_type(clamd_var_lib_t)
 
+# spool files
+type clamd_spool_t;
+files_type(clamd_spool_t)
+
 # pid files
 type clamd_var_run_t;
 files_pid_file(clamd_var_run_t)
@@ -53,6 +57,8 @@ type freshclam_t;
 type freshclam_exec_t;
 init_daemon_domain(freshclam_t, freshclam_exec_t)
 
+allow freshclam_t self:netlink_route_socket r_netlink_socket_perms;
+
 # log files
 type freshclam_var_log_t;
 logging_log_file(freshclam_var_log_t)
@@ -62,12 +68,22 @@ logging_log_file(freshclam_var_log_t)
 # clamd local policy
 #
 
+allow clamd_t self:process signull;
 allow clamd_t self:capability { kill setgid setuid dac_override };
 dontaudit clamd_t self:capability sys_tty_config;
 allow clamd_t self:fifo_file rw_fifo_file_perms;
 allow clamd_t self:unix_stream_socket { create_stream_socket_perms connectto };
 allow clamd_t self:unix_dgram_socket create_socket_perms;
 allow clamd_t self:tcp_socket { listen accept };
+allow clamd_t self:fd use;
+corecmd_exec_bin(clamd_t)
+corecmd_read_bin_symlinks(clamd_t)
+files_read_usr_files(clamd_t)
+
+optional_policy(`
+# to allow creating the unix domain socket
+	postfix_search_spool(clamd_t)
+')
 
 # configuration files
 allow clamd_t clamd_etc_t:dir list_dir_perms;
@@ -83,6 +99,10 @@ files_tmp_filetrans(clamd_t, clamd_tmp_t, { file dir })
 manage_dirs_pattern(clamd_t, clamd_var_lib_t, clamd_var_lib_t)
 manage_files_pattern(clamd_t, clamd_var_lib_t, clamd_var_lib_t)
 
+# spool files
+manage_dirs_pattern(clamd_t,clamd_spool_t,clamd_spool_t)
+manage_files_pattern(clamd_t,clamd_spool_t,clamd_spool_t)
+
 # log files
 manage_dirs_pattern(clamd_t, clamd_var_log_t, clamd_var_log_t)
 manage_files_pattern(clamd_t, clamd_var_log_t, clamd_var_log_t)
@@ -100,6 +120,9 @@ kernel_read_system_state(clamd_t)
 
 corecmd_exec_shell(clamd_t)
 
+# for /proc/meminfo
+allow clamd_t proc_t:file { getattr read };
+
 corenet_all_recvfrom_unlabeled(clamd_t)
 corenet_all_recvfrom_netlabel(clamd_t)
 corenet_tcp_sendrecv_generic_if(clamd_t)
@@ -111,6 +134,7 @@ corenet_tcp_bind_clamd_port(clamd_t)
 corenet_tcp_bind_generic_port(clamd_t)
 corenet_tcp_connect_generic_port(clamd_t)
 corenet_sendrecv_clamd_server_packets(clamd_t)
+corenet_udp_bind_all_nodes(clamd_t)
 
 dev_read_rand(clamd_t)
 dev_read_urand(clamd_t)
@@ -120,6 +144,7 @@ domain_use_interactive_fds(clamd_t)
 files_read_etc_files(clamd_t)
 files_read_etc_runtime_files(clamd_t)
 files_search_spool(clamd_t)
+files_search_var_lib(clamd_t)
 
 auth_use_nsswitch(clamd_t)
 
@@ -130,6 +155,7 @@ miscfiles_read_localization(clamd_t)
 cron_use_fds(clamd_t)
 cron_use_system_job_fds(clamd_t)
 cron_rw_pipes(clamd_t)
+crond_search_dir(clamd_var_lib_t)
 
 mta_read_config(clamd_t)
 mta_send_mail(clamd_t)
@@ -147,8 +173,10 @@ optional_policy(`
 
 tunable_policy(`clamd_use_jit',`
 	allow clamd_t self:process execmem;
+	allow freshclam_t self:process execmem;
 ', `
 	dontaudit clamd_t self:process execmem;
+	dontaudit freshclam_t self:process execmem;
 ')
 
 ########################################
@@ -156,6 +184,8 @@ tunable_policy(`clamd_use_jit',`
 # Freshclam local policy
 #
 
+files_search_var_lib(freshclam_t)
+
 allow freshclam_t self:capability { setgid setuid dac_override };
 allow freshclam_t self:fifo_file rw_fifo_file_perms;
 allow freshclam_t self:unix_stream_socket create_stream_socket_perms;
@@ -189,6 +219,7 @@ corenet_tcp_sendrecv_generic_node(freshclam_t)
 corenet_tcp_sendrecv_all_ports(freshclam_t)
 corenet_tcp_sendrecv_clamd_port(freshclam_t)
 corenet_tcp_connect_http_port(freshclam_t)
+corenet_tcp_connect_http_cache_port(freshclam_t)
 corenet_sendrecv_http_client_packets(freshclam_t)
 
 dev_read_rand(freshclam_t)
@@ -204,6 +235,7 @@ auth_use_nsswitch(freshclam_t)
 logging_send_syslog_msg(freshclam_t)
 
 miscfiles_read_localization(freshclam_t)
+kernel_read_system_state(freshclam_t)
 
 clamav_stream_connect(freshclam_t)
 
diff --git a/policy/modules/services/cron.if b/policy/modules/services/cron.if
index b965950..f20a156 100644
--- a/policy/modules/services/cron.if
+++ b/policy/modules/services/cron.if
@@ -633,3 +633,22 @@ interface(`cron_dontaudit_write_system_job_tmp_files',`
 
 	dontaudit $1 system_cronjob_tmp_t:file write_file_perms;
 ')
+
+########################################
+## <summary>
+##	Allow crond to search directories that are home directories for
+##	accounts used or parent directories of home directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Type of directory that crond_t may search.
+##	</summary>
+## </param>
+#
+interface(`crond_search_dir',`
+	gen_require(`
+		type crond_t;
+	')
+
+	allow crond_t $1:dir search;
+')
