From: =?UTF-8?q?Mika=20Pfl=C3=BCger?= <debian@mikapflueger.de>
Date: Fri, 2 Mar 2012 03:02:50 +0100
Subject: some changes in cron policy for debian and small fixes: * Allow
 crond_t the sys_resource capability to set resource limits for
 children. * Allow crontab_t to create a directory of type
 crontab_tmp_t, necessary to allow crontab -e to work * Allow cron
 jobs to write to crond_tmp_t * Allow system_mail_t (sendmail) to
 get read/write access to crond_tmp_t

---
 policy/modules/services/cron.fc |    8 ++++++++
 policy/modules/services/cron.if |    8 +++++---
 policy/modules/services/cron.te |    5 +++--
 policy/modules/services/mta.if  |   17 +++++++++++++++++
 4 files changed, 33 insertions(+), 5 deletions(-)

diff --git a/policy/modules/services/cron.fc b/policy/modules/services/cron.fc
index 2eefc08..bd93dfc 100644
--- a/policy/modules/services/cron.fc
+++ b/policy/modules/services/cron.fc
@@ -5,6 +5,7 @@
 
 /usr/bin/at			--	gen_context(system_u:object_r:crontab_exec_t,s0)
 /usr/bin/(f)?crontab		--	gen_context(system_u:object_r:crontab_exec_t,s0)
+/usr/sbin/fcronsighup           --      gen_context(system_u:object_r:crontab_exec_t,s0)
 
 /usr/sbin/anacron		--	gen_context(system_u:object_r:anacron_exec_t,s0)
 /usr/sbin/atd			--	gen_context(system_u:object_r:crond_exec_t,s0)
@@ -18,6 +19,11 @@
 /var/run/fcron\.fifo		-s	gen_context(system_u:object_r:crond_var_run_t,s0)
 /var/run/fcron\.pid		--	gen_context(system_u:object_r:crond_var_run_t,s0)
 
+ifdef(`distro_debian', `
+/var/spool/cron/atspool        -d      gen_context(system_u:object_r:cron_spool_t,s0)
+/var/spool/cron/atjobs         -d      gen_context(system_u:object_r:cron_spool_t,s0)
+/var/spool/cron/atjobs/[^/]*   --      <<none>>
+')
 /var/spool/anacron(/.*)?		gen_context(system_u:object_r:system_cron_spool_t,s0)
 /var/spool/at(/.*)?			gen_context(system_u:object_r:user_cron_spool_t,s0)
 
@@ -45,3 +51,5 @@ ifdef(`distro_suse', `
 /var/spool/fcron/systab\.orig	--	gen_context(system_u:object_r:system_cron_spool_t,s0)
 /var/spool/fcron/systab		--	gen_context(system_u:object_r:system_cron_spool_t,s0)
 /var/spool/fcron/new\.systab	--	gen_context(system_u:object_r:system_cron_spool_t,s0)
+
+/var/log/prelink.log		--	gen_context(system_u:object_r:cron_log_t,s0)
diff --git a/policy/modules/services/cron.if b/policy/modules/services/cron.if
index 35241ed..b965950 100644
--- a/policy/modules/services/cron.if
+++ b/policy/modules/services/cron.if
@@ -35,7 +35,8 @@ template(`cron_common_crontab_template',`
 	allow $1_t self:fifo_file rw_fifo_file_perms;
 
 	allow $1_t $1_tmp_t:file manage_file_perms;
-	files_tmp_filetrans($1_t, $1_tmp_t, file)
+	allow $1_t $1_tmp_t:dir manage_dir_perms;
+	files_tmp_filetrans($1_t, $1_tmp_t, { file dir })
 
 	# create files in /var/spool/cron
 	manage_files_pattern($1_t, { cron_spool_t user_cron_spool_t }, user_cron_spool_t)
@@ -207,7 +208,7 @@ interface(`cron_admin_role',`
 		class passwd crontab;
 	')
 
-	role $1 types { cronjob_t admin_crontab_t admin_crontab_tmp_t };
+	role $1 types { cronjob_t admin_crontab_t };
 
 	# cronjob shows up in user ps
 	ps_process_pattern($2, cronjob_t)
@@ -257,11 +258,12 @@ interface(`cron_admin_role',`
 #
 interface(`cron_system_entry',`
 	gen_require(`
-		type crond_t, system_cronjob_t;
+		type crond_t, system_cronjob_t, crond_tmp_t;
 	')
 
 	domtrans_pattern(system_cronjob_t, $2, $1)
 	domtrans_pattern(crond_t, $2, $1)
+	allow $1 crond_tmp_t:file { read write ioctl };
 
 	role system_r types $1;
 ')
diff --git a/policy/modules/services/cron.te b/policy/modules/services/cron.te
index f22d27c..4f68f6d 100644
--- a/policy/modules/services/cron.te
+++ b/policy/modules/services/cron.te
@@ -136,8 +136,8 @@ tunable_policy(`fcron_crond', `
 # Cron daemon local policy
 #
 
-allow crond_t self:capability { dac_override setgid setuid sys_nice dac_read_search };
-dontaudit crond_t self:capability { sys_resource sys_tty_config };
+allow crond_t self:capability { dac_override setgid setuid sys_nice sys_resource dac_read_search };
+dontaudit crond_t self:capability { sys_tty_config };
 allow crond_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 allow crond_t self:process { setexec setfscreate };
 allow crond_t self:fd use;
@@ -222,6 +222,7 @@ userdom_use_unpriv_users_fds(crond_t)
 userdom_list_user_home_dirs(crond_t)
 
 mta_send_mail(crond_t)
+system_mail_file_access(crond_tmp_t)
 
 ifdef(`distro_debian',`
 	# pam_limits is used
diff --git a/policy/modules/services/mta.if b/policy/modules/services/mta.if
index a1aa265..b3b9d62 100644
--- a/policy/modules/services/mta.if
+++ b/policy/modules/services/mta.if
@@ -899,3 +899,20 @@ interface(`mta_rw_user_mail_stream_sockets',`
 
 	allow $1 user_mail_domain:unix_stream_socket rw_socket_perms;
 ')
+
+########################################
+## <summary>
+##	Allow system_mail_t to access files of specified types
+## </summary>
+## <param name="private type">
+##	<summary>
+##	File type that system_mail_t can access
+##	</summary>
+## </param>
+#
+interface(`system_mail_file_access',`
+	gen_require(`
+		type system_mail_t;
+	')
+	allow system_mail_t $1:file { read write };
+')
