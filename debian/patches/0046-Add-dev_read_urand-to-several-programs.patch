From: =?UTF-8?q?Mika=20Pfl=C3=BCger?= <debian@mikapflueger.de>
Date: Fri, 2 Mar 2012 03:52:13 +0100
Subject: Add dev_read_urand to several programs

---
 policy/modules/services/bind.te      |    1 +
 policy/modules/services/courier.te   |    2 ++
 policy/modules/services/mailman.te   |    4 +++-
 policy/modules/services/perdition.te |    2 +-
 policy/modules/services/portmap.te   |    2 ++
 policy/modules/system/clock.te       |    1 +
 policy/modules/system/getty.te       |    1 +
 policy/modules/system/hostname.te    |    2 ++
 policy/modules/system/logging.te     |    3 +++
 policy/modules/system/mount.te       |    1 +
 policy/modules/system/selinuxutil.te |    3 +++
 11 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/policy/modules/services/bind.te b/policy/modules/services/bind.te
index 4deca04..2445f81 100644
--- a/policy/modules/services/bind.te
+++ b/policy/modules/services/bind.te
@@ -199,6 +199,7 @@ allow ndc_t self:fifo_file rw_fifo_file_perms;
 allow ndc_t self:unix_stream_socket { connect create_stream_socket_perms };
 allow ndc_t self:tcp_socket create_socket_perms;
 allow ndc_t self:netlink_route_socket r_netlink_socket_perms;
+dev_read_urand(ndc_t)
 
 allow ndc_t dnssec_t:file read_file_perms;
 allow ndc_t dnssec_t:lnk_file { getattr read };
diff --git a/policy/modules/services/courier.te b/policy/modules/services/courier.te
index e3de7a2..77eadff 100644
--- a/policy/modules/services/courier.te
+++ b/policy/modules/services/courier.te
@@ -30,6 +30,7 @@ mta_agent_executable(courier_exec_t)
 
 courier_domain_template(sqwebmail)
 typealias courier_sqwebmail_exec_t alias sqwebmail_cron_exec_t;
+dev_read_urand(courier_sqwebmail_t)
 
 ########################################
 #
@@ -93,6 +94,7 @@ allow courier_pop_t courier_authdaemon_t:tcp_socket rw_stream_socket_perms;
 allow courier_pop_t courier_authdaemon_t:process sigchld;
 
 allow courier_pop_t courier_tcpd_t:{ unix_stream_socket tcp_socket } rw_stream_socket_perms;
+dev_read_urand(courier_pop_t)
 
 # inherits file handle - should it?
 allow courier_pop_t courier_var_lib_t:file { read write };
diff --git a/policy/modules/services/mailman.te b/policy/modules/services/mailman.te
index af4d572..1ecc9c2 100644
--- a/policy/modules/services/mailman.te
+++ b/policy/modules/services/mailman.te
@@ -61,6 +61,7 @@ optional_policy(`
 # Mailman mail local policy
 #
 
+dev_read_urand(mailman_mail_t)
 allow mailman_mail_t self:unix_dgram_socket create_socket_perms;
 allow mailman_mail_t self:process { signal signull };
 allow mailman_mail_t self:capability { kill dac_override setuid setgid sys_tty_config };
@@ -125,4 +126,5 @@ optional_policy(`
 
 optional_policy(`
 	su_exec(mailman_queue_t)
-')
\ No newline at end of file
+')
+
diff --git a/policy/modules/services/perdition.te b/policy/modules/services/perdition.te
index 3636277..8e92c65 100644
--- a/policy/modules/services/perdition.te
+++ b/policy/modules/services/perdition.te
@@ -20,7 +20,7 @@ files_pid_file(perdition_var_run_t)
 # Local policy
 #
 
-allow perdition_t self:capability { setgid setuid };
+dev_read_urand(perdition_t)
 dontaudit perdition_t self:capability sys_tty_config;
 allow perdition_t self:process signal_perms;
 allow perdition_t self:tcp_socket create_stream_socket_perms;
diff --git a/policy/modules/services/portmap.te b/policy/modules/services/portmap.te
index 333a1fe..e7fbfd9 100644
--- a/policy/modules/services/portmap.te
+++ b/policy/modules/services/portmap.te
@@ -32,6 +32,7 @@ allow portmap_t self:unix_dgram_socket create_socket_perms;
 allow portmap_t self:unix_stream_socket create_stream_socket_perms;
 allow portmap_t self:tcp_socket create_stream_socket_perms;
 allow portmap_t self:udp_socket create_socket_perms;
+dev_read_urand(portmap_t)
 
 manage_dirs_pattern(portmap_t, portmap_tmp_t, portmap_tmp_t)
 manage_files_pattern(portmap_t, portmap_tmp_t, portmap_tmp_t)
@@ -112,6 +113,7 @@ allow portmap_helper_t self:udp_socket create_socket_perms;
 
 allow portmap_helper_t portmap_var_run_t:file manage_file_perms;
 files_pid_filetrans(portmap_helper_t, portmap_var_run_t, file)
+dev_read_urand(portmap_helper_t)
 
 corenet_all_recvfrom_unlabeled(portmap_helper_t)
 corenet_all_recvfrom_netlabel(portmap_helper_t)
diff --git a/policy/modules/system/clock.te b/policy/modules/system/clock.te
index b9ed25b..81536a0 100644
--- a/policy/modules/system/clock.te
+++ b/policy/modules/system/clock.te
@@ -24,6 +24,7 @@ allow hwclock_t self:capability { dac_override sys_rawio sys_time sys_tty_config
 dontaudit hwclock_t self:capability sys_tty_config;
 allow hwclock_t self:process signal_perms;
 allow hwclock_t self:fifo_file rw_fifo_file_perms;
+dev_read_urand(hwclock_t)
 
 # Allow hwclock to store & retrieve correction factors.
 allow hwclock_t adjtime_t:file { rw_file_perms setattr };
diff --git a/policy/modules/system/getty.te b/policy/modules/system/getty.te
index fd100fc..3bb1126 100644
--- a/policy/modules/system/getty.te
+++ b/policy/modules/system/getty.te
@@ -37,6 +37,7 @@ allow getty_t self:capability { dac_override chown setgid sys_resource sys_tty_c
 dontaudit getty_t self:capability sys_tty_config;
 allow getty_t self:process { getpgid setpgid getsession signal_perms };
 allow getty_t self:fifo_file rw_fifo_file_perms;
+dev_read_urand(getty_t)
 
 read_files_pattern(getty_t, getty_etc_t, getty_etc_t)
 read_lnk_files_pattern(getty_t, getty_etc_t, getty_etc_t)
diff --git a/policy/modules/system/hostname.te b/policy/modules/system/hostname.te
index c310775..90f5d8b 100644
--- a/policy/modules/system/hostname.te
+++ b/policy/modules/system/hostname.te
@@ -25,6 +25,8 @@ kernel_list_proc(hostname_t)
 kernel_read_proc_symlinks(hostname_t)
 
 dev_read_sysfs(hostname_t)
+dev_read_urand(hostname_t)
+
 # Early devtmpfs, before udev relabel
 dev_dontaudit_rw_generic_chr_files(hostname_t)
 
diff --git a/policy/modules/system/logging.te b/policy/modules/system/logging.te
index d8e5e1c..059fa97 100644
--- a/policy/modules/system/logging.te
+++ b/policy/modules/system/logging.te
@@ -105,6 +105,7 @@ ifdef(`enable_mls',`
 
 allow auditctl_t self:capability { fsetid dac_read_search dac_override };
 allow auditctl_t self:netlink_audit_socket nlmsg_readpriv;
+dev_read_urand(auditctl_t)
 
 read_files_pattern(auditctl_t, auditd_etc_t, auditd_etc_t)
 allow auditctl_t auditd_etc_t:dir list_dir_perms;
@@ -144,6 +145,7 @@ allow auditd_t self:file rw_file_perms;
 allow auditd_t self:unix_dgram_socket create_socket_perms;
 allow auditd_t self:fifo_file rw_fifo_file_perms;
 allow auditd_t self:tcp_socket create_stream_socket_perms;
+dev_read_urand(auditd_t)
 
 allow auditd_t auditd_etc_t:dir list_dir_perms;
 allow auditd_t auditd_etc_t:file read_file_perms;
@@ -236,6 +238,7 @@ allow audisp_t self:process { getcap signal_perms setcap setsched };
 allow audisp_t self:fifo_file rw_fifo_file_perms;
 allow audisp_t self:unix_stream_socket create_stream_socket_perms;
 allow audisp_t self:unix_dgram_socket create_socket_perms;
+dev_read_urand(audisp_t)
 
 allow audisp_t auditd_t:unix_stream_socket rw_socket_perms;
 
diff --git a/policy/modules/system/mount.te b/policy/modules/system/mount.te
index 94e49e8..a4052e4 100644
--- a/policy/modules/system/mount.te
+++ b/policy/modules/system/mount.te
@@ -37,6 +37,7 @@ application_domain(unconfined_mount_t, mount_exec_t)
 # setuid/setgid needed to mount cifs 
 allow mount_t self:capability { ipc_lock sys_rawio sys_admin dac_override chown sys_tty_config setuid setgid };
 
+dev_read_urand(mount_t)
 allow mount_t mount_loopback_t:file read_file_perms;
 
 allow mount_t mount_tmp_t:file manage_file_perms;
diff --git a/policy/modules/system/selinuxutil.te b/policy/modules/system/selinuxutil.te
index aced208..acdcf0b 100644
--- a/policy/modules/system/selinuxutil.te
+++ b/policy/modules/system/selinuxutil.te
@@ -107,6 +107,7 @@ type setfiles_t alias restorecon_t, can_relabelto_binary_policy;
 type setfiles_exec_t alias restorecon_exec_t;
 init_system_domain(setfiles_t, setfiles_exec_t)
 domain_obj_id_change_exemption(setfiles_t)
+dev_read_urand(setfiles_t)
 
 ########################################
 #
@@ -159,6 +160,7 @@ allow load_policy_t self:capability dac_override;
 read_files_pattern(load_policy_t,{ policy_src_t policy_config_t },policy_config_t)
 
 domain_use_interactive_fds(load_policy_t)
+dev_read_urand(load_policy_t)
 
 # for mcs.conf
 files_read_etc_files(load_policy_t)
@@ -304,6 +306,7 @@ tunable_policy(`allow_polyinstantiation',`
 
 allow restorecond_t self:capability { dac_override dac_read_search fowner };
 allow restorecond_t self:fifo_file rw_fifo_file_perms;
+dev_read_urand(restorecond_t)
 
 allow restorecond_t restorecond_var_run_t:file manage_file_perms;
 files_pid_filetrans(restorecond_t, restorecond_var_run_t, file)
