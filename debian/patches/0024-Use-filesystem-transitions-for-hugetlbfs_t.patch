From: =?UTF-8?q?Mika=20Pfl=C3=BCger?= <debian@mikapflueger.de>
Date: Fri, 2 Mar 2012 02:26:56 +0100
Subject: Use filesystem transitions for hugetlbfs_t

---
 policy/modules/kernel/files.if      |   20 ++++++++++++++++++++
 policy/modules/kernel/files.te      |    8 ++++++++
 policy/modules/kernel/filesystem.te |    2 ++
 policy/modules/system/userdomain.if |    3 +++
 policy/modules/system/userdomain.te |    3 +++
 5 files changed, 36 insertions(+), 0 deletions(-)

diff --git a/policy/modules/kernel/files.if b/policy/modules/kernel/files.if
index deb24b4..ff2748d 100644
--- a/policy/modules/kernel/files.if
+++ b/policy/modules/kernel/files.if
@@ -413,6 +413,26 @@ interface(`files_tmpfs_file',`
 
 ########################################
 ## <summary>
+##	Transform the type into a file, for use on a
+##	virtual memory filesystem (hugetlbfs).
+## </summary>
+## <param name="type">
+##	<summary>
+##	The type to be transformed.
+##	</summary>
+## </param>
+#
+interface(`files_hugetlbfs_file',`
+	gen_require(`
+		attribute hugetlbfsfile;
+	')
+
+	files_type($1)
+	typeattribute $1 hugetlbfsfile;
+')
+
+########################################
+## <summary>
 ##	Get the attributes of all directories.
 ## </summary>
 ## <param name="domain">
diff --git a/policy/modules/kernel/files.te b/policy/modules/kernel/files.te
index 80a4f1e..fe4e9bb 100644
--- a/policy/modules/kernel/files.te
+++ b/policy/modules/kernel/files.te
@@ -31,6 +31,7 @@ attribute non_security_file_type;
 
 attribute tmpfile;
 attribute tmpfsfile;
+attribute hugetlbfsfile;
 
 # this attribute is not currently used and will be removed in the future.
 # unfortunately, this attribute can not be removed yet because it may cause
@@ -213,6 +214,13 @@ fs_associate_tmpfs(tmpfsfile)
 
 ########################################
 #
+# Rules for all hugetlbfs file types
+#
+
+fs_associate_hugetlbfs(hugetlbfsfile)
+
+########################################
+#
 # Unconfined access to this module
 #
 
diff --git a/policy/modules/kernel/filesystem.te b/policy/modules/kernel/filesystem.te
index abd970d..27cc80f 100644
--- a/policy/modules/kernel/filesystem.te
+++ b/policy/modules/kernel/filesystem.te
@@ -95,6 +95,8 @@ genfscon futexfs / gen_context(system_u:object_r:futexfs_t,s0)
 type hugetlbfs_t;
 fs_type(hugetlbfs_t)
 files_mountpoint(hugetlbfs_t)
+files_type(hugetlbfs_t)
+files_poly_parent(hugetlbfs_t)
 fs_use_trans hugetlbfs gen_context(system_u:object_r:hugetlbfs_t,s0);
 
 type ibmasmfs_t;
diff --git a/policy/modules/system/userdomain.if b/policy/modules/system/userdomain.if
index 5225bbd..1bf060f 100644
--- a/policy/modules/system/userdomain.if
+++ b/policy/modules/system/userdomain.if
@@ -362,6 +362,7 @@ interface(`userdom_exec_user_tmp_files',`
 interface(`userdom_manage_tmpfs_role',`
 	gen_require(`
 		type user_tmpfs_t;
+		type user_hugetlbfs_t;
 	')
 
 	manage_dirs_pattern($2, user_tmpfs_t, user_tmpfs_t)
@@ -370,6 +371,8 @@ interface(`userdom_manage_tmpfs_role',`
 	manage_sock_files_pattern($2, user_tmpfs_t, user_tmpfs_t)
 	manage_fifo_files_pattern($2, user_tmpfs_t, user_tmpfs_t)
 	fs_tmpfs_filetrans($2, user_tmpfs_t, { dir file lnk_file sock_file fifo_file })
+	manage_files_pattern($2, user_hugetlbfs_t, user_hugetlbfs_t)
+	fs_hugetlbfs_filetrans($2, user_hugetlbfs_t, { file })
 ')
 
 #######################################
diff --git a/policy/modules/system/userdomain.te b/policy/modules/system/userdomain.te
index 9fbd578..0823d98 100644
--- a/policy/modules/system/userdomain.te
+++ b/policy/modules/system/userdomain.te
@@ -91,6 +91,9 @@ type user_tmpfs_t alias { staff_tmpfs_t sysadm_tmpfs_t secadm_tmpfs_t auditadm_t
 files_tmpfs_file(user_tmpfs_t)
 userdom_user_home_content(user_tmpfs_t)
 
+type user_hugetlbfs_t;
+files_hugetlbfs_file(user_hugetlbfs_t)
+
 type user_tty_device_t alias { staff_tty_device_t sysadm_tty_device_t secadm_tty_device_t auditadm_tty_device_t unconfined_tty_device_t };
 dev_node(user_tty_device_t)
 ubac_constrained(user_tty_device_t)
