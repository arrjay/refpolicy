## <summary>Bluetooth tools and system services.</summary>

#######################################
## <summary>
##	The per role template for the bluetooth module.
## </summary>
## <desc>
##	<p>
##	This template creates derived domains which are used
##	for bluetooth.
##	</p>
##	<p>
##	This template is invoked automatically for each user, and
##	generally does not need to be invoked directly
##	by policy writers.
##	</p>
## </desc>
## <param name="userdomain_prefix">
##	<summary>
##	The prefix of the user domain (e.g., user
##	is the prefix for user_t).
##	</summary>
## </param>
## <param name="user_domain">
##	<summary>
##	The type of the user domain.
##	</summary>
## </param>
## <param name="user_role">
##	<summary>
##	The role associated with the user domain.
##	</summary>
## </param>
#
template(`bluetooth_per_role_template',`
	gen_require(`
		attribute bluetooth_helper_domain;
		type bluetooth_helper_exec_t;
	')

	type $1_bluetooth_t, bluetooth_helper_domain;
	application_domain($1_bluetooth_t, bluetooth_helper_exec_t)
	role $3 types $1_bluetooth_t;
	
	type $1_bluetooth_tmp_t;
	files_tmp_file($1_bluetooth_tmp_t)

	type $1_bluetooth_tmpfs_t;
	files_tmpfs_file($1_bluetooth_tmpfs_t)

	allow $1_bluetooth_t self:capability sys_nice;
	allow $1_bluetooth_t self:process getsched;
	allow $1_bluetooth_t self:fifo_file rw_fifo_file_perms;
	allow $1_bluetooth_t self:shm create_shm_perms;
	allow $1_bluetooth_t self:unix_stream_socket { create_stream_socket_perms connectto };
	allow $1_bluetooth_t self:tcp_socket create_socket_perms;
	allow $1_bluetooth_t self:netlink_route_socket r_netlink_socket_perms;

	allow $1_bluetooth_t bluetooth_t:socket { read write };

	manage_dirs_pattern($1_bluetooth_t, $1_bluetooth_tmp_t, $1_bluetooth_tmp_t)
	manage_files_pattern($1_bluetooth_t, $1_bluetooth_tmp_t, $1_bluetooth_tmp_t)
	manage_sock_files_pattern($1_bluetooth_t, $1_bluetooth_tmp_t, $1_bluetooth_tmp_t)
	files_tmp_filetrans($1_bluetooth_t, $1_bluetooth_tmp_t, { file dir sock_file })

	manage_dirs_pattern($1_bluetooth_t, $1_bluetooth_tmpfs_t, $1_bluetooth_tmpfs_t)
	manage_files_pattern($1_bluetooth_t, $1_bluetooth_tmpfs_t, $1_bluetooth_tmpfs_t)
	fs_tmpfs_filetrans($1_bluetooth_t, $1_bluetooth_tmpfs_t, { dir file })

	kernel_read_system_state($1_bluetooth_t)
	kernel_read_kernel_sysctls($1_bluetooth_t)

	dev_read_urand($1_bluetooth_t)

	term_dontaudit_use_all_user_ttys($1_bluetooth_t)

	corecmd_exec_bin($1_bluetooth_t)
	corecmd_exec_shell($1_bluetooth_t)

	domain_read_all_domains_state($1_bluetooth_t)

	files_read_etc_files($1_bluetooth_t)
	files_read_etc_runtime_files($1_bluetooth_t)
	files_read_usr_files($1_bluetooth_t)
	files_dontaudit_list_default($1_bluetooth_t)

	libs_use_ld_so($1_bluetooth_t)
	libs_use_shared_libs($1_bluetooth_t)

	locallogin_dontaudit_use_fds($1_bluetooth_t)

	logging_send_syslog_msg($1_bluetooth_t)

	miscfiles_read_localization($1_bluetooth_t) 

	sysnet_read_config($1_bluetooth_t)

	optional_policy(`
		bluetooth_dbus_chat($1_bluetooth_t)

		dbus_system_bus_client_template($1_bluetooth, $1_bluetooth_t)
		dbus_connect_system_bus($1_bluetooth_t)
	')

	optional_policy(`
		nscd_socket_use($1_bluetooth_t)
	')

	optional_policy(`
		xserver_user_client_template($1, $1_bluetooth_t, $1_bluetooth_tmpfs_t)
	')
')

########################################
## <summary>
##	Execute bluetooth in the bluetooth domain.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`bluetooth_domtrans',`
	gen_require(`
		type bluetooth_t, bluetooth_exec_t;
	')

	domtrans_pattern($1,bluetooth_exec_t,bluetooth_t)
')

########################################
## <summary>
##	Read bluetooth daemon configuration.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`bluetooth_read_config',`
	gen_require(`
		type bluetooth_conf_t;
	')

	allow $1 bluetooth_conf_t:file { getattr read ioctl };
')

########################################
## <summary>
##	Send and receive messages from
##	bluetooth over dbus.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`bluetooth_dbus_chat',`
	gen_require(`
		type bluetooth_t;
		class dbus send_msg;
	')

	allow $1 bluetooth_t:dbus send_msg;
	allow bluetooth_t $1:dbus send_msg;
')

########################################
## <summary>
##	Execute bluetooth_helper in the bluetooth_helper domain.  (Deprecated)
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`bluetooth_domtrans_helper',`
	refpolicywarn(`$0($*) has been deprecated.')
')

########################################
## <summary>
##	Execute bluetooth_helper in the bluetooth_helper domain, and
##	allow the specified role the bluetooth_helper domain.  (Deprecated)
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	The role to be allowed the bluetooth_helper domain.
##	</summary>
## </param>
## <param name="terminal">
##	<summary>
##	The type of the terminal allow the bluetooth_helper domain to use.
##	</summary>
## </param>
## <rolecap/>
#
interface(`bluetooth_run_helper',`
	refpolicywarn(`$0($*) has been deprecated.')
')

########################################
## <summary>
##	Read bluetooth helper files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`bluetooth_dontaudit_read_helper_files',`
	gen_require(`
		attribute bluetooth_helper_domain;
	')

	dontaudit $1 bluetooth_helper_domain:dir search;
	dontaudit $1 bluetooth_helper_domain:file { read getattr };
')
