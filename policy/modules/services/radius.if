## <summary>RADIUS authentication and accounting server.</summary>

########################################
## <summary>
##	Use radius over a UDP connection.  (Deprecated)
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`radius_use',`
	refpolicywarn(`$0($*) has been deprecated.')
')

########################################
## <summary>
##	All of the rules required to administrate 
##	an radius environment
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	The role to be allowed to manage the radius domain.
##	</summary>
## </param>
## <param name="terminal">
##	<summary>
##	The type of the user terminal.
##	</summary>
## </param>
## <rolecap/>
#
interface(`radius_admin',`
	gen_require(`
		type radius_t, radius_etc_t, radius_log_t;
		type radius_etc_rw_t, radius_var_lib_t, radius_var_run_t;
	')

	allow $1 radius_t:process { ptrace signal_perms getattr };
	ps_process_pattern($1, radius_t)

	files_list_etc($1)
	manage_files_pattern($1, radius_etc_t, radius_etc_t)

	logging_list_logs($1)
	manage_files_pattern($1, radius_log_t, radius_log_t)

	manage_files_pattern($1, radius_etc_rw_t, radius_etc_rw_t)

	files_list_var_lib($1)
	manage_files_pattern($1, radius_var_lib_t, radius_var_lib_t)

	files_list_pids($1)
	manage_files_pattern($1, radius_var_run_t, radius_var_run_t)
')
