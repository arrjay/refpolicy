## <summary>Squid caching http proxy server</summary>

########################################
## <summary>
##	Execute squid in the squid domain.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`squid_domtrans',`
	gen_require(`
		type squid_t, squid_exec_t;
	')

	corecmd_search_bin($1)
	domtrans_pattern($1,squid_exec_t,squid_t)
')

########################################
## <summary>
##	Do not audit attempts to search squid cache dirs
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <rolecap/>
#
interface(`squid_dontaudit_search_cache',`
	gen_require(`
		type squid_cache_t;
	')

	dontaudit $1 squid_cache_t:dir search_dir_perms;
')

########################################
## <summary>
##	Read squid configuration file.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`squid_read_config',`
	gen_require(`
		type squid_conf_t;
	')

	files_search_etc($1)
	read_files_pattern($1, squid_conf_t, squid_conf_t)
')

########################################
## <summary>
##	Append squid logs.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`squid_read_log',`
	gen_require(`
		type squid_log_t;
	')

	logging_search_logs($1)
	read_files_pattern($1,squid_log_t,squid_log_t)
')

########################################
## <summary>
##	Append squid logs.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`squid_append_log',`
	gen_require(`
		type squid_log_t;
	')

	logging_search_logs($1)
	append_files_pattern($1,squid_log_t,squid_log_t)
')

########################################
## <summary>
##	Create, read, write, and delete
##	squid logs.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`squid_manage_logs',`
	gen_require(`
		type squid_log_t;
	')

	logging_search_logs($1)
	manage_files_pattern($1,squid_log_t,squid_log_t)
')

########################################
## <summary>
##	Use squid services by connecting over TCP.  (Deprecated)
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`squid_use',`
	refpolicywarn(`$0($*) has been deprecated.')
')
