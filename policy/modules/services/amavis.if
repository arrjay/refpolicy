## <summary>
##	Daemon that interfaces mail transfer agents and content
##	checkers, such as virus scanners.
## </summary>

########################################
## <summary>
##	Execute a domain transition to run amavis.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`amavis_domtrans',`
	gen_require(`
		type amavis_t, amavis_exec_t;
	')

	domtrans_pattern($1,amavis_exec_t,amavis_t)
')

########################################
## <summary>
##	Read amavis spool files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amavis_read_spool_files',`
	gen_require(`
		type amavis_spool_t;
	')

	files_search_spool($1)
	allow $1 amavis_spool_t:file { getattr read };
')

########################################
## <summary>
##	Manage amavis spool files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amavis_manage_spool_files',`
	gen_require(`
		type amavis_spool_t;
	')

	files_search_spool($1)
	manage_dirs_pattern($1,amavis_spool_t,amavis_spool_t)
	manage_files_pattern($1,amavis_spool_t,amavis_spool_t)
')

########################################
## <summary>
##	Create objects in the amavis spool directories
##	with a private type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="private_type">
##	<summary>
##	Private file type.
##	</summary>
## </param>
## <param name="object_class">
##	<summary>
##	Class of the object being created.
##	</summary>
## </param>
#
interface(`amavis_spool_filetrans',`
	gen_require(`
		type amavis_spool_t;
	')

	files_search_spool($1)
	filetrans_pattern($1,amavis_spool_t,$2,$3)
')

########################################
## <summary>
##	Search amavis lib directories.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amavis_search_lib',`
	gen_require(`
		type amavis_var_lib_t;
	')

	allow $1 amavis_var_lib_t:dir search_dir_perms;
	files_search_var_lib($1)
')

########################################
## <summary>
##	Read amavis lib files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amavis_read_lib_files',`
	gen_require(`
		type amavis_var_lib_t;
	')

	read_files_pattern($1,amavis_var_lib_t,amavis_var_lib_t)
	allow $1 amavis_var_lib_t:dir list_dir_perms;
	files_search_var_lib($1)
')

########################################
## <summary>
##	Create, read, write, and delete
##	amavis lib files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amavis_manage_lib_files',`
	gen_require(`
		type amavis_var_lib_t;
	')

	manage_files_pattern($1,amavis_var_lib_t,amavis_var_lib_t)
	files_search_var_lib($1)
')

########################################
## <summary>
##	Set the attributes of amavis pid files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amavis_setattr_pid_files',`
	gen_require(`
		type amavis_var_run_t;
	')

	allow $1 amavis_var_run_t:file setattr;
	files_search_pids($1)
')

########################################
## <summary>
##	Create of amavis pid files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amavis_create_pid_files',`
	gen_require(`
		type amavis_var_run_t;
	')

	allow $1 amavis_var_run_t:file create_file_perms;
	files_search_pids($1)
')
