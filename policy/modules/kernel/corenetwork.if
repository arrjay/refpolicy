#
# This is a generated file!  Instead of modifying this file, the
# corenetwork.if.in or corenetwork.if.m4 file should be modified.
#
## <summary>Policy controlling access to network objects</summary>
## <required val="true">
##	Contains the initial SIDs for network objects.
## </required>

########################################
## <summary>
##	Send and receive TCP network traffic on the generic interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_generic_if',`
	gen_require(`
		type netif_t;
	')

	allow $1 netif_t:netif { tcp_send tcp_recv };
')

########################################
## <summary>
##	Send UDP network traffic on generic interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_send_generic_if',`
	gen_require(`
		type netif_t;
	')

	allow $1 netif_t:netif udp_send;
')

########################################
## <summary>
##	Dontaudit attempts to send UDP network traffic
##	on generic interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_udp_send_generic_if',`
	gen_require(`
		type netif_t;
	')

	dontaudit $1 netif_t:netif udp_send;
')

########################################
## <summary>
##	Receive UDP network traffic on generic interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_receive_generic_if',`
	gen_require(`
		type netif_t;
	')

	allow $1 netif_t:netif udp_recv;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP network
##	traffic on generic interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_udp_receive_generic_if',`
	gen_require(`
		type netif_t;
	')

	dontaudit $1 netif_t:netif udp_recv;
')

########################################
## <summary>
##	Send and Receive UDP network traffic on generic interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_sendrecv_generic_if',`
	corenet_udp_send_generic_if($1)
	corenet_udp_receive_generic_if($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive UDP network
##	traffic on generic interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_udp_sendrecv_generic_if',`
	corenet_dontaudit_udp_send_generic_if($1)
	corenet_dontaudit_udp_receive_generic_if($1)
')

########################################
## <summary>
##	Send raw IP packets on generic interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_raw_send_generic_if',`
	gen_require(`
		type netif_t;
	')

	allow $1 netif_t:netif rawip_send;
')

########################################
## <summary>
##	Receive raw IP packets on generic interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_raw_receive_generic_if',`
	gen_require(`
		type netif_t;
	')

	allow $1 netif_t:netif rawip_recv;
')

########################################
## <summary>
##	Send and receive raw IP packets on generic interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_raw_sendrecv_generic_if',`
	corenet_raw_send_generic_if($1)
	corenet_raw_receive_generic_if($1)
')

########################################
## <summary>
##	Send and receive TCP network traffic on all interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_sendrecv_all_if',`
	gen_require(`
		attribute netif_type;
	')

	allow $1 netif_type:netif { tcp_send tcp_recv };
')

########################################
## <summary>
##	Send UDP network traffic on all interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_send_all_if',`
	gen_require(`
		attribute netif_type;
	')

	allow $1 netif_type:netif udp_send;
')

########################################
## <summary>
##	Receive UDP network traffic on all interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_receive_all_if',`
	gen_require(`
		attribute netif_type;
	')

	allow $1 netif_type:netif udp_recv;
')

########################################
## <summary>
##	Send and receive UDP network traffic on all interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_sendrecv_all_if',`
	corenet_udp_send_all_if($1)
	corenet_udp_receive_all_if($1)
')

########################################
## <summary>
##	Send raw IP packets on all interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_raw_send_all_if',`
	gen_require(`
		attribute netif_type;
	')

	allow $1 netif_type:netif rawip_send;
')

########################################
## <summary>
##	Receive raw IP packets on all interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_raw_receive_all_if',`
	gen_require(`
		attribute netif_type;
	')

	allow $1 netif_type:netif rawip_recv;
')

########################################
## <summary>
##	Send and receive raw IP packets on all interfaces.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_raw_sendrecv_all_if',`
	corenet_raw_send_all_if($1)
	corenet_raw_receive_all_if($1)
')

########################################
## <summary>
##	Send and receive TCP network traffic on generic nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_sendrecv_generic_node',`
	gen_require(`
		type node_t;
	')

	allow $1 node_t:node { tcp_send tcp_recv };
')

########################################
## <summary>
##	Send UDP network traffic on generic nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_send_generic_node',`
	gen_require(`
		type node_t;
	')

	allow $1 node_t:node udp_send;
')

########################################
## <summary>
##	Receive UDP network traffic on generic nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_receive_generic_node',`
	gen_require(`
		type node_t;
	')

	allow $1 node_t:node udp_recv;
')

########################################
## <summary>
##	Send and receive UDP network traffic on generic nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_sendrecv_generic_node',`
	corenet_udp_send_generic_node($1)
	corenet_udp_receive_generic_node($1)
')

########################################
## <summary>
##	Send raw IP packets on generic nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_raw_send_generic_node',`
	gen_require(`
		type node_t;
	')

	allow $1 node_t:node rawip_send;
')

########################################
## <summary>
##	Receive raw IP packets on generic nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_raw_receive_generic_node',`
	gen_require(`
		type node_t;
	')

	allow $1 node_t:node rawip_recv;
')

########################################
## <summary>
##	Send and receive raw IP packets on generic nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_raw_sendrecv_generic_node',`
	corenet_raw_send_generic_node($1)
	corenet_raw_receive_generic_node($1)
')

########################################
## <summary>
##	Bind TCP sockets to generic nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_bind_generic_node',`
	gen_require(`
		type node_t;
	')

	allow $1 node_t:tcp_socket node_bind;
')

########################################
## <summary>
##	Bind UDP sockets to generic nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_bind_generic_node',`
	gen_require(`
		type node_t;
	')

	allow $1 node_t:udp_socket node_bind;
')

########################################
## <summary>
##	Send and receive TCP network traffic on all nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_sendrecv_all_nodes',`
	gen_require(`
		attribute node_type;
	')

	allow $1 node_type:node { tcp_send tcp_recv };
')

########################################
## <summary>
##	Send UDP network traffic on all nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_send_all_nodes',`
	gen_require(`
		attribute node_type;
	')

	allow $1 node_type:node udp_send;
')

########################################
## <summary>
##	Do not audit attempts to send UDP network
##	traffic on any nodes.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_udp_send_all_nodes',`
	gen_require(`
		attribute node_type;
	')

	dontaudit $1 node_type:node udp_send;
')

########################################
## <summary>
##	Receive UDP network traffic on all nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_receive_all_nodes',`
	gen_require(`
		attribute node_type;
	')

	allow $1 node_type:node udp_recv;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP
##	network traffic on all nodes.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_udp_receive_all_nodes',`
	gen_require(`
		attribute node_type;
	')

	dontaudit $1 node_type:node udp_recv;
')

########################################
## <summary>
##	Send and receive UDP network traffic on all nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_sendrecv_all_nodes',`
	corenet_udp_send_all_nodes($1)
	corenet_udp_receive_all_nodes($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive UDP
##	network traffic on any nodes nodes.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_udp_sendrecv_all_nodes',`
	corenet_dontaudit_udp_send_all_nodes($1)
	corenet_dontaudit_udp_receive_all_nodes($1)
')

########################################
## <summary>
##	Send raw IP packets on all nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_raw_send_all_nodes',`
	gen_require(`
		attribute node_type;
	')

	allow $1 node_type:node rawip_send;
')

########################################
## <summary>
##	Receive raw IP packets on all nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_raw_receive_all_nodes',`
	gen_require(`
		attribute node_type;
	')

	allow $1 node_type:node rawip_recv;
')

########################################
## <summary>
##	Send and receive raw IP packets on all nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_raw_sendrecv_all_nodes',`
	corenet_raw_send_all_nodes($1)
	corenet_raw_receive_all_nodes($1)
')

########################################
## <summary>
##	Bind TCP sockets to all nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_bind_all_nodes',`
	gen_require(`
		attribute node_type;
	')

	allow $1 node_type:tcp_socket node_bind;
')

########################################
## <summary>
##	Bind UDP sockets to all nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_bind_all_nodes',`
	gen_require(`
		attribute node_type;
	')

	allow $1 node_type:udp_socket node_bind;
')

########################################
## <summary>
##	Bind raw sockets to all nodes.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
# rawip_socket node_bind does not make much sense.
# cjp: vmware hits this too
interface(`corenet_raw_bind_all_nodes',`
	gen_require(`
		attribute node_type;
	')

	allow $1 node_type:rawip_socket node_bind;
')

########################################
## <summary>
##	Send and receive TCP network traffic on generic ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_sendrecv_generic_port',`
	gen_require(`
		type port_t;
	')

	allow $1 port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Do not audit send and receive TCP network traffic on generic ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_tcp_sendrecv_generic_port',`
	gen_require(`
		type port_t;
	')

	dontaudit $1 port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP network traffic on generic ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_send_generic_port',`
	gen_require(`
		type port_t;
	')

	allow $1 port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP network traffic on generic ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_receive_generic_port',`
	gen_require(`
		type port_t;
	')

	allow $1 port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP network traffic on generic ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_sendrecv_generic_port',`
	corenet_udp_send_generic_port($1)
	corenet_udp_receive_generic_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to generic ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_bind_generic_port',`
	gen_require(`
		type port_t;
	')

	allow $1 port_t:tcp_socket name_bind;
')

########################################
## <summary>
##	Do not audit bind TCP sockets to generic ports.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_tcp_bind_generic_port',`
	gen_require(`
		type port_t;
	')

	dontaudit $1 port_t:tcp_socket name_bind;
')

########################################
## <summary>
##	Bind UDP sockets to generic ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_bind_generic_port',`
	gen_require(`
		type port_t;
	')

	allow $1 port_t:udp_socket name_bind;
')

########################################
## <summary>
##	Connect TCP sockets to generic ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_generic_port',`
	gen_require(`
		type port_t;
	')

	allow $1 port_t:tcp_socket name_connect;
')

########################################
## <summary>
##	Send and receive TCP network traffic on all ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_sendrecv_all_ports',`
	gen_require(`
		attribute port_type;
	')

	allow $1 port_type:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP network traffic on all ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_send_all_ports',`
	gen_require(`
		attribute port_type;
	')

	allow $1 port_type:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP network traffic on all ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_receive_all_ports',`
	gen_require(`
		attribute port_type;
	')

	allow $1 port_type:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP network traffic on all ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_sendrecv_all_ports',`
	corenet_udp_send_all_ports($1)
	corenet_udp_receive_all_ports($1)
')

########################################
## <summary>
##	Bind TCP sockets to all ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_bind_all_ports',`
	gen_require(`
		attribute port_type;
	')

	allow $1 port_type:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Do not audit attepts to bind TCP sockets to any ports.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_tcp_bind_all_ports',`
	gen_require(`
		attribute port_type;
	')

	dontaudit $1 port_type:tcp_socket name_bind;
')

########################################
## <summary>
##	Bind UDP sockets to all ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_bind_all_ports',`
	gen_require(`
		attribute port_type;
	')

	allow $1 port_type:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Connect TCP sockets to all ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_all_ports',`
	gen_require(`
		attribute port_type;
	')

	allow $1 port_type:tcp_socket name_connect;
')

########################################
## <summary>
##	Send and receive TCP network traffic on generic reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_sendrecv_reserved_port',`
	gen_require(`
		type reserved_port_t;
	')

	allow $1 reserved_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP network traffic on generic reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_send_reserved_port',`
	gen_require(`
		type reserved_port_t;
	')

	allow $1 reserved_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP network traffic on generic reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_receive_reserved_port',`
	gen_require(`
		type reserved_port_t;
	')

	allow $1 reserved_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP network traffic on generic reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_sendrecv_reserved_port',`
	corenet_udp_send_reserved_port($1)
	corenet_udp_receive_reserved_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to generic reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_bind_reserved_port',`
	gen_require(`
		type reserved_port_t;
	')

	allow $1 reserved_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to generic reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_bind_reserved_port',`
	gen_require(`
		type reserved_port_t;
	')

	allow $1 reserved_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Connect TCP sockets to generic reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_reserved_port',`
	gen_require(`
		type reserved_port_t;
	')

	allow $1 reserved_port_t:tcp_socket name_connect;
')

########################################
## <summary>
##	Send and receive TCP network traffic on all reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_sendrecv_all_reserved_ports',`
	gen_require(`
		attribute reserved_port_type;
	')

	allow $1 reserved_port_type:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP network traffic on all reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_send_all_reserved_ports',`
	gen_require(`
		attribute reserved_port_type;
	')

	allow $1 reserved_port_type:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP network traffic on all reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_receive_all_reserved_ports',`
	gen_require(`
		attribute reserved_port_type;
	')

	allow $1 reserved_port_type:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP network traffic on all reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_sendrecv_all_reserved_ports',`
	corenet_udp_send_all_reserved_ports($1)
	corenet_udp_receive_all_reserved_ports($1)
')

########################################
## <summary>
##	Bind TCP sockets to all reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_bind_all_reserved_ports',`
	gen_require(`
		attribute reserved_port_type;
	')

	allow $1 reserved_port_type:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Do not audit attempts to bind TCP sockets to all reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_tcp_bind_all_reserved_ports',`
	gen_require(`
		attribute reserved_port_type;
	')

	dontaudit $1 reserved_port_type:tcp_socket name_bind;
')

########################################
## <summary>
##	Bind UDP sockets to all reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_bind_all_reserved_ports',`
	gen_require(`
		attribute reserved_port_type;
	')

	allow $1 reserved_port_type:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Do not audit attempts to bind UDP sockets to all reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_udp_bind_all_reserved_ports',`
	gen_require(`
		attribute reserved_port_type;
	')

	dontaudit $1 reserved_port_type:udp_socket name_bind;
')

########################################
## <summary>
##      Connect TCP sockets to reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##      The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_all_reserved_ports',`
	gen_require(`
		attribute reserved_port_type;
	')

	allow $1 reserved_port_type:tcp_socket name_connect;
')

########################################
## <summary>
##	Do not audit attempts to connect TCP sockets
##	all reserved ports.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_tcp_connect_all_reserved_ports',`
	gen_require(`
		attribute reserved_port_type;
	')

	dontaudit $1 reserved_port_type:tcp_socket name_connect;
')

########################################
## <summary>
##	Read and write the TUN/TAP virtual network device.
## </summary>
## <param name="domain">
##	<summary>
##	The domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_rw_tun_tap_dev',`
	gen_require(`
		type tun_tap_device_t;
	')

	dev_list_all_dev_nodes($1)
	allow $1 tun_tap_device_t:chr_file { getattr read write ioctl  lock append };
')

########################################
## <summary>
##	Read and write the point-to-point device.
## </summary>
## <param name="domain">
##	<summary>
##	The domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_rw_ppp_dev',`
	gen_require(`
		type ppp_device_t;
	')

	dev_list_all_dev_nodes($1)
	allow $1 ppp_device_t:chr_file rw_file_perms;
')

########################################
## <summary>
##	Bind TCP sockets to all RPC ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_tcp_bind_all_rpc_ports',`
	gen_require(`
		attribute rpc_port_type;
	')

	allow $1 rpc_port_type:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Do not audit attempts to bind TCP sockets to all RPC ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_tcp_bind_all_rpc_ports',`
	gen_require(`
		attribute rpc_port_type;
	')

	dontaudit $1 rpc_port_type:tcp_socket name_bind;
')

########################################
## <summary>
##	Bind UDP sockets to all RPC ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`corenet_udp_bind_all_rpc_ports',`
	gen_require(`
		attribute rpc_port_type;
	')

	allow $1 rpc_port_type:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Do not audit attempts to bind UDP sockets to all RPC ports.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_udp_bind_all_rpc_ports',`
	gen_require(`
		attribute rpc_port_type;
	')

	dontaudit $1 rpc_port_type:udp_socket name_bind;
')

########################################
## <summary>
##	Send and receive messages on a
##	non-encrypted (no IPSEC) network
##	session.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_non_ipsec_sendrecv',`
	kernel_sendrecv_unlabeled_association($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	messages on a non-encrypted (no IPSEC) network
##	session.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_non_ipsec_sendrecv',`
	kernel_dontaudit_sendrecv_unlabeled_association($1)
')

########################################
## <summary>
##      Receive TCP packets from a NetLabel connection.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_recv_netlabel',`
	kernel_tcp_recvfrom_unlabeled($1)
')

########################################
## <summary>
##      Do not audit attempts to receive TCP packets from a NetLabel
##      connection.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_tcp_recv_netlabel',`
	kernel_dontaudit_tcp_recvfrom_unlabeled($1)
')

########################################
## <summary>
##      Receive UDP packets from a NetLabel connection.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_udp_recv_netlabel',`
	kernel_udp_recvfrom_unlabeled($1)
')

########################################
## <summary>
##      Do not audit attempts to receive UDP packets from a NetLabel
##      connection.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`corenet_dontaudit_udp_recv_netlabel',`
	kernel_dontaudit_udp_recvfrom_unlabeled($1)
')

########################################
## <summary>
##	Send generic client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_send_generic_client_packets',`
	gen_require(`
		type client_packet_t;
	')

	allow $1 client_packet_t:packet send;
')

########################################
## <summary>
##	Receive generic client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_receive_generic_client_packets',`
	gen_require(`
		type client_packet_t;
	')

	allow $1 client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive generic client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_sendrecv_generic_client_packets',`
	corenet_send_generic_client_packets($1)
	corenet_receive_generic_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to the generic client packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_generic_client_packets',`
	gen_require(`
		type client_packet_t;
	')

	allow $1 client_packet_t:packet relabelto;
')

########################################
## <summary>
##	Send generic server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_send_generic_server_packets',`
	gen_require(`
		type server_packet_t;
	')

	allow $1 server_packet_t:packet send;
')

########################################
## <summary>
##	Receive generic server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_receive_generic_server_packets',`
	gen_require(`
		type server_packet_t;
	')

	allow $1 server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive generic server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_sendrecv_generic_server_packets',`
	corenet_send_generic_server_packets($1)
	corenet_receive_generic_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to the generic server packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_generic_server_packets',`
	gen_require(`
		type server_packet_t;
	')

	allow $1 server_packet_t:packet relabelto;
')

########################################
## <summary>
##	Send and receive unlabeled packets.
## </summary>
## <desc>
##	<p>
##	Send and receive unlabeled packets.
##	These packets do not match any netfilter
##	SECMARK rules.
##	</p>
## </desc>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_sendrecv_unlabeled_packets',`
	kernel_sendrecv_unlabeled_packets($1)
')

########################################
## <summary>
##	Send all client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_send_all_client_packets',`
	gen_require(`
		attribute client_packet_type;
	')

	allow $1 client_packet_type:packet send;
')

########################################
## <summary>
##	Receive all client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_receive_all_client_packets',`
	gen_require(`
		attribute client_packet_type;
	')

	allow $1 client_packet_type:packet recv;
')

########################################
## <summary>
##	Send and receive all client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_sendrecv_all_client_packets',`
	corenet_send_all_client_packets($1)
	corenet_receive_all_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to any client packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_all_client_packets',`
	gen_require(`
		attribute client_packet_type;
	')

	allow $1 client_packet_type:packet relabelto;
')

########################################
## <summary>
##	Send all server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_send_all_server_packets',`
	gen_require(`
		attribute server_packet_type;
	')

	allow $1 server_packet_type:packet send;
')

########################################
## <summary>
##	Receive all server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_receive_all_server_packets',`
	gen_require(`
		attribute server_packet_type;
	')

	allow $1 server_packet_type:packet recv;
')

########################################
## <summary>
##	Send and receive all server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_sendrecv_all_server_packets',`
	corenet_send_all_server_packets($1)
	corenet_receive_all_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to any server packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_all_server_packets',`
	gen_require(`
		attribute server_packet_type;
	')

	allow $1 server_packet_type:packet relabelto;
')

########################################
## <summary>
##	Send all packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_send_all_packets',`
	gen_require(`
		attribute packet_type;
	')

	allow $1 packet_type:packet send;
')

########################################
## <summary>
##	Receive all packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_receive_all_packets',`
	gen_require(`
		attribute packet_type;
	')

	allow $1 packet_type:packet recv;
')

########################################
## <summary>
##	Send and receive all packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_sendrecv_all_packets',`
	corenet_send_all_packets($1)
	corenet_receive_all_packets($1)
')

########################################
## <summary>
##	Relabel packets to any packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_all_packets',`
	gen_require(`
		attribute packet_type;
	')

	allow $1 packet_type:packet relabelto;
')

########################################
## <summary>
##	Unconfined access to network objects.
## </summary>
## <param name="domain">
##	<summary>
##	The domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_unconfined',`
	gen_require(`
		attribute corenet_unconfined_type;
	')

	typeattribute $1 corenet_unconfined_type;
')
#
# shiftn(num,list...)
#
# shift the list num times
#


########################################
#
# Network Interface generated macros 
#
########################################

 
########################################
#
# Network node generated macros 
#
########################################

 
########################################
#
# Network port generated macros 
#
########################################

 
 
#
# create_netif_*_interfaces(linux_interfacename)
#



#
# network_interface(linux_interfacename,mls_sensitivity)
#


#
# create_node_*_interfaces(node_name)
#



#
# network_node(node_name,mls_sensitivity,address,netmask)
#


# These next three macros have formatting, and should not me indented
 
#
# create_port_*_interfaces(port_name, protocol,portnum,mls_sensitivity [,protocol portnum mls_sensitivity[,...]])
# (these wrap create_port_interfaces to handle attributes and types)



#
# network_port(port_name,protocol portnum mls_sensitivity [,protocol,portnum,mls_sensitivity[,...]])
#


#
# network_packet(packet_name)
#



########################################
## <summary>
##	Send and receive TCP traffic on the afs_bos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_afs_bos_port',`
	gen_require(`
		type afs_bos_port_t;
	')

	allow $1 afs_bos_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the afs_bos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_afs_bos_port',`
	gen_require(`
		type afs_bos_port_t;
	')

	allow $1 afs_bos_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the afs_bos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_afs_bos_port',`
	gen_require(`
		type afs_bos_port_t;
	')

	dontaudit $1 afs_bos_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the afs_bos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_afs_bos_port',`
	gen_require(`
		type afs_bos_port_t;
	')

	allow $1 afs_bos_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the afs_bos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_afs_bos_port',`
	gen_require(`
		type afs_bos_port_t;
	')

	dontaudit $1 afs_bos_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the afs_bos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_afs_bos_port',`
	corenet_udp_send_afs_bos_port($1)
	corenet_udp_receive_afs_bos_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the afs_bos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_afs_bos_port',`
	corenet_dontaudit_udp_send_afs_bos_port($1)
	corenet_dontaudit_udp_receive_afs_bos_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the afs_bos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_afs_bos_port',`
	gen_require(`
		type afs_bos_port_t;
	')

	allow $1 afs_bos_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the afs_bos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_afs_bos_port',`
	gen_require(`
		type afs_bos_port_t;
	')

	allow $1 afs_bos_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the afs_bos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_afs_bos_port',`
	gen_require(`
		type afs_bos_port_t;
	')

	allow $1 afs_bos_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send afs_bos_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_afs_bos_client_packets',`
	gen_require(`
		type afs_bos_client_packet_t;
	')

	allow $1 afs_bos_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send afs_bos_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_afs_bos_client_packets',`
	gen_require(`
		type afs_bos_client_packet_t;
	')

	dontaudit $1 afs_bos_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive afs_bos_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_afs_bos_client_packets',`
	gen_require(`
		type afs_bos_client_packet_t;
	')

	allow $1 afs_bos_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive afs_bos_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_afs_bos_client_packets',`
	gen_require(`
		type afs_bos_client_packet_t;
	')

	dontaudit $1 afs_bos_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive afs_bos_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_afs_bos_client_packets',`
	corenet_send_afs_bos_client_packets($1)
	corenet_receive_afs_bos_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive afs_bos_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_afs_bos_client_packets',`
	corenet_dontaudit_send_afs_bos_client_packets($1)
	corenet_dontaudit_receive_afs_bos_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to afs_bos_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_afs_bos_client_packets',`
	gen_require(`
		type afs_bos_client_packet_t;
	')

	allow $1 afs_bos_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send afs_bos_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_afs_bos_server_packets',`
	gen_require(`
		type afs_bos_server_packet_t;
	')

	allow $1 afs_bos_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send afs_bos_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_afs_bos_server_packets',`
	gen_require(`
		type afs_bos_server_packet_t;
	')

	dontaudit $1 afs_bos_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive afs_bos_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_afs_bos_server_packets',`
	gen_require(`
		type afs_bos_server_packet_t;
	')

	allow $1 afs_bos_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive afs_bos_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_afs_bos_server_packets',`
	gen_require(`
		type afs_bos_server_packet_t;
	')

	dontaudit $1 afs_bos_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive afs_bos_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_afs_bos_server_packets',`
	corenet_send_afs_bos_server_packets($1)
	corenet_receive_afs_bos_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive afs_bos_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_afs_bos_server_packets',`
	corenet_dontaudit_send_afs_bos_server_packets($1)
	corenet_dontaudit_receive_afs_bos_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to afs_bos_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_afs_bos_server_packets',`
	gen_require(`
		type afs_bos_server_packet_t;
	')

	allow $1 afs_bos_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the afs_fs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_afs_fs_port',`
	gen_require(`
		type afs_fs_port_t;
	')

	allow $1 afs_fs_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the afs_fs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_afs_fs_port',`
	gen_require(`
		type afs_fs_port_t;
	')

	allow $1 afs_fs_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the afs_fs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_afs_fs_port',`
	gen_require(`
		type afs_fs_port_t;
	')

	dontaudit $1 afs_fs_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the afs_fs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_afs_fs_port',`
	gen_require(`
		type afs_fs_port_t;
	')

	allow $1 afs_fs_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the afs_fs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_afs_fs_port',`
	gen_require(`
		type afs_fs_port_t;
	')

	dontaudit $1 afs_fs_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the afs_fs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_afs_fs_port',`
	corenet_udp_send_afs_fs_port($1)
	corenet_udp_receive_afs_fs_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the afs_fs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_afs_fs_port',`
	corenet_dontaudit_udp_send_afs_fs_port($1)
	corenet_dontaudit_udp_receive_afs_fs_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the afs_fs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_afs_fs_port',`
	gen_require(`
		type afs_fs_port_t;
	')

	allow $1 afs_fs_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the afs_fs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_afs_fs_port',`
	gen_require(`
		type afs_fs_port_t;
	')

	allow $1 afs_fs_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the afs_fs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_afs_fs_port',`
	gen_require(`
		type afs_fs_port_t;
	')

	allow $1 afs_fs_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send afs_fs_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_afs_fs_client_packets',`
	gen_require(`
		type afs_fs_client_packet_t;
	')

	allow $1 afs_fs_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send afs_fs_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_afs_fs_client_packets',`
	gen_require(`
		type afs_fs_client_packet_t;
	')

	dontaudit $1 afs_fs_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive afs_fs_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_afs_fs_client_packets',`
	gen_require(`
		type afs_fs_client_packet_t;
	')

	allow $1 afs_fs_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive afs_fs_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_afs_fs_client_packets',`
	gen_require(`
		type afs_fs_client_packet_t;
	')

	dontaudit $1 afs_fs_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive afs_fs_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_afs_fs_client_packets',`
	corenet_send_afs_fs_client_packets($1)
	corenet_receive_afs_fs_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive afs_fs_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_afs_fs_client_packets',`
	corenet_dontaudit_send_afs_fs_client_packets($1)
	corenet_dontaudit_receive_afs_fs_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to afs_fs_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_afs_fs_client_packets',`
	gen_require(`
		type afs_fs_client_packet_t;
	')

	allow $1 afs_fs_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send afs_fs_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_afs_fs_server_packets',`
	gen_require(`
		type afs_fs_server_packet_t;
	')

	allow $1 afs_fs_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send afs_fs_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_afs_fs_server_packets',`
	gen_require(`
		type afs_fs_server_packet_t;
	')

	dontaudit $1 afs_fs_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive afs_fs_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_afs_fs_server_packets',`
	gen_require(`
		type afs_fs_server_packet_t;
	')

	allow $1 afs_fs_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive afs_fs_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_afs_fs_server_packets',`
	gen_require(`
		type afs_fs_server_packet_t;
	')

	dontaudit $1 afs_fs_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive afs_fs_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_afs_fs_server_packets',`
	corenet_send_afs_fs_server_packets($1)
	corenet_receive_afs_fs_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive afs_fs_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_afs_fs_server_packets',`
	corenet_dontaudit_send_afs_fs_server_packets($1)
	corenet_dontaudit_receive_afs_fs_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to afs_fs_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_afs_fs_server_packets',`
	gen_require(`
		type afs_fs_server_packet_t;
	')

	allow $1 afs_fs_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the afs_ka port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_afs_ka_port',`
	gen_require(`
		type afs_ka_port_t;
	')

	allow $1 afs_ka_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the afs_ka port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_afs_ka_port',`
	gen_require(`
		type afs_ka_port_t;
	')

	allow $1 afs_ka_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the afs_ka port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_afs_ka_port',`
	gen_require(`
		type afs_ka_port_t;
	')

	dontaudit $1 afs_ka_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the afs_ka port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_afs_ka_port',`
	gen_require(`
		type afs_ka_port_t;
	')

	allow $1 afs_ka_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the afs_ka port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_afs_ka_port',`
	gen_require(`
		type afs_ka_port_t;
	')

	dontaudit $1 afs_ka_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the afs_ka port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_afs_ka_port',`
	corenet_udp_send_afs_ka_port($1)
	corenet_udp_receive_afs_ka_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the afs_ka port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_afs_ka_port',`
	corenet_dontaudit_udp_send_afs_ka_port($1)
	corenet_dontaudit_udp_receive_afs_ka_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the afs_ka port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_afs_ka_port',`
	gen_require(`
		type afs_ka_port_t;
	')

	allow $1 afs_ka_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the afs_ka port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_afs_ka_port',`
	gen_require(`
		type afs_ka_port_t;
	')

	allow $1 afs_ka_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the afs_ka port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_afs_ka_port',`
	gen_require(`
		type afs_ka_port_t;
	')

	allow $1 afs_ka_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send afs_ka_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_afs_ka_client_packets',`
	gen_require(`
		type afs_ka_client_packet_t;
	')

	allow $1 afs_ka_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send afs_ka_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_afs_ka_client_packets',`
	gen_require(`
		type afs_ka_client_packet_t;
	')

	dontaudit $1 afs_ka_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive afs_ka_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_afs_ka_client_packets',`
	gen_require(`
		type afs_ka_client_packet_t;
	')

	allow $1 afs_ka_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive afs_ka_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_afs_ka_client_packets',`
	gen_require(`
		type afs_ka_client_packet_t;
	')

	dontaudit $1 afs_ka_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive afs_ka_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_afs_ka_client_packets',`
	corenet_send_afs_ka_client_packets($1)
	corenet_receive_afs_ka_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive afs_ka_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_afs_ka_client_packets',`
	corenet_dontaudit_send_afs_ka_client_packets($1)
	corenet_dontaudit_receive_afs_ka_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to afs_ka_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_afs_ka_client_packets',`
	gen_require(`
		type afs_ka_client_packet_t;
	')

	allow $1 afs_ka_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send afs_ka_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_afs_ka_server_packets',`
	gen_require(`
		type afs_ka_server_packet_t;
	')

	allow $1 afs_ka_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send afs_ka_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_afs_ka_server_packets',`
	gen_require(`
		type afs_ka_server_packet_t;
	')

	dontaudit $1 afs_ka_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive afs_ka_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_afs_ka_server_packets',`
	gen_require(`
		type afs_ka_server_packet_t;
	')

	allow $1 afs_ka_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive afs_ka_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_afs_ka_server_packets',`
	gen_require(`
		type afs_ka_server_packet_t;
	')

	dontaudit $1 afs_ka_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive afs_ka_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_afs_ka_server_packets',`
	corenet_send_afs_ka_server_packets($1)
	corenet_receive_afs_ka_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive afs_ka_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_afs_ka_server_packets',`
	corenet_dontaudit_send_afs_ka_server_packets($1)
	corenet_dontaudit_receive_afs_ka_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to afs_ka_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_afs_ka_server_packets',`
	gen_require(`
		type afs_ka_server_packet_t;
	')

	allow $1 afs_ka_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the afs_pt port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_afs_pt_port',`
	gen_require(`
		type afs_pt_port_t;
	')

	allow $1 afs_pt_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the afs_pt port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_afs_pt_port',`
	gen_require(`
		type afs_pt_port_t;
	')

	allow $1 afs_pt_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the afs_pt port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_afs_pt_port',`
	gen_require(`
		type afs_pt_port_t;
	')

	dontaudit $1 afs_pt_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the afs_pt port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_afs_pt_port',`
	gen_require(`
		type afs_pt_port_t;
	')

	allow $1 afs_pt_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the afs_pt port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_afs_pt_port',`
	gen_require(`
		type afs_pt_port_t;
	')

	dontaudit $1 afs_pt_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the afs_pt port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_afs_pt_port',`
	corenet_udp_send_afs_pt_port($1)
	corenet_udp_receive_afs_pt_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the afs_pt port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_afs_pt_port',`
	corenet_dontaudit_udp_send_afs_pt_port($1)
	corenet_dontaudit_udp_receive_afs_pt_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the afs_pt port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_afs_pt_port',`
	gen_require(`
		type afs_pt_port_t;
	')

	allow $1 afs_pt_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the afs_pt port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_afs_pt_port',`
	gen_require(`
		type afs_pt_port_t;
	')

	allow $1 afs_pt_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the afs_pt port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_afs_pt_port',`
	gen_require(`
		type afs_pt_port_t;
	')

	allow $1 afs_pt_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send afs_pt_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_afs_pt_client_packets',`
	gen_require(`
		type afs_pt_client_packet_t;
	')

	allow $1 afs_pt_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send afs_pt_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_afs_pt_client_packets',`
	gen_require(`
		type afs_pt_client_packet_t;
	')

	dontaudit $1 afs_pt_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive afs_pt_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_afs_pt_client_packets',`
	gen_require(`
		type afs_pt_client_packet_t;
	')

	allow $1 afs_pt_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive afs_pt_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_afs_pt_client_packets',`
	gen_require(`
		type afs_pt_client_packet_t;
	')

	dontaudit $1 afs_pt_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive afs_pt_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_afs_pt_client_packets',`
	corenet_send_afs_pt_client_packets($1)
	corenet_receive_afs_pt_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive afs_pt_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_afs_pt_client_packets',`
	corenet_dontaudit_send_afs_pt_client_packets($1)
	corenet_dontaudit_receive_afs_pt_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to afs_pt_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_afs_pt_client_packets',`
	gen_require(`
		type afs_pt_client_packet_t;
	')

	allow $1 afs_pt_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send afs_pt_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_afs_pt_server_packets',`
	gen_require(`
		type afs_pt_server_packet_t;
	')

	allow $1 afs_pt_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send afs_pt_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_afs_pt_server_packets',`
	gen_require(`
		type afs_pt_server_packet_t;
	')

	dontaudit $1 afs_pt_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive afs_pt_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_afs_pt_server_packets',`
	gen_require(`
		type afs_pt_server_packet_t;
	')

	allow $1 afs_pt_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive afs_pt_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_afs_pt_server_packets',`
	gen_require(`
		type afs_pt_server_packet_t;
	')

	dontaudit $1 afs_pt_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive afs_pt_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_afs_pt_server_packets',`
	corenet_send_afs_pt_server_packets($1)
	corenet_receive_afs_pt_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive afs_pt_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_afs_pt_server_packets',`
	corenet_dontaudit_send_afs_pt_server_packets($1)
	corenet_dontaudit_receive_afs_pt_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to afs_pt_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_afs_pt_server_packets',`
	gen_require(`
		type afs_pt_server_packet_t;
	')

	allow $1 afs_pt_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the afs_vl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_afs_vl_port',`
	gen_require(`
		type afs_vl_port_t;
	')

	allow $1 afs_vl_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the afs_vl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_afs_vl_port',`
	gen_require(`
		type afs_vl_port_t;
	')

	allow $1 afs_vl_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the afs_vl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_afs_vl_port',`
	gen_require(`
		type afs_vl_port_t;
	')

	dontaudit $1 afs_vl_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the afs_vl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_afs_vl_port',`
	gen_require(`
		type afs_vl_port_t;
	')

	allow $1 afs_vl_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the afs_vl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_afs_vl_port',`
	gen_require(`
		type afs_vl_port_t;
	')

	dontaudit $1 afs_vl_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the afs_vl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_afs_vl_port',`
	corenet_udp_send_afs_vl_port($1)
	corenet_udp_receive_afs_vl_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the afs_vl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_afs_vl_port',`
	corenet_dontaudit_udp_send_afs_vl_port($1)
	corenet_dontaudit_udp_receive_afs_vl_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the afs_vl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_afs_vl_port',`
	gen_require(`
		type afs_vl_port_t;
	')

	allow $1 afs_vl_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the afs_vl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_afs_vl_port',`
	gen_require(`
		type afs_vl_port_t;
	')

	allow $1 afs_vl_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the afs_vl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_afs_vl_port',`
	gen_require(`
		type afs_vl_port_t;
	')

	allow $1 afs_vl_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send afs_vl_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_afs_vl_client_packets',`
	gen_require(`
		type afs_vl_client_packet_t;
	')

	allow $1 afs_vl_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send afs_vl_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_afs_vl_client_packets',`
	gen_require(`
		type afs_vl_client_packet_t;
	')

	dontaudit $1 afs_vl_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive afs_vl_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_afs_vl_client_packets',`
	gen_require(`
		type afs_vl_client_packet_t;
	')

	allow $1 afs_vl_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive afs_vl_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_afs_vl_client_packets',`
	gen_require(`
		type afs_vl_client_packet_t;
	')

	dontaudit $1 afs_vl_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive afs_vl_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_afs_vl_client_packets',`
	corenet_send_afs_vl_client_packets($1)
	corenet_receive_afs_vl_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive afs_vl_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_afs_vl_client_packets',`
	corenet_dontaudit_send_afs_vl_client_packets($1)
	corenet_dontaudit_receive_afs_vl_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to afs_vl_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_afs_vl_client_packets',`
	gen_require(`
		type afs_vl_client_packet_t;
	')

	allow $1 afs_vl_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send afs_vl_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_afs_vl_server_packets',`
	gen_require(`
		type afs_vl_server_packet_t;
	')

	allow $1 afs_vl_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send afs_vl_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_afs_vl_server_packets',`
	gen_require(`
		type afs_vl_server_packet_t;
	')

	dontaudit $1 afs_vl_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive afs_vl_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_afs_vl_server_packets',`
	gen_require(`
		type afs_vl_server_packet_t;
	')

	allow $1 afs_vl_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive afs_vl_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_afs_vl_server_packets',`
	gen_require(`
		type afs_vl_server_packet_t;
	')

	dontaudit $1 afs_vl_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive afs_vl_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_afs_vl_server_packets',`
	corenet_send_afs_vl_server_packets($1)
	corenet_receive_afs_vl_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive afs_vl_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_afs_vl_server_packets',`
	corenet_dontaudit_send_afs_vl_server_packets($1)
	corenet_dontaudit_receive_afs_vl_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to afs_vl_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_afs_vl_server_packets',`
	gen_require(`
		type afs_vl_server_packet_t;
	')

	allow $1 afs_vl_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the amanda port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_amanda_port',`
	gen_require(`
		type amanda_port_t;
	')

	allow $1 amanda_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the amanda port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_amanda_port',`
	gen_require(`
		type amanda_port_t;
	')

	allow $1 amanda_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the amanda port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_amanda_port',`
	gen_require(`
		type amanda_port_t;
	')

	dontaudit $1 amanda_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the amanda port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_amanda_port',`
	gen_require(`
		type amanda_port_t;
	')

	allow $1 amanda_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the amanda port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_amanda_port',`
	gen_require(`
		type amanda_port_t;
	')

	dontaudit $1 amanda_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the amanda port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_amanda_port',`
	corenet_udp_send_amanda_port($1)
	corenet_udp_receive_amanda_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the amanda port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_amanda_port',`
	corenet_dontaudit_udp_send_amanda_port($1)
	corenet_dontaudit_udp_receive_amanda_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the amanda port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_amanda_port',`
	gen_require(`
		type amanda_port_t;
	')

	allow $1 amanda_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the amanda port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_amanda_port',`
	gen_require(`
		type amanda_port_t;
	')

	allow $1 amanda_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the amanda port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_amanda_port',`
	gen_require(`
		type amanda_port_t;
	')

	allow $1 amanda_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send amanda_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_amanda_client_packets',`
	gen_require(`
		type amanda_client_packet_t;
	')

	allow $1 amanda_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send amanda_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_amanda_client_packets',`
	gen_require(`
		type amanda_client_packet_t;
	')

	dontaudit $1 amanda_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive amanda_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_amanda_client_packets',`
	gen_require(`
		type amanda_client_packet_t;
	')

	allow $1 amanda_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive amanda_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_amanda_client_packets',`
	gen_require(`
		type amanda_client_packet_t;
	')

	dontaudit $1 amanda_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive amanda_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_amanda_client_packets',`
	corenet_send_amanda_client_packets($1)
	corenet_receive_amanda_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive amanda_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_amanda_client_packets',`
	corenet_dontaudit_send_amanda_client_packets($1)
	corenet_dontaudit_receive_amanda_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to amanda_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_amanda_client_packets',`
	gen_require(`
		type amanda_client_packet_t;
	')

	allow $1 amanda_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send amanda_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_amanda_server_packets',`
	gen_require(`
		type amanda_server_packet_t;
	')

	allow $1 amanda_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send amanda_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_amanda_server_packets',`
	gen_require(`
		type amanda_server_packet_t;
	')

	dontaudit $1 amanda_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive amanda_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_amanda_server_packets',`
	gen_require(`
		type amanda_server_packet_t;
	')

	allow $1 amanda_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive amanda_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_amanda_server_packets',`
	gen_require(`
		type amanda_server_packet_t;
	')

	dontaudit $1 amanda_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive amanda_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_amanda_server_packets',`
	corenet_send_amanda_server_packets($1)
	corenet_receive_amanda_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive amanda_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_amanda_server_packets',`
	corenet_dontaudit_send_amanda_server_packets($1)
	corenet_dontaudit_receive_amanda_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to amanda_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_amanda_server_packets',`
	gen_require(`
		type amanda_server_packet_t;
	')

	allow $1 amanda_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the amavisd_recv port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_amavisd_recv_port',`
	gen_require(`
		type amavisd_recv_port_t;
	')

	allow $1 amavisd_recv_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the amavisd_recv port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_amavisd_recv_port',`
	gen_require(`
		type amavisd_recv_port_t;
	')

	allow $1 amavisd_recv_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the amavisd_recv port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_amavisd_recv_port',`
	gen_require(`
		type amavisd_recv_port_t;
	')

	dontaudit $1 amavisd_recv_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the amavisd_recv port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_amavisd_recv_port',`
	gen_require(`
		type amavisd_recv_port_t;
	')

	allow $1 amavisd_recv_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the amavisd_recv port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_amavisd_recv_port',`
	gen_require(`
		type amavisd_recv_port_t;
	')

	dontaudit $1 amavisd_recv_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the amavisd_recv port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_amavisd_recv_port',`
	corenet_udp_send_amavisd_recv_port($1)
	corenet_udp_receive_amavisd_recv_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the amavisd_recv port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_amavisd_recv_port',`
	corenet_dontaudit_udp_send_amavisd_recv_port($1)
	corenet_dontaudit_udp_receive_amavisd_recv_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the amavisd_recv port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_amavisd_recv_port',`
	gen_require(`
		type amavisd_recv_port_t;
	')

	allow $1 amavisd_recv_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the amavisd_recv port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_amavisd_recv_port',`
	gen_require(`
		type amavisd_recv_port_t;
	')

	allow $1 amavisd_recv_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the amavisd_recv port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_amavisd_recv_port',`
	gen_require(`
		type amavisd_recv_port_t;
	')

	allow $1 amavisd_recv_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send amavisd_recv_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_amavisd_recv_client_packets',`
	gen_require(`
		type amavisd_recv_client_packet_t;
	')

	allow $1 amavisd_recv_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send amavisd_recv_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_amavisd_recv_client_packets',`
	gen_require(`
		type amavisd_recv_client_packet_t;
	')

	dontaudit $1 amavisd_recv_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive amavisd_recv_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_amavisd_recv_client_packets',`
	gen_require(`
		type amavisd_recv_client_packet_t;
	')

	allow $1 amavisd_recv_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive amavisd_recv_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_amavisd_recv_client_packets',`
	gen_require(`
		type amavisd_recv_client_packet_t;
	')

	dontaudit $1 amavisd_recv_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive amavisd_recv_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_amavisd_recv_client_packets',`
	corenet_send_amavisd_recv_client_packets($1)
	corenet_receive_amavisd_recv_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive amavisd_recv_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_amavisd_recv_client_packets',`
	corenet_dontaudit_send_amavisd_recv_client_packets($1)
	corenet_dontaudit_receive_amavisd_recv_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to amavisd_recv_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_amavisd_recv_client_packets',`
	gen_require(`
		type amavisd_recv_client_packet_t;
	')

	allow $1 amavisd_recv_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send amavisd_recv_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_amavisd_recv_server_packets',`
	gen_require(`
		type amavisd_recv_server_packet_t;
	')

	allow $1 amavisd_recv_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send amavisd_recv_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_amavisd_recv_server_packets',`
	gen_require(`
		type amavisd_recv_server_packet_t;
	')

	dontaudit $1 amavisd_recv_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive amavisd_recv_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_amavisd_recv_server_packets',`
	gen_require(`
		type amavisd_recv_server_packet_t;
	')

	allow $1 amavisd_recv_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive amavisd_recv_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_amavisd_recv_server_packets',`
	gen_require(`
		type amavisd_recv_server_packet_t;
	')

	dontaudit $1 amavisd_recv_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive amavisd_recv_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_amavisd_recv_server_packets',`
	corenet_send_amavisd_recv_server_packets($1)
	corenet_receive_amavisd_recv_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive amavisd_recv_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_amavisd_recv_server_packets',`
	corenet_dontaudit_send_amavisd_recv_server_packets($1)
	corenet_dontaudit_receive_amavisd_recv_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to amavisd_recv_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_amavisd_recv_server_packets',`
	gen_require(`
		type amavisd_recv_server_packet_t;
	')

	allow $1 amavisd_recv_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the amavisd_send port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_amavisd_send_port',`
	gen_require(`
		type amavisd_send_port_t;
	')

	allow $1 amavisd_send_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the amavisd_send port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_amavisd_send_port',`
	gen_require(`
		type amavisd_send_port_t;
	')

	allow $1 amavisd_send_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the amavisd_send port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_amavisd_send_port',`
	gen_require(`
		type amavisd_send_port_t;
	')

	dontaudit $1 amavisd_send_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the amavisd_send port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_amavisd_send_port',`
	gen_require(`
		type amavisd_send_port_t;
	')

	allow $1 amavisd_send_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the amavisd_send port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_amavisd_send_port',`
	gen_require(`
		type amavisd_send_port_t;
	')

	dontaudit $1 amavisd_send_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the amavisd_send port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_amavisd_send_port',`
	corenet_udp_send_amavisd_send_port($1)
	corenet_udp_receive_amavisd_send_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the amavisd_send port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_amavisd_send_port',`
	corenet_dontaudit_udp_send_amavisd_send_port($1)
	corenet_dontaudit_udp_receive_amavisd_send_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the amavisd_send port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_amavisd_send_port',`
	gen_require(`
		type amavisd_send_port_t;
	')

	allow $1 amavisd_send_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the amavisd_send port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_amavisd_send_port',`
	gen_require(`
		type amavisd_send_port_t;
	')

	allow $1 amavisd_send_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the amavisd_send port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_amavisd_send_port',`
	gen_require(`
		type amavisd_send_port_t;
	')

	allow $1 amavisd_send_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send amavisd_send_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_amavisd_send_client_packets',`
	gen_require(`
		type amavisd_send_client_packet_t;
	')

	allow $1 amavisd_send_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send amavisd_send_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_amavisd_send_client_packets',`
	gen_require(`
		type amavisd_send_client_packet_t;
	')

	dontaudit $1 amavisd_send_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive amavisd_send_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_amavisd_send_client_packets',`
	gen_require(`
		type amavisd_send_client_packet_t;
	')

	allow $1 amavisd_send_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive amavisd_send_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_amavisd_send_client_packets',`
	gen_require(`
		type amavisd_send_client_packet_t;
	')

	dontaudit $1 amavisd_send_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive amavisd_send_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_amavisd_send_client_packets',`
	corenet_send_amavisd_send_client_packets($1)
	corenet_receive_amavisd_send_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive amavisd_send_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_amavisd_send_client_packets',`
	corenet_dontaudit_send_amavisd_send_client_packets($1)
	corenet_dontaudit_receive_amavisd_send_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to amavisd_send_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_amavisd_send_client_packets',`
	gen_require(`
		type amavisd_send_client_packet_t;
	')

	allow $1 amavisd_send_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send amavisd_send_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_amavisd_send_server_packets',`
	gen_require(`
		type amavisd_send_server_packet_t;
	')

	allow $1 amavisd_send_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send amavisd_send_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_amavisd_send_server_packets',`
	gen_require(`
		type amavisd_send_server_packet_t;
	')

	dontaudit $1 amavisd_send_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive amavisd_send_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_amavisd_send_server_packets',`
	gen_require(`
		type amavisd_send_server_packet_t;
	')

	allow $1 amavisd_send_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive amavisd_send_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_amavisd_send_server_packets',`
	gen_require(`
		type amavisd_send_server_packet_t;
	')

	dontaudit $1 amavisd_send_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive amavisd_send_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_amavisd_send_server_packets',`
	corenet_send_amavisd_send_server_packets($1)
	corenet_receive_amavisd_send_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive amavisd_send_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_amavisd_send_server_packets',`
	corenet_dontaudit_send_amavisd_send_server_packets($1)
	corenet_dontaudit_receive_amavisd_send_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to amavisd_send_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_amavisd_send_server_packets',`
	gen_require(`
		type amavisd_send_server_packet_t;
	')

	allow $1 amavisd_send_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the asterisk port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_asterisk_port',`
	gen_require(`
		type asterisk_port_t;
	')

	allow $1 asterisk_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the asterisk port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_asterisk_port',`
	gen_require(`
		type asterisk_port_t;
	')

	allow $1 asterisk_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the asterisk port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_asterisk_port',`
	gen_require(`
		type asterisk_port_t;
	')

	dontaudit $1 asterisk_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the asterisk port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_asterisk_port',`
	gen_require(`
		type asterisk_port_t;
	')

	allow $1 asterisk_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the asterisk port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_asterisk_port',`
	gen_require(`
		type asterisk_port_t;
	')

	dontaudit $1 asterisk_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the asterisk port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_asterisk_port',`
	corenet_udp_send_asterisk_port($1)
	corenet_udp_receive_asterisk_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the asterisk port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_asterisk_port',`
	corenet_dontaudit_udp_send_asterisk_port($1)
	corenet_dontaudit_udp_receive_asterisk_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the asterisk port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_asterisk_port',`
	gen_require(`
		type asterisk_port_t;
	')

	allow $1 asterisk_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the asterisk port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_asterisk_port',`
	gen_require(`
		type asterisk_port_t;
	')

	allow $1 asterisk_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the asterisk port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_asterisk_port',`
	gen_require(`
		type asterisk_port_t;
	')

	allow $1 asterisk_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send asterisk_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_asterisk_client_packets',`
	gen_require(`
		type asterisk_client_packet_t;
	')

	allow $1 asterisk_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send asterisk_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_asterisk_client_packets',`
	gen_require(`
		type asterisk_client_packet_t;
	')

	dontaudit $1 asterisk_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive asterisk_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_asterisk_client_packets',`
	gen_require(`
		type asterisk_client_packet_t;
	')

	allow $1 asterisk_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive asterisk_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_asterisk_client_packets',`
	gen_require(`
		type asterisk_client_packet_t;
	')

	dontaudit $1 asterisk_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive asterisk_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_asterisk_client_packets',`
	corenet_send_asterisk_client_packets($1)
	corenet_receive_asterisk_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive asterisk_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_asterisk_client_packets',`
	corenet_dontaudit_send_asterisk_client_packets($1)
	corenet_dontaudit_receive_asterisk_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to asterisk_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_asterisk_client_packets',`
	gen_require(`
		type asterisk_client_packet_t;
	')

	allow $1 asterisk_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send asterisk_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_asterisk_server_packets',`
	gen_require(`
		type asterisk_server_packet_t;
	')

	allow $1 asterisk_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send asterisk_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_asterisk_server_packets',`
	gen_require(`
		type asterisk_server_packet_t;
	')

	dontaudit $1 asterisk_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive asterisk_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_asterisk_server_packets',`
	gen_require(`
		type asterisk_server_packet_t;
	')

	allow $1 asterisk_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive asterisk_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_asterisk_server_packets',`
	gen_require(`
		type asterisk_server_packet_t;
	')

	dontaudit $1 asterisk_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive asterisk_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_asterisk_server_packets',`
	corenet_send_asterisk_server_packets($1)
	corenet_receive_asterisk_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive asterisk_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_asterisk_server_packets',`
	corenet_dontaudit_send_asterisk_server_packets($1)
	corenet_dontaudit_receive_asterisk_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to asterisk_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_asterisk_server_packets',`
	gen_require(`
		type asterisk_server_packet_t;
	')

	allow $1 asterisk_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the auth port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_auth_port',`
	gen_require(`
		type auth_port_t;
	')

	allow $1 auth_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the auth port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_auth_port',`
	gen_require(`
		type auth_port_t;
	')

	allow $1 auth_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the auth port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_auth_port',`
	gen_require(`
		type auth_port_t;
	')

	dontaudit $1 auth_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the auth port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_auth_port',`
	gen_require(`
		type auth_port_t;
	')

	allow $1 auth_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the auth port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_auth_port',`
	gen_require(`
		type auth_port_t;
	')

	dontaudit $1 auth_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the auth port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_auth_port',`
	corenet_udp_send_auth_port($1)
	corenet_udp_receive_auth_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the auth port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_auth_port',`
	corenet_dontaudit_udp_send_auth_port($1)
	corenet_dontaudit_udp_receive_auth_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the auth port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_auth_port',`
	gen_require(`
		type auth_port_t;
	')

	allow $1 auth_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the auth port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_auth_port',`
	gen_require(`
		type auth_port_t;
	')

	allow $1 auth_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the auth port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_auth_port',`
	gen_require(`
		type auth_port_t;
	')

	allow $1 auth_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send auth_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_auth_client_packets',`
	gen_require(`
		type auth_client_packet_t;
	')

	allow $1 auth_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send auth_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_auth_client_packets',`
	gen_require(`
		type auth_client_packet_t;
	')

	dontaudit $1 auth_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive auth_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_auth_client_packets',`
	gen_require(`
		type auth_client_packet_t;
	')

	allow $1 auth_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive auth_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_auth_client_packets',`
	gen_require(`
		type auth_client_packet_t;
	')

	dontaudit $1 auth_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive auth_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_auth_client_packets',`
	corenet_send_auth_client_packets($1)
	corenet_receive_auth_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive auth_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_auth_client_packets',`
	corenet_dontaudit_send_auth_client_packets($1)
	corenet_dontaudit_receive_auth_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to auth_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_auth_client_packets',`
	gen_require(`
		type auth_client_packet_t;
	')

	allow $1 auth_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send auth_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_auth_server_packets',`
	gen_require(`
		type auth_server_packet_t;
	')

	allow $1 auth_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send auth_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_auth_server_packets',`
	gen_require(`
		type auth_server_packet_t;
	')

	dontaudit $1 auth_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive auth_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_auth_server_packets',`
	gen_require(`
		type auth_server_packet_t;
	')

	allow $1 auth_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive auth_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_auth_server_packets',`
	gen_require(`
		type auth_server_packet_t;
	')

	dontaudit $1 auth_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive auth_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_auth_server_packets',`
	corenet_send_auth_server_packets($1)
	corenet_receive_auth_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive auth_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_auth_server_packets',`
	corenet_dontaudit_send_auth_server_packets($1)
	corenet_dontaudit_receive_auth_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to auth_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_auth_server_packets',`
	gen_require(`
		type auth_server_packet_t;
	')

	allow $1 auth_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the bgp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_bgp_port',`
	gen_require(`
		type bgp_port_t;
	')

	allow $1 bgp_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the bgp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_bgp_port',`
	gen_require(`
		type bgp_port_t;
	')

	allow $1 bgp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the bgp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_bgp_port',`
	gen_require(`
		type bgp_port_t;
	')

	dontaudit $1 bgp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the bgp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_bgp_port',`
	gen_require(`
		type bgp_port_t;
	')

	allow $1 bgp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the bgp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_bgp_port',`
	gen_require(`
		type bgp_port_t;
	')

	dontaudit $1 bgp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the bgp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_bgp_port',`
	corenet_udp_send_bgp_port($1)
	corenet_udp_receive_bgp_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the bgp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_bgp_port',`
	corenet_dontaudit_udp_send_bgp_port($1)
	corenet_dontaudit_udp_receive_bgp_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the bgp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_bgp_port',`
	gen_require(`
		type bgp_port_t;
	')

	allow $1 bgp_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the bgp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_bgp_port',`
	gen_require(`
		type bgp_port_t;
	')

	allow $1 bgp_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the bgp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_bgp_port',`
	gen_require(`
		type bgp_port_t;
	')

	allow $1 bgp_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send bgp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_bgp_client_packets',`
	gen_require(`
		type bgp_client_packet_t;
	')

	allow $1 bgp_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send bgp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_bgp_client_packets',`
	gen_require(`
		type bgp_client_packet_t;
	')

	dontaudit $1 bgp_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive bgp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_bgp_client_packets',`
	gen_require(`
		type bgp_client_packet_t;
	')

	allow $1 bgp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive bgp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_bgp_client_packets',`
	gen_require(`
		type bgp_client_packet_t;
	')

	dontaudit $1 bgp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive bgp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_bgp_client_packets',`
	corenet_send_bgp_client_packets($1)
	corenet_receive_bgp_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive bgp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_bgp_client_packets',`
	corenet_dontaudit_send_bgp_client_packets($1)
	corenet_dontaudit_receive_bgp_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to bgp_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_bgp_client_packets',`
	gen_require(`
		type bgp_client_packet_t;
	')

	allow $1 bgp_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send bgp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_bgp_server_packets',`
	gen_require(`
		type bgp_server_packet_t;
	')

	allow $1 bgp_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send bgp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_bgp_server_packets',`
	gen_require(`
		type bgp_server_packet_t;
	')

	dontaudit $1 bgp_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive bgp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_bgp_server_packets',`
	gen_require(`
		type bgp_server_packet_t;
	')

	allow $1 bgp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive bgp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_bgp_server_packets',`
	gen_require(`
		type bgp_server_packet_t;
	')

	dontaudit $1 bgp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive bgp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_bgp_server_packets',`
	corenet_send_bgp_server_packets($1)
	corenet_receive_bgp_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive bgp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_bgp_server_packets',`
	corenet_dontaudit_send_bgp_server_packets($1)
	corenet_dontaudit_receive_bgp_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to bgp_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_bgp_server_packets',`
	gen_require(`
		type bgp_server_packet_t;
	')

	allow $1 bgp_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the clamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_clamd_port',`
	gen_require(`
		type clamd_port_t;
	')

	allow $1 clamd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the clamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_clamd_port',`
	gen_require(`
		type clamd_port_t;
	')

	allow $1 clamd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the clamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_clamd_port',`
	gen_require(`
		type clamd_port_t;
	')

	dontaudit $1 clamd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the clamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_clamd_port',`
	gen_require(`
		type clamd_port_t;
	')

	allow $1 clamd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the clamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_clamd_port',`
	gen_require(`
		type clamd_port_t;
	')

	dontaudit $1 clamd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the clamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_clamd_port',`
	corenet_udp_send_clamd_port($1)
	corenet_udp_receive_clamd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the clamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_clamd_port',`
	corenet_dontaudit_udp_send_clamd_port($1)
	corenet_dontaudit_udp_receive_clamd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the clamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_clamd_port',`
	gen_require(`
		type clamd_port_t;
	')

	allow $1 clamd_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the clamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_clamd_port',`
	gen_require(`
		type clamd_port_t;
	')

	allow $1 clamd_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the clamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_clamd_port',`
	gen_require(`
		type clamd_port_t;
	')

	allow $1 clamd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send clamd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_clamd_client_packets',`
	gen_require(`
		type clamd_client_packet_t;
	')

	allow $1 clamd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send clamd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_clamd_client_packets',`
	gen_require(`
		type clamd_client_packet_t;
	')

	dontaudit $1 clamd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive clamd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_clamd_client_packets',`
	gen_require(`
		type clamd_client_packet_t;
	')

	allow $1 clamd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive clamd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_clamd_client_packets',`
	gen_require(`
		type clamd_client_packet_t;
	')

	dontaudit $1 clamd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive clamd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_clamd_client_packets',`
	corenet_send_clamd_client_packets($1)
	corenet_receive_clamd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive clamd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_clamd_client_packets',`
	corenet_dontaudit_send_clamd_client_packets($1)
	corenet_dontaudit_receive_clamd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to clamd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_clamd_client_packets',`
	gen_require(`
		type clamd_client_packet_t;
	')

	allow $1 clamd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send clamd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_clamd_server_packets',`
	gen_require(`
		type clamd_server_packet_t;
	')

	allow $1 clamd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send clamd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_clamd_server_packets',`
	gen_require(`
		type clamd_server_packet_t;
	')

	dontaudit $1 clamd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive clamd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_clamd_server_packets',`
	gen_require(`
		type clamd_server_packet_t;
	')

	allow $1 clamd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive clamd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_clamd_server_packets',`
	gen_require(`
		type clamd_server_packet_t;
	')

	dontaudit $1 clamd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive clamd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_clamd_server_packets',`
	corenet_send_clamd_server_packets($1)
	corenet_receive_clamd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive clamd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_clamd_server_packets',`
	corenet_dontaudit_send_clamd_server_packets($1)
	corenet_dontaudit_receive_clamd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to clamd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_clamd_server_packets',`
	gen_require(`
		type clamd_server_packet_t;
	')

	allow $1 clamd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the clockspeed port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_clockspeed_port',`
	gen_require(`
		type clockspeed_port_t;
	')

	allow $1 clockspeed_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the clockspeed port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_clockspeed_port',`
	gen_require(`
		type clockspeed_port_t;
	')

	allow $1 clockspeed_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the clockspeed port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_clockspeed_port',`
	gen_require(`
		type clockspeed_port_t;
	')

	dontaudit $1 clockspeed_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the clockspeed port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_clockspeed_port',`
	gen_require(`
		type clockspeed_port_t;
	')

	allow $1 clockspeed_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the clockspeed port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_clockspeed_port',`
	gen_require(`
		type clockspeed_port_t;
	')

	dontaudit $1 clockspeed_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the clockspeed port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_clockspeed_port',`
	corenet_udp_send_clockspeed_port($1)
	corenet_udp_receive_clockspeed_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the clockspeed port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_clockspeed_port',`
	corenet_dontaudit_udp_send_clockspeed_port($1)
	corenet_dontaudit_udp_receive_clockspeed_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the clockspeed port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_clockspeed_port',`
	gen_require(`
		type clockspeed_port_t;
	')

	allow $1 clockspeed_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the clockspeed port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_clockspeed_port',`
	gen_require(`
		type clockspeed_port_t;
	')

	allow $1 clockspeed_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the clockspeed port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_clockspeed_port',`
	gen_require(`
		type clockspeed_port_t;
	')

	allow $1 clockspeed_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send clockspeed_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_clockspeed_client_packets',`
	gen_require(`
		type clockspeed_client_packet_t;
	')

	allow $1 clockspeed_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send clockspeed_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_clockspeed_client_packets',`
	gen_require(`
		type clockspeed_client_packet_t;
	')

	dontaudit $1 clockspeed_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive clockspeed_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_clockspeed_client_packets',`
	gen_require(`
		type clockspeed_client_packet_t;
	')

	allow $1 clockspeed_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive clockspeed_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_clockspeed_client_packets',`
	gen_require(`
		type clockspeed_client_packet_t;
	')

	dontaudit $1 clockspeed_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive clockspeed_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_clockspeed_client_packets',`
	corenet_send_clockspeed_client_packets($1)
	corenet_receive_clockspeed_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive clockspeed_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_clockspeed_client_packets',`
	corenet_dontaudit_send_clockspeed_client_packets($1)
	corenet_dontaudit_receive_clockspeed_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to clockspeed_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_clockspeed_client_packets',`
	gen_require(`
		type clockspeed_client_packet_t;
	')

	allow $1 clockspeed_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send clockspeed_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_clockspeed_server_packets',`
	gen_require(`
		type clockspeed_server_packet_t;
	')

	allow $1 clockspeed_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send clockspeed_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_clockspeed_server_packets',`
	gen_require(`
		type clockspeed_server_packet_t;
	')

	dontaudit $1 clockspeed_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive clockspeed_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_clockspeed_server_packets',`
	gen_require(`
		type clockspeed_server_packet_t;
	')

	allow $1 clockspeed_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive clockspeed_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_clockspeed_server_packets',`
	gen_require(`
		type clockspeed_server_packet_t;
	')

	dontaudit $1 clockspeed_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive clockspeed_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_clockspeed_server_packets',`
	corenet_send_clockspeed_server_packets($1)
	corenet_receive_clockspeed_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive clockspeed_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_clockspeed_server_packets',`
	corenet_dontaudit_send_clockspeed_server_packets($1)
	corenet_dontaudit_receive_clockspeed_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to clockspeed_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_clockspeed_server_packets',`
	gen_require(`
		type clockspeed_server_packet_t;
	')

	allow $1 clockspeed_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the comsat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_comsat_port',`
	gen_require(`
		type comsat_port_t;
	')

	allow $1 comsat_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the comsat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_comsat_port',`
	gen_require(`
		type comsat_port_t;
	')

	allow $1 comsat_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the comsat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_comsat_port',`
	gen_require(`
		type comsat_port_t;
	')

	dontaudit $1 comsat_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the comsat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_comsat_port',`
	gen_require(`
		type comsat_port_t;
	')

	allow $1 comsat_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the comsat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_comsat_port',`
	gen_require(`
		type comsat_port_t;
	')

	dontaudit $1 comsat_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the comsat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_comsat_port',`
	corenet_udp_send_comsat_port($1)
	corenet_udp_receive_comsat_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the comsat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_comsat_port',`
	corenet_dontaudit_udp_send_comsat_port($1)
	corenet_dontaudit_udp_receive_comsat_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the comsat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_comsat_port',`
	gen_require(`
		type comsat_port_t;
	')

	allow $1 comsat_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the comsat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_comsat_port',`
	gen_require(`
		type comsat_port_t;
	')

	allow $1 comsat_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the comsat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_comsat_port',`
	gen_require(`
		type comsat_port_t;
	')

	allow $1 comsat_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send comsat_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_comsat_client_packets',`
	gen_require(`
		type comsat_client_packet_t;
	')

	allow $1 comsat_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send comsat_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_comsat_client_packets',`
	gen_require(`
		type comsat_client_packet_t;
	')

	dontaudit $1 comsat_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive comsat_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_comsat_client_packets',`
	gen_require(`
		type comsat_client_packet_t;
	')

	allow $1 comsat_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive comsat_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_comsat_client_packets',`
	gen_require(`
		type comsat_client_packet_t;
	')

	dontaudit $1 comsat_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive comsat_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_comsat_client_packets',`
	corenet_send_comsat_client_packets($1)
	corenet_receive_comsat_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive comsat_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_comsat_client_packets',`
	corenet_dontaudit_send_comsat_client_packets($1)
	corenet_dontaudit_receive_comsat_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to comsat_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_comsat_client_packets',`
	gen_require(`
		type comsat_client_packet_t;
	')

	allow $1 comsat_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send comsat_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_comsat_server_packets',`
	gen_require(`
		type comsat_server_packet_t;
	')

	allow $1 comsat_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send comsat_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_comsat_server_packets',`
	gen_require(`
		type comsat_server_packet_t;
	')

	dontaudit $1 comsat_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive comsat_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_comsat_server_packets',`
	gen_require(`
		type comsat_server_packet_t;
	')

	allow $1 comsat_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive comsat_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_comsat_server_packets',`
	gen_require(`
		type comsat_server_packet_t;
	')

	dontaudit $1 comsat_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive comsat_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_comsat_server_packets',`
	corenet_send_comsat_server_packets($1)
	corenet_receive_comsat_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive comsat_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_comsat_server_packets',`
	corenet_dontaudit_send_comsat_server_packets($1)
	corenet_dontaudit_receive_comsat_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to comsat_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_comsat_server_packets',`
	gen_require(`
		type comsat_server_packet_t;
	')

	allow $1 comsat_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the cvs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_cvs_port',`
	gen_require(`
		type cvs_port_t;
	')

	allow $1 cvs_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the cvs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_cvs_port',`
	gen_require(`
		type cvs_port_t;
	')

	allow $1 cvs_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the cvs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_cvs_port',`
	gen_require(`
		type cvs_port_t;
	')

	dontaudit $1 cvs_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the cvs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_cvs_port',`
	gen_require(`
		type cvs_port_t;
	')

	allow $1 cvs_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the cvs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_cvs_port',`
	gen_require(`
		type cvs_port_t;
	')

	dontaudit $1 cvs_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the cvs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_cvs_port',`
	corenet_udp_send_cvs_port($1)
	corenet_udp_receive_cvs_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the cvs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_cvs_port',`
	corenet_dontaudit_udp_send_cvs_port($1)
	corenet_dontaudit_udp_receive_cvs_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the cvs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_cvs_port',`
	gen_require(`
		type cvs_port_t;
	')

	allow $1 cvs_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the cvs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_cvs_port',`
	gen_require(`
		type cvs_port_t;
	')

	allow $1 cvs_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the cvs port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_cvs_port',`
	gen_require(`
		type cvs_port_t;
	')

	allow $1 cvs_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send cvs_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_cvs_client_packets',`
	gen_require(`
		type cvs_client_packet_t;
	')

	allow $1 cvs_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send cvs_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_cvs_client_packets',`
	gen_require(`
		type cvs_client_packet_t;
	')

	dontaudit $1 cvs_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive cvs_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_cvs_client_packets',`
	gen_require(`
		type cvs_client_packet_t;
	')

	allow $1 cvs_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive cvs_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_cvs_client_packets',`
	gen_require(`
		type cvs_client_packet_t;
	')

	dontaudit $1 cvs_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive cvs_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_cvs_client_packets',`
	corenet_send_cvs_client_packets($1)
	corenet_receive_cvs_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive cvs_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_cvs_client_packets',`
	corenet_dontaudit_send_cvs_client_packets($1)
	corenet_dontaudit_receive_cvs_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to cvs_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_cvs_client_packets',`
	gen_require(`
		type cvs_client_packet_t;
	')

	allow $1 cvs_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send cvs_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_cvs_server_packets',`
	gen_require(`
		type cvs_server_packet_t;
	')

	allow $1 cvs_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send cvs_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_cvs_server_packets',`
	gen_require(`
		type cvs_server_packet_t;
	')

	dontaudit $1 cvs_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive cvs_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_cvs_server_packets',`
	gen_require(`
		type cvs_server_packet_t;
	')

	allow $1 cvs_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive cvs_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_cvs_server_packets',`
	gen_require(`
		type cvs_server_packet_t;
	')

	dontaudit $1 cvs_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive cvs_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_cvs_server_packets',`
	corenet_send_cvs_server_packets($1)
	corenet_receive_cvs_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive cvs_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_cvs_server_packets',`
	corenet_dontaudit_send_cvs_server_packets($1)
	corenet_dontaudit_receive_cvs_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to cvs_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_cvs_server_packets',`
	gen_require(`
		type cvs_server_packet_t;
	')

	allow $1 cvs_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the dcc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_dcc_port',`
	gen_require(`
		type dcc_port_t;
	')

	allow $1 dcc_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the dcc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_dcc_port',`
	gen_require(`
		type dcc_port_t;
	')

	allow $1 dcc_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the dcc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_dcc_port',`
	gen_require(`
		type dcc_port_t;
	')

	dontaudit $1 dcc_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the dcc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_dcc_port',`
	gen_require(`
		type dcc_port_t;
	')

	allow $1 dcc_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the dcc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_dcc_port',`
	gen_require(`
		type dcc_port_t;
	')

	dontaudit $1 dcc_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the dcc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_dcc_port',`
	corenet_udp_send_dcc_port($1)
	corenet_udp_receive_dcc_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the dcc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_dcc_port',`
	corenet_dontaudit_udp_send_dcc_port($1)
	corenet_dontaudit_udp_receive_dcc_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the dcc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_dcc_port',`
	gen_require(`
		type dcc_port_t;
	')

	allow $1 dcc_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the dcc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_dcc_port',`
	gen_require(`
		type dcc_port_t;
	')

	allow $1 dcc_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the dcc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_dcc_port',`
	gen_require(`
		type dcc_port_t;
	')

	allow $1 dcc_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send dcc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_dcc_client_packets',`
	gen_require(`
		type dcc_client_packet_t;
	')

	allow $1 dcc_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send dcc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_dcc_client_packets',`
	gen_require(`
		type dcc_client_packet_t;
	')

	dontaudit $1 dcc_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive dcc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_dcc_client_packets',`
	gen_require(`
		type dcc_client_packet_t;
	')

	allow $1 dcc_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive dcc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_dcc_client_packets',`
	gen_require(`
		type dcc_client_packet_t;
	')

	dontaudit $1 dcc_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive dcc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_dcc_client_packets',`
	corenet_send_dcc_client_packets($1)
	corenet_receive_dcc_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive dcc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_dcc_client_packets',`
	corenet_dontaudit_send_dcc_client_packets($1)
	corenet_dontaudit_receive_dcc_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to dcc_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_dcc_client_packets',`
	gen_require(`
		type dcc_client_packet_t;
	')

	allow $1 dcc_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send dcc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_dcc_server_packets',`
	gen_require(`
		type dcc_server_packet_t;
	')

	allow $1 dcc_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send dcc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_dcc_server_packets',`
	gen_require(`
		type dcc_server_packet_t;
	')

	dontaudit $1 dcc_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive dcc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_dcc_server_packets',`
	gen_require(`
		type dcc_server_packet_t;
	')

	allow $1 dcc_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive dcc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_dcc_server_packets',`
	gen_require(`
		type dcc_server_packet_t;
	')

	dontaudit $1 dcc_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive dcc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_dcc_server_packets',`
	corenet_send_dcc_server_packets($1)
	corenet_receive_dcc_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive dcc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_dcc_server_packets',`
	corenet_dontaudit_send_dcc_server_packets($1)
	corenet_dontaudit_receive_dcc_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to dcc_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_dcc_server_packets',`
	gen_require(`
		type dcc_server_packet_t;
	')

	allow $1 dcc_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the dbskkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_dbskkd_port',`
	gen_require(`
		type dbskkd_port_t;
	')

	allow $1 dbskkd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the dbskkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_dbskkd_port',`
	gen_require(`
		type dbskkd_port_t;
	')

	allow $1 dbskkd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the dbskkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_dbskkd_port',`
	gen_require(`
		type dbskkd_port_t;
	')

	dontaudit $1 dbskkd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the dbskkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_dbskkd_port',`
	gen_require(`
		type dbskkd_port_t;
	')

	allow $1 dbskkd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the dbskkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_dbskkd_port',`
	gen_require(`
		type dbskkd_port_t;
	')

	dontaudit $1 dbskkd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the dbskkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_dbskkd_port',`
	corenet_udp_send_dbskkd_port($1)
	corenet_udp_receive_dbskkd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the dbskkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_dbskkd_port',`
	corenet_dontaudit_udp_send_dbskkd_port($1)
	corenet_dontaudit_udp_receive_dbskkd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the dbskkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_dbskkd_port',`
	gen_require(`
		type dbskkd_port_t;
	')

	allow $1 dbskkd_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the dbskkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_dbskkd_port',`
	gen_require(`
		type dbskkd_port_t;
	')

	allow $1 dbskkd_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the dbskkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_dbskkd_port',`
	gen_require(`
		type dbskkd_port_t;
	')

	allow $1 dbskkd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send dbskkd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_dbskkd_client_packets',`
	gen_require(`
		type dbskkd_client_packet_t;
	')

	allow $1 dbskkd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send dbskkd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_dbskkd_client_packets',`
	gen_require(`
		type dbskkd_client_packet_t;
	')

	dontaudit $1 dbskkd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive dbskkd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_dbskkd_client_packets',`
	gen_require(`
		type dbskkd_client_packet_t;
	')

	allow $1 dbskkd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive dbskkd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_dbskkd_client_packets',`
	gen_require(`
		type dbskkd_client_packet_t;
	')

	dontaudit $1 dbskkd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive dbskkd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_dbskkd_client_packets',`
	corenet_send_dbskkd_client_packets($1)
	corenet_receive_dbskkd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive dbskkd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_dbskkd_client_packets',`
	corenet_dontaudit_send_dbskkd_client_packets($1)
	corenet_dontaudit_receive_dbskkd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to dbskkd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_dbskkd_client_packets',`
	gen_require(`
		type dbskkd_client_packet_t;
	')

	allow $1 dbskkd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send dbskkd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_dbskkd_server_packets',`
	gen_require(`
		type dbskkd_server_packet_t;
	')

	allow $1 dbskkd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send dbskkd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_dbskkd_server_packets',`
	gen_require(`
		type dbskkd_server_packet_t;
	')

	dontaudit $1 dbskkd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive dbskkd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_dbskkd_server_packets',`
	gen_require(`
		type dbskkd_server_packet_t;
	')

	allow $1 dbskkd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive dbskkd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_dbskkd_server_packets',`
	gen_require(`
		type dbskkd_server_packet_t;
	')

	dontaudit $1 dbskkd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive dbskkd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_dbskkd_server_packets',`
	corenet_send_dbskkd_server_packets($1)
	corenet_receive_dbskkd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive dbskkd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_dbskkd_server_packets',`
	corenet_dontaudit_send_dbskkd_server_packets($1)
	corenet_dontaudit_receive_dbskkd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to dbskkd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_dbskkd_server_packets',`
	gen_require(`
		type dbskkd_server_packet_t;
	')

	allow $1 dbskkd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the dhcpc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_dhcpc_port',`
	gen_require(`
		type dhcpc_port_t;
	')

	allow $1 dhcpc_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the dhcpc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_dhcpc_port',`
	gen_require(`
		type dhcpc_port_t;
	')

	allow $1 dhcpc_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the dhcpc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_dhcpc_port',`
	gen_require(`
		type dhcpc_port_t;
	')

	dontaudit $1 dhcpc_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the dhcpc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_dhcpc_port',`
	gen_require(`
		type dhcpc_port_t;
	')

	allow $1 dhcpc_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the dhcpc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_dhcpc_port',`
	gen_require(`
		type dhcpc_port_t;
	')

	dontaudit $1 dhcpc_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the dhcpc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_dhcpc_port',`
	corenet_udp_send_dhcpc_port($1)
	corenet_udp_receive_dhcpc_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the dhcpc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_dhcpc_port',`
	corenet_dontaudit_udp_send_dhcpc_port($1)
	corenet_dontaudit_udp_receive_dhcpc_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the dhcpc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_dhcpc_port',`
	gen_require(`
		type dhcpc_port_t;
	')

	allow $1 dhcpc_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the dhcpc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_dhcpc_port',`
	gen_require(`
		type dhcpc_port_t;
	')

	allow $1 dhcpc_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the dhcpc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_dhcpc_port',`
	gen_require(`
		type dhcpc_port_t;
	')

	allow $1 dhcpc_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send dhcpc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_dhcpc_client_packets',`
	gen_require(`
		type dhcpc_client_packet_t;
	')

	allow $1 dhcpc_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send dhcpc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_dhcpc_client_packets',`
	gen_require(`
		type dhcpc_client_packet_t;
	')

	dontaudit $1 dhcpc_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive dhcpc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_dhcpc_client_packets',`
	gen_require(`
		type dhcpc_client_packet_t;
	')

	allow $1 dhcpc_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive dhcpc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_dhcpc_client_packets',`
	gen_require(`
		type dhcpc_client_packet_t;
	')

	dontaudit $1 dhcpc_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive dhcpc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_dhcpc_client_packets',`
	corenet_send_dhcpc_client_packets($1)
	corenet_receive_dhcpc_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive dhcpc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_dhcpc_client_packets',`
	corenet_dontaudit_send_dhcpc_client_packets($1)
	corenet_dontaudit_receive_dhcpc_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to dhcpc_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_dhcpc_client_packets',`
	gen_require(`
		type dhcpc_client_packet_t;
	')

	allow $1 dhcpc_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send dhcpc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_dhcpc_server_packets',`
	gen_require(`
		type dhcpc_server_packet_t;
	')

	allow $1 dhcpc_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send dhcpc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_dhcpc_server_packets',`
	gen_require(`
		type dhcpc_server_packet_t;
	')

	dontaudit $1 dhcpc_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive dhcpc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_dhcpc_server_packets',`
	gen_require(`
		type dhcpc_server_packet_t;
	')

	allow $1 dhcpc_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive dhcpc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_dhcpc_server_packets',`
	gen_require(`
		type dhcpc_server_packet_t;
	')

	dontaudit $1 dhcpc_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive dhcpc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_dhcpc_server_packets',`
	corenet_send_dhcpc_server_packets($1)
	corenet_receive_dhcpc_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive dhcpc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_dhcpc_server_packets',`
	corenet_dontaudit_send_dhcpc_server_packets($1)
	corenet_dontaudit_receive_dhcpc_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to dhcpc_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_dhcpc_server_packets',`
	gen_require(`
		type dhcpc_server_packet_t;
	')

	allow $1 dhcpc_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the dhcpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_dhcpd_port',`
	gen_require(`
		type dhcpd_port_t;
	')

	allow $1 dhcpd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the dhcpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_dhcpd_port',`
	gen_require(`
		type dhcpd_port_t;
	')

	allow $1 dhcpd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the dhcpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_dhcpd_port',`
	gen_require(`
		type dhcpd_port_t;
	')

	dontaudit $1 dhcpd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the dhcpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_dhcpd_port',`
	gen_require(`
		type dhcpd_port_t;
	')

	allow $1 dhcpd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the dhcpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_dhcpd_port',`
	gen_require(`
		type dhcpd_port_t;
	')

	dontaudit $1 dhcpd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the dhcpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_dhcpd_port',`
	corenet_udp_send_dhcpd_port($1)
	corenet_udp_receive_dhcpd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the dhcpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_dhcpd_port',`
	corenet_dontaudit_udp_send_dhcpd_port($1)
	corenet_dontaudit_udp_receive_dhcpd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the dhcpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_dhcpd_port',`
	gen_require(`
		type dhcpd_port_t;
	')

	allow $1 dhcpd_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the dhcpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_dhcpd_port',`
	gen_require(`
		type dhcpd_port_t;
	')

	allow $1 dhcpd_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the dhcpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_dhcpd_port',`
	gen_require(`
		type dhcpd_port_t;
	')

	allow $1 dhcpd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send dhcpd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_dhcpd_client_packets',`
	gen_require(`
		type dhcpd_client_packet_t;
	')

	allow $1 dhcpd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send dhcpd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_dhcpd_client_packets',`
	gen_require(`
		type dhcpd_client_packet_t;
	')

	dontaudit $1 dhcpd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive dhcpd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_dhcpd_client_packets',`
	gen_require(`
		type dhcpd_client_packet_t;
	')

	allow $1 dhcpd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive dhcpd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_dhcpd_client_packets',`
	gen_require(`
		type dhcpd_client_packet_t;
	')

	dontaudit $1 dhcpd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive dhcpd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_dhcpd_client_packets',`
	corenet_send_dhcpd_client_packets($1)
	corenet_receive_dhcpd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive dhcpd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_dhcpd_client_packets',`
	corenet_dontaudit_send_dhcpd_client_packets($1)
	corenet_dontaudit_receive_dhcpd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to dhcpd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_dhcpd_client_packets',`
	gen_require(`
		type dhcpd_client_packet_t;
	')

	allow $1 dhcpd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send dhcpd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_dhcpd_server_packets',`
	gen_require(`
		type dhcpd_server_packet_t;
	')

	allow $1 dhcpd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send dhcpd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_dhcpd_server_packets',`
	gen_require(`
		type dhcpd_server_packet_t;
	')

	dontaudit $1 dhcpd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive dhcpd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_dhcpd_server_packets',`
	gen_require(`
		type dhcpd_server_packet_t;
	')

	allow $1 dhcpd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive dhcpd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_dhcpd_server_packets',`
	gen_require(`
		type dhcpd_server_packet_t;
	')

	dontaudit $1 dhcpd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive dhcpd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_dhcpd_server_packets',`
	corenet_send_dhcpd_server_packets($1)
	corenet_receive_dhcpd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive dhcpd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_dhcpd_server_packets',`
	corenet_dontaudit_send_dhcpd_server_packets($1)
	corenet_dontaudit_receive_dhcpd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to dhcpd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_dhcpd_server_packets',`
	gen_require(`
		type dhcpd_server_packet_t;
	')

	allow $1 dhcpd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the dict port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_dict_port',`
	gen_require(`
		type dict_port_t;
	')

	allow $1 dict_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the dict port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_dict_port',`
	gen_require(`
		type dict_port_t;
	')

	allow $1 dict_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the dict port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_dict_port',`
	gen_require(`
		type dict_port_t;
	')

	dontaudit $1 dict_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the dict port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_dict_port',`
	gen_require(`
		type dict_port_t;
	')

	allow $1 dict_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the dict port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_dict_port',`
	gen_require(`
		type dict_port_t;
	')

	dontaudit $1 dict_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the dict port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_dict_port',`
	corenet_udp_send_dict_port($1)
	corenet_udp_receive_dict_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the dict port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_dict_port',`
	corenet_dontaudit_udp_send_dict_port($1)
	corenet_dontaudit_udp_receive_dict_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the dict port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_dict_port',`
	gen_require(`
		type dict_port_t;
	')

	allow $1 dict_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the dict port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_dict_port',`
	gen_require(`
		type dict_port_t;
	')

	allow $1 dict_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the dict port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_dict_port',`
	gen_require(`
		type dict_port_t;
	')

	allow $1 dict_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send dict_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_dict_client_packets',`
	gen_require(`
		type dict_client_packet_t;
	')

	allow $1 dict_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send dict_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_dict_client_packets',`
	gen_require(`
		type dict_client_packet_t;
	')

	dontaudit $1 dict_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive dict_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_dict_client_packets',`
	gen_require(`
		type dict_client_packet_t;
	')

	allow $1 dict_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive dict_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_dict_client_packets',`
	gen_require(`
		type dict_client_packet_t;
	')

	dontaudit $1 dict_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive dict_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_dict_client_packets',`
	corenet_send_dict_client_packets($1)
	corenet_receive_dict_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive dict_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_dict_client_packets',`
	corenet_dontaudit_send_dict_client_packets($1)
	corenet_dontaudit_receive_dict_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to dict_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_dict_client_packets',`
	gen_require(`
		type dict_client_packet_t;
	')

	allow $1 dict_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send dict_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_dict_server_packets',`
	gen_require(`
		type dict_server_packet_t;
	')

	allow $1 dict_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send dict_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_dict_server_packets',`
	gen_require(`
		type dict_server_packet_t;
	')

	dontaudit $1 dict_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive dict_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_dict_server_packets',`
	gen_require(`
		type dict_server_packet_t;
	')

	allow $1 dict_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive dict_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_dict_server_packets',`
	gen_require(`
		type dict_server_packet_t;
	')

	dontaudit $1 dict_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive dict_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_dict_server_packets',`
	corenet_send_dict_server_packets($1)
	corenet_receive_dict_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive dict_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_dict_server_packets',`
	corenet_dontaudit_send_dict_server_packets($1)
	corenet_dontaudit_receive_dict_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to dict_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_dict_server_packets',`
	gen_require(`
		type dict_server_packet_t;
	')

	allow $1 dict_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the distccd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_distccd_port',`
	gen_require(`
		type distccd_port_t;
	')

	allow $1 distccd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the distccd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_distccd_port',`
	gen_require(`
		type distccd_port_t;
	')

	allow $1 distccd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the distccd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_distccd_port',`
	gen_require(`
		type distccd_port_t;
	')

	dontaudit $1 distccd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the distccd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_distccd_port',`
	gen_require(`
		type distccd_port_t;
	')

	allow $1 distccd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the distccd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_distccd_port',`
	gen_require(`
		type distccd_port_t;
	')

	dontaudit $1 distccd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the distccd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_distccd_port',`
	corenet_udp_send_distccd_port($1)
	corenet_udp_receive_distccd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the distccd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_distccd_port',`
	corenet_dontaudit_udp_send_distccd_port($1)
	corenet_dontaudit_udp_receive_distccd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the distccd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_distccd_port',`
	gen_require(`
		type distccd_port_t;
	')

	allow $1 distccd_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the distccd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_distccd_port',`
	gen_require(`
		type distccd_port_t;
	')

	allow $1 distccd_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the distccd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_distccd_port',`
	gen_require(`
		type distccd_port_t;
	')

	allow $1 distccd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send distccd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_distccd_client_packets',`
	gen_require(`
		type distccd_client_packet_t;
	')

	allow $1 distccd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send distccd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_distccd_client_packets',`
	gen_require(`
		type distccd_client_packet_t;
	')

	dontaudit $1 distccd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive distccd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_distccd_client_packets',`
	gen_require(`
		type distccd_client_packet_t;
	')

	allow $1 distccd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive distccd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_distccd_client_packets',`
	gen_require(`
		type distccd_client_packet_t;
	')

	dontaudit $1 distccd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive distccd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_distccd_client_packets',`
	corenet_send_distccd_client_packets($1)
	corenet_receive_distccd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive distccd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_distccd_client_packets',`
	corenet_dontaudit_send_distccd_client_packets($1)
	corenet_dontaudit_receive_distccd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to distccd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_distccd_client_packets',`
	gen_require(`
		type distccd_client_packet_t;
	')

	allow $1 distccd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send distccd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_distccd_server_packets',`
	gen_require(`
		type distccd_server_packet_t;
	')

	allow $1 distccd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send distccd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_distccd_server_packets',`
	gen_require(`
		type distccd_server_packet_t;
	')

	dontaudit $1 distccd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive distccd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_distccd_server_packets',`
	gen_require(`
		type distccd_server_packet_t;
	')

	allow $1 distccd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive distccd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_distccd_server_packets',`
	gen_require(`
		type distccd_server_packet_t;
	')

	dontaudit $1 distccd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive distccd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_distccd_server_packets',`
	corenet_send_distccd_server_packets($1)
	corenet_receive_distccd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive distccd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_distccd_server_packets',`
	corenet_dontaudit_send_distccd_server_packets($1)
	corenet_dontaudit_receive_distccd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to distccd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_distccd_server_packets',`
	gen_require(`
		type distccd_server_packet_t;
	')

	allow $1 distccd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the dns port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_dns_port',`
	gen_require(`
		type dns_port_t;
	')

	allow $1 dns_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the dns port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_dns_port',`
	gen_require(`
		type dns_port_t;
	')

	allow $1 dns_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the dns port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_dns_port',`
	gen_require(`
		type dns_port_t;
	')

	dontaudit $1 dns_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the dns port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_dns_port',`
	gen_require(`
		type dns_port_t;
	')

	allow $1 dns_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the dns port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_dns_port',`
	gen_require(`
		type dns_port_t;
	')

	dontaudit $1 dns_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the dns port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_dns_port',`
	corenet_udp_send_dns_port($1)
	corenet_udp_receive_dns_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the dns port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_dns_port',`
	corenet_dontaudit_udp_send_dns_port($1)
	corenet_dontaudit_udp_receive_dns_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the dns port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_dns_port',`
	gen_require(`
		type dns_port_t;
	')

	allow $1 dns_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the dns port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_dns_port',`
	gen_require(`
		type dns_port_t;
	')

	allow $1 dns_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the dns port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_dns_port',`
	gen_require(`
		type dns_port_t;
	')

	allow $1 dns_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send dns_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_dns_client_packets',`
	gen_require(`
		type dns_client_packet_t;
	')

	allow $1 dns_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send dns_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_dns_client_packets',`
	gen_require(`
		type dns_client_packet_t;
	')

	dontaudit $1 dns_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive dns_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_dns_client_packets',`
	gen_require(`
		type dns_client_packet_t;
	')

	allow $1 dns_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive dns_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_dns_client_packets',`
	gen_require(`
		type dns_client_packet_t;
	')

	dontaudit $1 dns_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive dns_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_dns_client_packets',`
	corenet_send_dns_client_packets($1)
	corenet_receive_dns_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive dns_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_dns_client_packets',`
	corenet_dontaudit_send_dns_client_packets($1)
	corenet_dontaudit_receive_dns_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to dns_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_dns_client_packets',`
	gen_require(`
		type dns_client_packet_t;
	')

	allow $1 dns_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send dns_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_dns_server_packets',`
	gen_require(`
		type dns_server_packet_t;
	')

	allow $1 dns_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send dns_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_dns_server_packets',`
	gen_require(`
		type dns_server_packet_t;
	')

	dontaudit $1 dns_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive dns_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_dns_server_packets',`
	gen_require(`
		type dns_server_packet_t;
	')

	allow $1 dns_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive dns_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_dns_server_packets',`
	gen_require(`
		type dns_server_packet_t;
	')

	dontaudit $1 dns_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive dns_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_dns_server_packets',`
	corenet_send_dns_server_packets($1)
	corenet_receive_dns_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive dns_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_dns_server_packets',`
	corenet_dontaudit_send_dns_server_packets($1)
	corenet_dontaudit_receive_dns_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to dns_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_dns_server_packets',`
	gen_require(`
		type dns_server_packet_t;
	')

	allow $1 dns_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the fingerd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_fingerd_port',`
	gen_require(`
		type fingerd_port_t;
	')

	allow $1 fingerd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the fingerd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_fingerd_port',`
	gen_require(`
		type fingerd_port_t;
	')

	allow $1 fingerd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the fingerd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_fingerd_port',`
	gen_require(`
		type fingerd_port_t;
	')

	dontaudit $1 fingerd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the fingerd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_fingerd_port',`
	gen_require(`
		type fingerd_port_t;
	')

	allow $1 fingerd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the fingerd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_fingerd_port',`
	gen_require(`
		type fingerd_port_t;
	')

	dontaudit $1 fingerd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the fingerd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_fingerd_port',`
	corenet_udp_send_fingerd_port($1)
	corenet_udp_receive_fingerd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the fingerd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_fingerd_port',`
	corenet_dontaudit_udp_send_fingerd_port($1)
	corenet_dontaudit_udp_receive_fingerd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the fingerd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_fingerd_port',`
	gen_require(`
		type fingerd_port_t;
	')

	allow $1 fingerd_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the fingerd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_fingerd_port',`
	gen_require(`
		type fingerd_port_t;
	')

	allow $1 fingerd_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the fingerd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_fingerd_port',`
	gen_require(`
		type fingerd_port_t;
	')

	allow $1 fingerd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send fingerd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_fingerd_client_packets',`
	gen_require(`
		type fingerd_client_packet_t;
	')

	allow $1 fingerd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send fingerd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_fingerd_client_packets',`
	gen_require(`
		type fingerd_client_packet_t;
	')

	dontaudit $1 fingerd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive fingerd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_fingerd_client_packets',`
	gen_require(`
		type fingerd_client_packet_t;
	')

	allow $1 fingerd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive fingerd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_fingerd_client_packets',`
	gen_require(`
		type fingerd_client_packet_t;
	')

	dontaudit $1 fingerd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive fingerd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_fingerd_client_packets',`
	corenet_send_fingerd_client_packets($1)
	corenet_receive_fingerd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive fingerd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_fingerd_client_packets',`
	corenet_dontaudit_send_fingerd_client_packets($1)
	corenet_dontaudit_receive_fingerd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to fingerd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_fingerd_client_packets',`
	gen_require(`
		type fingerd_client_packet_t;
	')

	allow $1 fingerd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send fingerd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_fingerd_server_packets',`
	gen_require(`
		type fingerd_server_packet_t;
	')

	allow $1 fingerd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send fingerd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_fingerd_server_packets',`
	gen_require(`
		type fingerd_server_packet_t;
	')

	dontaudit $1 fingerd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive fingerd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_fingerd_server_packets',`
	gen_require(`
		type fingerd_server_packet_t;
	')

	allow $1 fingerd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive fingerd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_fingerd_server_packets',`
	gen_require(`
		type fingerd_server_packet_t;
	')

	dontaudit $1 fingerd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive fingerd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_fingerd_server_packets',`
	corenet_send_fingerd_server_packets($1)
	corenet_receive_fingerd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive fingerd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_fingerd_server_packets',`
	corenet_dontaudit_send_fingerd_server_packets($1)
	corenet_dontaudit_receive_fingerd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to fingerd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_fingerd_server_packets',`
	gen_require(`
		type fingerd_server_packet_t;
	')

	allow $1 fingerd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the ftp_data port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_ftp_data_port',`
	gen_require(`
		type ftp_data_port_t;
	')

	allow $1 ftp_data_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the ftp_data port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_ftp_data_port',`
	gen_require(`
		type ftp_data_port_t;
	')

	allow $1 ftp_data_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the ftp_data port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_ftp_data_port',`
	gen_require(`
		type ftp_data_port_t;
	')

	dontaudit $1 ftp_data_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the ftp_data port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_ftp_data_port',`
	gen_require(`
		type ftp_data_port_t;
	')

	allow $1 ftp_data_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the ftp_data port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_ftp_data_port',`
	gen_require(`
		type ftp_data_port_t;
	')

	dontaudit $1 ftp_data_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the ftp_data port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_ftp_data_port',`
	corenet_udp_send_ftp_data_port($1)
	corenet_udp_receive_ftp_data_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the ftp_data port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_ftp_data_port',`
	corenet_dontaudit_udp_send_ftp_data_port($1)
	corenet_dontaudit_udp_receive_ftp_data_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the ftp_data port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_ftp_data_port',`
	gen_require(`
		type ftp_data_port_t;
	')

	allow $1 ftp_data_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the ftp_data port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_ftp_data_port',`
	gen_require(`
		type ftp_data_port_t;
	')

	allow $1 ftp_data_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the ftp_data port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_ftp_data_port',`
	gen_require(`
		type ftp_data_port_t;
	')

	allow $1 ftp_data_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send ftp_data_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ftp_data_client_packets',`
	gen_require(`
		type ftp_data_client_packet_t;
	')

	allow $1 ftp_data_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ftp_data_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ftp_data_client_packets',`
	gen_require(`
		type ftp_data_client_packet_t;
	')

	dontaudit $1 ftp_data_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive ftp_data_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ftp_data_client_packets',`
	gen_require(`
		type ftp_data_client_packet_t;
	')

	allow $1 ftp_data_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ftp_data_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ftp_data_client_packets',`
	gen_require(`
		type ftp_data_client_packet_t;
	')

	dontaudit $1 ftp_data_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ftp_data_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ftp_data_client_packets',`
	corenet_send_ftp_data_client_packets($1)
	corenet_receive_ftp_data_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ftp_data_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ftp_data_client_packets',`
	corenet_dontaudit_send_ftp_data_client_packets($1)
	corenet_dontaudit_receive_ftp_data_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to ftp_data_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ftp_data_client_packets',`
	gen_require(`
		type ftp_data_client_packet_t;
	')

	allow $1 ftp_data_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send ftp_data_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ftp_data_server_packets',`
	gen_require(`
		type ftp_data_server_packet_t;
	')

	allow $1 ftp_data_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ftp_data_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ftp_data_server_packets',`
	gen_require(`
		type ftp_data_server_packet_t;
	')

	dontaudit $1 ftp_data_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive ftp_data_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ftp_data_server_packets',`
	gen_require(`
		type ftp_data_server_packet_t;
	')

	allow $1 ftp_data_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ftp_data_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ftp_data_server_packets',`
	gen_require(`
		type ftp_data_server_packet_t;
	')

	dontaudit $1 ftp_data_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ftp_data_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ftp_data_server_packets',`
	corenet_send_ftp_data_server_packets($1)
	corenet_receive_ftp_data_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ftp_data_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ftp_data_server_packets',`
	corenet_dontaudit_send_ftp_data_server_packets($1)
	corenet_dontaudit_receive_ftp_data_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to ftp_data_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ftp_data_server_packets',`
	gen_require(`
		type ftp_data_server_packet_t;
	')

	allow $1 ftp_data_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the ftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_ftp_port',`
	gen_require(`
		type ftp_port_t;
	')

	allow $1 ftp_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the ftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_ftp_port',`
	gen_require(`
		type ftp_port_t;
	')

	allow $1 ftp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the ftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_ftp_port',`
	gen_require(`
		type ftp_port_t;
	')

	dontaudit $1 ftp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the ftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_ftp_port',`
	gen_require(`
		type ftp_port_t;
	')

	allow $1 ftp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the ftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_ftp_port',`
	gen_require(`
		type ftp_port_t;
	')

	dontaudit $1 ftp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the ftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_ftp_port',`
	corenet_udp_send_ftp_port($1)
	corenet_udp_receive_ftp_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the ftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_ftp_port',`
	corenet_dontaudit_udp_send_ftp_port($1)
	corenet_dontaudit_udp_receive_ftp_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the ftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_ftp_port',`
	gen_require(`
		type ftp_port_t;
	')

	allow $1 ftp_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the ftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_ftp_port',`
	gen_require(`
		type ftp_port_t;
	')

	allow $1 ftp_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the ftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_ftp_port',`
	gen_require(`
		type ftp_port_t;
	')

	allow $1 ftp_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send ftp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ftp_client_packets',`
	gen_require(`
		type ftp_client_packet_t;
	')

	allow $1 ftp_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ftp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ftp_client_packets',`
	gen_require(`
		type ftp_client_packet_t;
	')

	dontaudit $1 ftp_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive ftp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ftp_client_packets',`
	gen_require(`
		type ftp_client_packet_t;
	')

	allow $1 ftp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ftp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ftp_client_packets',`
	gen_require(`
		type ftp_client_packet_t;
	')

	dontaudit $1 ftp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ftp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ftp_client_packets',`
	corenet_send_ftp_client_packets($1)
	corenet_receive_ftp_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ftp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ftp_client_packets',`
	corenet_dontaudit_send_ftp_client_packets($1)
	corenet_dontaudit_receive_ftp_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to ftp_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ftp_client_packets',`
	gen_require(`
		type ftp_client_packet_t;
	')

	allow $1 ftp_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send ftp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ftp_server_packets',`
	gen_require(`
		type ftp_server_packet_t;
	')

	allow $1 ftp_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ftp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ftp_server_packets',`
	gen_require(`
		type ftp_server_packet_t;
	')

	dontaudit $1 ftp_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive ftp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ftp_server_packets',`
	gen_require(`
		type ftp_server_packet_t;
	')

	allow $1 ftp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ftp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ftp_server_packets',`
	gen_require(`
		type ftp_server_packet_t;
	')

	dontaudit $1 ftp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ftp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ftp_server_packets',`
	corenet_send_ftp_server_packets($1)
	corenet_receive_ftp_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ftp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ftp_server_packets',`
	corenet_dontaudit_send_ftp_server_packets($1)
	corenet_dontaudit_receive_ftp_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to ftp_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ftp_server_packets',`
	gen_require(`
		type ftp_server_packet_t;
	')

	allow $1 ftp_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the gatekeeper port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_gatekeeper_port',`
	gen_require(`
		type gatekeeper_port_t;
	')

	allow $1 gatekeeper_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the gatekeeper port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_gatekeeper_port',`
	gen_require(`
		type gatekeeper_port_t;
	')

	allow $1 gatekeeper_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the gatekeeper port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_gatekeeper_port',`
	gen_require(`
		type gatekeeper_port_t;
	')

	dontaudit $1 gatekeeper_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the gatekeeper port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_gatekeeper_port',`
	gen_require(`
		type gatekeeper_port_t;
	')

	allow $1 gatekeeper_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the gatekeeper port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_gatekeeper_port',`
	gen_require(`
		type gatekeeper_port_t;
	')

	dontaudit $1 gatekeeper_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the gatekeeper port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_gatekeeper_port',`
	corenet_udp_send_gatekeeper_port($1)
	corenet_udp_receive_gatekeeper_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the gatekeeper port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_gatekeeper_port',`
	corenet_dontaudit_udp_send_gatekeeper_port($1)
	corenet_dontaudit_udp_receive_gatekeeper_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the gatekeeper port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_gatekeeper_port',`
	gen_require(`
		type gatekeeper_port_t;
	')

	allow $1 gatekeeper_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the gatekeeper port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_gatekeeper_port',`
	gen_require(`
		type gatekeeper_port_t;
	')

	allow $1 gatekeeper_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the gatekeeper port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_gatekeeper_port',`
	gen_require(`
		type gatekeeper_port_t;
	')

	allow $1 gatekeeper_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send gatekeeper_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_gatekeeper_client_packets',`
	gen_require(`
		type gatekeeper_client_packet_t;
	')

	allow $1 gatekeeper_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send gatekeeper_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_gatekeeper_client_packets',`
	gen_require(`
		type gatekeeper_client_packet_t;
	')

	dontaudit $1 gatekeeper_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive gatekeeper_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_gatekeeper_client_packets',`
	gen_require(`
		type gatekeeper_client_packet_t;
	')

	allow $1 gatekeeper_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive gatekeeper_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_gatekeeper_client_packets',`
	gen_require(`
		type gatekeeper_client_packet_t;
	')

	dontaudit $1 gatekeeper_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive gatekeeper_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_gatekeeper_client_packets',`
	corenet_send_gatekeeper_client_packets($1)
	corenet_receive_gatekeeper_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive gatekeeper_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_gatekeeper_client_packets',`
	corenet_dontaudit_send_gatekeeper_client_packets($1)
	corenet_dontaudit_receive_gatekeeper_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to gatekeeper_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_gatekeeper_client_packets',`
	gen_require(`
		type gatekeeper_client_packet_t;
	')

	allow $1 gatekeeper_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send gatekeeper_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_gatekeeper_server_packets',`
	gen_require(`
		type gatekeeper_server_packet_t;
	')

	allow $1 gatekeeper_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send gatekeeper_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_gatekeeper_server_packets',`
	gen_require(`
		type gatekeeper_server_packet_t;
	')

	dontaudit $1 gatekeeper_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive gatekeeper_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_gatekeeper_server_packets',`
	gen_require(`
		type gatekeeper_server_packet_t;
	')

	allow $1 gatekeeper_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive gatekeeper_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_gatekeeper_server_packets',`
	gen_require(`
		type gatekeeper_server_packet_t;
	')

	dontaudit $1 gatekeeper_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive gatekeeper_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_gatekeeper_server_packets',`
	corenet_send_gatekeeper_server_packets($1)
	corenet_receive_gatekeeper_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive gatekeeper_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_gatekeeper_server_packets',`
	corenet_dontaudit_send_gatekeeper_server_packets($1)
	corenet_dontaudit_receive_gatekeeper_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to gatekeeper_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_gatekeeper_server_packets',`
	gen_require(`
		type gatekeeper_server_packet_t;
	')

	allow $1 gatekeeper_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the giftd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_giftd_port',`
	gen_require(`
		type giftd_port_t;
	')

	allow $1 giftd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the giftd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_giftd_port',`
	gen_require(`
		type giftd_port_t;
	')

	allow $1 giftd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the giftd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_giftd_port',`
	gen_require(`
		type giftd_port_t;
	')

	dontaudit $1 giftd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the giftd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_giftd_port',`
	gen_require(`
		type giftd_port_t;
	')

	allow $1 giftd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the giftd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_giftd_port',`
	gen_require(`
		type giftd_port_t;
	')

	dontaudit $1 giftd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the giftd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_giftd_port',`
	corenet_udp_send_giftd_port($1)
	corenet_udp_receive_giftd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the giftd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_giftd_port',`
	corenet_dontaudit_udp_send_giftd_port($1)
	corenet_dontaudit_udp_receive_giftd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the giftd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_giftd_port',`
	gen_require(`
		type giftd_port_t;
	')

	allow $1 giftd_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the giftd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_giftd_port',`
	gen_require(`
		type giftd_port_t;
	')

	allow $1 giftd_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the giftd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_giftd_port',`
	gen_require(`
		type giftd_port_t;
	')

	allow $1 giftd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send giftd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_giftd_client_packets',`
	gen_require(`
		type giftd_client_packet_t;
	')

	allow $1 giftd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send giftd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_giftd_client_packets',`
	gen_require(`
		type giftd_client_packet_t;
	')

	dontaudit $1 giftd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive giftd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_giftd_client_packets',`
	gen_require(`
		type giftd_client_packet_t;
	')

	allow $1 giftd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive giftd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_giftd_client_packets',`
	gen_require(`
		type giftd_client_packet_t;
	')

	dontaudit $1 giftd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive giftd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_giftd_client_packets',`
	corenet_send_giftd_client_packets($1)
	corenet_receive_giftd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive giftd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_giftd_client_packets',`
	corenet_dontaudit_send_giftd_client_packets($1)
	corenet_dontaudit_receive_giftd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to giftd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_giftd_client_packets',`
	gen_require(`
		type giftd_client_packet_t;
	')

	allow $1 giftd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send giftd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_giftd_server_packets',`
	gen_require(`
		type giftd_server_packet_t;
	')

	allow $1 giftd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send giftd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_giftd_server_packets',`
	gen_require(`
		type giftd_server_packet_t;
	')

	dontaudit $1 giftd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive giftd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_giftd_server_packets',`
	gen_require(`
		type giftd_server_packet_t;
	')

	allow $1 giftd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive giftd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_giftd_server_packets',`
	gen_require(`
		type giftd_server_packet_t;
	')

	dontaudit $1 giftd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive giftd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_giftd_server_packets',`
	corenet_send_giftd_server_packets($1)
	corenet_receive_giftd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive giftd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_giftd_server_packets',`
	corenet_dontaudit_send_giftd_server_packets($1)
	corenet_dontaudit_receive_giftd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to giftd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_giftd_server_packets',`
	gen_require(`
		type giftd_server_packet_t;
	')

	allow $1 giftd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the gopher port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_gopher_port',`
	gen_require(`
		type gopher_port_t;
	')

	allow $1 gopher_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the gopher port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_gopher_port',`
	gen_require(`
		type gopher_port_t;
	')

	allow $1 gopher_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the gopher port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_gopher_port',`
	gen_require(`
		type gopher_port_t;
	')

	dontaudit $1 gopher_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the gopher port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_gopher_port',`
	gen_require(`
		type gopher_port_t;
	')

	allow $1 gopher_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the gopher port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_gopher_port',`
	gen_require(`
		type gopher_port_t;
	')

	dontaudit $1 gopher_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the gopher port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_gopher_port',`
	corenet_udp_send_gopher_port($1)
	corenet_udp_receive_gopher_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the gopher port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_gopher_port',`
	corenet_dontaudit_udp_send_gopher_port($1)
	corenet_dontaudit_udp_receive_gopher_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the gopher port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_gopher_port',`
	gen_require(`
		type gopher_port_t;
	')

	allow $1 gopher_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the gopher port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_gopher_port',`
	gen_require(`
		type gopher_port_t;
	')

	allow $1 gopher_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the gopher port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_gopher_port',`
	gen_require(`
		type gopher_port_t;
	')

	allow $1 gopher_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send gopher_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_gopher_client_packets',`
	gen_require(`
		type gopher_client_packet_t;
	')

	allow $1 gopher_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send gopher_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_gopher_client_packets',`
	gen_require(`
		type gopher_client_packet_t;
	')

	dontaudit $1 gopher_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive gopher_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_gopher_client_packets',`
	gen_require(`
		type gopher_client_packet_t;
	')

	allow $1 gopher_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive gopher_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_gopher_client_packets',`
	gen_require(`
		type gopher_client_packet_t;
	')

	dontaudit $1 gopher_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive gopher_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_gopher_client_packets',`
	corenet_send_gopher_client_packets($1)
	corenet_receive_gopher_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive gopher_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_gopher_client_packets',`
	corenet_dontaudit_send_gopher_client_packets($1)
	corenet_dontaudit_receive_gopher_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to gopher_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_gopher_client_packets',`
	gen_require(`
		type gopher_client_packet_t;
	')

	allow $1 gopher_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send gopher_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_gopher_server_packets',`
	gen_require(`
		type gopher_server_packet_t;
	')

	allow $1 gopher_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send gopher_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_gopher_server_packets',`
	gen_require(`
		type gopher_server_packet_t;
	')

	dontaudit $1 gopher_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive gopher_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_gopher_server_packets',`
	gen_require(`
		type gopher_server_packet_t;
	')

	allow $1 gopher_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive gopher_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_gopher_server_packets',`
	gen_require(`
		type gopher_server_packet_t;
	')

	dontaudit $1 gopher_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive gopher_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_gopher_server_packets',`
	corenet_send_gopher_server_packets($1)
	corenet_receive_gopher_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive gopher_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_gopher_server_packets',`
	corenet_dontaudit_send_gopher_server_packets($1)
	corenet_dontaudit_receive_gopher_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to gopher_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_gopher_server_packets',`
	gen_require(`
		type gopher_server_packet_t;
	')

	allow $1 gopher_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the http_cache port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_http_cache_port',`
	gen_require(`
		type http_cache_port_t;
	')

	allow $1 http_cache_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the http_cache port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_http_cache_port',`
	gen_require(`
		type http_cache_port_t;
	')

	allow $1 http_cache_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the http_cache port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_http_cache_port',`
	gen_require(`
		type http_cache_port_t;
	')

	dontaudit $1 http_cache_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the http_cache port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_http_cache_port',`
	gen_require(`
		type http_cache_port_t;
	')

	allow $1 http_cache_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the http_cache port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_http_cache_port',`
	gen_require(`
		type http_cache_port_t;
	')

	dontaudit $1 http_cache_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the http_cache port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_http_cache_port',`
	corenet_udp_send_http_cache_port($1)
	corenet_udp_receive_http_cache_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the http_cache port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_http_cache_port',`
	corenet_dontaudit_udp_send_http_cache_port($1)
	corenet_dontaudit_udp_receive_http_cache_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the http_cache port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_http_cache_port',`
	gen_require(`
		type http_cache_port_t;
	')

	allow $1 http_cache_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the http_cache port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_http_cache_port',`
	gen_require(`
		type http_cache_port_t;
	')

	allow $1 http_cache_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the http_cache port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_http_cache_port',`
	gen_require(`
		type http_cache_port_t;
	')

	allow $1 http_cache_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send http_cache_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_http_cache_client_packets',`
	gen_require(`
		type http_cache_client_packet_t;
	')

	allow $1 http_cache_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send http_cache_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_http_cache_client_packets',`
	gen_require(`
		type http_cache_client_packet_t;
	')

	dontaudit $1 http_cache_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive http_cache_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_http_cache_client_packets',`
	gen_require(`
		type http_cache_client_packet_t;
	')

	allow $1 http_cache_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive http_cache_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_http_cache_client_packets',`
	gen_require(`
		type http_cache_client_packet_t;
	')

	dontaudit $1 http_cache_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive http_cache_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_http_cache_client_packets',`
	corenet_send_http_cache_client_packets($1)
	corenet_receive_http_cache_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive http_cache_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_http_cache_client_packets',`
	corenet_dontaudit_send_http_cache_client_packets($1)
	corenet_dontaudit_receive_http_cache_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to http_cache_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_http_cache_client_packets',`
	gen_require(`
		type http_cache_client_packet_t;
	')

	allow $1 http_cache_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send http_cache_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_http_cache_server_packets',`
	gen_require(`
		type http_cache_server_packet_t;
	')

	allow $1 http_cache_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send http_cache_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_http_cache_server_packets',`
	gen_require(`
		type http_cache_server_packet_t;
	')

	dontaudit $1 http_cache_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive http_cache_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_http_cache_server_packets',`
	gen_require(`
		type http_cache_server_packet_t;
	')

	allow $1 http_cache_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive http_cache_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_http_cache_server_packets',`
	gen_require(`
		type http_cache_server_packet_t;
	')

	dontaudit $1 http_cache_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive http_cache_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_http_cache_server_packets',`
	corenet_send_http_cache_server_packets($1)
	corenet_receive_http_cache_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive http_cache_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_http_cache_server_packets',`
	corenet_dontaudit_send_http_cache_server_packets($1)
	corenet_dontaudit_receive_http_cache_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to http_cache_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_http_cache_server_packets',`
	gen_require(`
		type http_cache_server_packet_t;
	')

	allow $1 http_cache_server_packet_t:packet relabelto;
')

 # 8118 is for privoxy


########################################
## <summary>
##	Send and receive TCP traffic on the http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_http_port',`
	gen_require(`
		type http_port_t;
	')

	allow $1 http_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_http_port',`
	gen_require(`
		type http_port_t;
	')

	allow $1 http_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_http_port',`
	gen_require(`
		type http_port_t;
	')

	dontaudit $1 http_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_http_port',`
	gen_require(`
		type http_port_t;
	')

	allow $1 http_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_http_port',`
	gen_require(`
		type http_port_t;
	')

	dontaudit $1 http_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_http_port',`
	corenet_udp_send_http_port($1)
	corenet_udp_receive_http_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_http_port',`
	corenet_dontaudit_udp_send_http_port($1)
	corenet_dontaudit_udp_receive_http_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_http_port',`
	gen_require(`
		type http_port_t;
	')

	allow $1 http_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_http_port',`
	gen_require(`
		type http_port_t;
	')

	allow $1 http_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_http_port',`
	gen_require(`
		type http_port_t;
	')

	allow $1 http_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send http_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_http_client_packets',`
	gen_require(`
		type http_client_packet_t;
	')

	allow $1 http_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send http_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_http_client_packets',`
	gen_require(`
		type http_client_packet_t;
	')

	dontaudit $1 http_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive http_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_http_client_packets',`
	gen_require(`
		type http_client_packet_t;
	')

	allow $1 http_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive http_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_http_client_packets',`
	gen_require(`
		type http_client_packet_t;
	')

	dontaudit $1 http_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive http_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_http_client_packets',`
	corenet_send_http_client_packets($1)
	corenet_receive_http_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive http_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_http_client_packets',`
	corenet_dontaudit_send_http_client_packets($1)
	corenet_dontaudit_receive_http_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to http_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_http_client_packets',`
	gen_require(`
		type http_client_packet_t;
	')

	allow $1 http_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send http_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_http_server_packets',`
	gen_require(`
		type http_server_packet_t;
	')

	allow $1 http_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send http_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_http_server_packets',`
	gen_require(`
		type http_server_packet_t;
	')

	dontaudit $1 http_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive http_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_http_server_packets',`
	gen_require(`
		type http_server_packet_t;
	')

	allow $1 http_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive http_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_http_server_packets',`
	gen_require(`
		type http_server_packet_t;
	')

	dontaudit $1 http_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive http_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_http_server_packets',`
	corenet_send_http_server_packets($1)
	corenet_receive_http_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive http_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_http_server_packets',`
	corenet_dontaudit_send_http_server_packets($1)
	corenet_dontaudit_receive_http_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to http_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_http_server_packets',`
	gen_require(`
		type http_server_packet_t;
	')

	allow $1 http_server_packet_t:packet relabelto;
')

 #8443 is mod_nss default port


########################################
## <summary>
##	Send and receive TCP traffic on the howl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_howl_port',`
	gen_require(`
		type howl_port_t;
	')

	allow $1 howl_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the howl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_howl_port',`
	gen_require(`
		type howl_port_t;
	')

	allow $1 howl_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the howl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_howl_port',`
	gen_require(`
		type howl_port_t;
	')

	dontaudit $1 howl_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the howl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_howl_port',`
	gen_require(`
		type howl_port_t;
	')

	allow $1 howl_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the howl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_howl_port',`
	gen_require(`
		type howl_port_t;
	')

	dontaudit $1 howl_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the howl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_howl_port',`
	corenet_udp_send_howl_port($1)
	corenet_udp_receive_howl_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the howl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_howl_port',`
	corenet_dontaudit_udp_send_howl_port($1)
	corenet_dontaudit_udp_receive_howl_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the howl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_howl_port',`
	gen_require(`
		type howl_port_t;
	')

	allow $1 howl_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the howl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_howl_port',`
	gen_require(`
		type howl_port_t;
	')

	allow $1 howl_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the howl port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_howl_port',`
	gen_require(`
		type howl_port_t;
	')

	allow $1 howl_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send howl_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_howl_client_packets',`
	gen_require(`
		type howl_client_packet_t;
	')

	allow $1 howl_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send howl_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_howl_client_packets',`
	gen_require(`
		type howl_client_packet_t;
	')

	dontaudit $1 howl_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive howl_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_howl_client_packets',`
	gen_require(`
		type howl_client_packet_t;
	')

	allow $1 howl_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive howl_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_howl_client_packets',`
	gen_require(`
		type howl_client_packet_t;
	')

	dontaudit $1 howl_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive howl_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_howl_client_packets',`
	corenet_send_howl_client_packets($1)
	corenet_receive_howl_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive howl_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_howl_client_packets',`
	corenet_dontaudit_send_howl_client_packets($1)
	corenet_dontaudit_receive_howl_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to howl_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_howl_client_packets',`
	gen_require(`
		type howl_client_packet_t;
	')

	allow $1 howl_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send howl_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_howl_server_packets',`
	gen_require(`
		type howl_server_packet_t;
	')

	allow $1 howl_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send howl_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_howl_server_packets',`
	gen_require(`
		type howl_server_packet_t;
	')

	dontaudit $1 howl_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive howl_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_howl_server_packets',`
	gen_require(`
		type howl_server_packet_t;
	')

	allow $1 howl_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive howl_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_howl_server_packets',`
	gen_require(`
		type howl_server_packet_t;
	')

	dontaudit $1 howl_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive howl_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_howl_server_packets',`
	corenet_send_howl_server_packets($1)
	corenet_receive_howl_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive howl_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_howl_server_packets',`
	corenet_dontaudit_send_howl_server_packets($1)
	corenet_dontaudit_receive_howl_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to howl_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_howl_server_packets',`
	gen_require(`
		type howl_server_packet_t;
	')

	allow $1 howl_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the hplip port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_hplip_port',`
	gen_require(`
		type hplip_port_t;
	')

	allow $1 hplip_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the hplip port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_hplip_port',`
	gen_require(`
		type hplip_port_t;
	')

	allow $1 hplip_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the hplip port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_hplip_port',`
	gen_require(`
		type hplip_port_t;
	')

	dontaudit $1 hplip_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the hplip port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_hplip_port',`
	gen_require(`
		type hplip_port_t;
	')

	allow $1 hplip_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the hplip port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_hplip_port',`
	gen_require(`
		type hplip_port_t;
	')

	dontaudit $1 hplip_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the hplip port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_hplip_port',`
	corenet_udp_send_hplip_port($1)
	corenet_udp_receive_hplip_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the hplip port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_hplip_port',`
	corenet_dontaudit_udp_send_hplip_port($1)
	corenet_dontaudit_udp_receive_hplip_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the hplip port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_hplip_port',`
	gen_require(`
		type hplip_port_t;
	')

	allow $1 hplip_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the hplip port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_hplip_port',`
	gen_require(`
		type hplip_port_t;
	')

	allow $1 hplip_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the hplip port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_hplip_port',`
	gen_require(`
		type hplip_port_t;
	')

	allow $1 hplip_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send hplip_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_hplip_client_packets',`
	gen_require(`
		type hplip_client_packet_t;
	')

	allow $1 hplip_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send hplip_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_hplip_client_packets',`
	gen_require(`
		type hplip_client_packet_t;
	')

	dontaudit $1 hplip_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive hplip_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_hplip_client_packets',`
	gen_require(`
		type hplip_client_packet_t;
	')

	allow $1 hplip_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive hplip_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_hplip_client_packets',`
	gen_require(`
		type hplip_client_packet_t;
	')

	dontaudit $1 hplip_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive hplip_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_hplip_client_packets',`
	corenet_send_hplip_client_packets($1)
	corenet_receive_hplip_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive hplip_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_hplip_client_packets',`
	corenet_dontaudit_send_hplip_client_packets($1)
	corenet_dontaudit_receive_hplip_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to hplip_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_hplip_client_packets',`
	gen_require(`
		type hplip_client_packet_t;
	')

	allow $1 hplip_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send hplip_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_hplip_server_packets',`
	gen_require(`
		type hplip_server_packet_t;
	')

	allow $1 hplip_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send hplip_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_hplip_server_packets',`
	gen_require(`
		type hplip_server_packet_t;
	')

	dontaudit $1 hplip_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive hplip_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_hplip_server_packets',`
	gen_require(`
		type hplip_server_packet_t;
	')

	allow $1 hplip_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive hplip_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_hplip_server_packets',`
	gen_require(`
		type hplip_server_packet_t;
	')

	dontaudit $1 hplip_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive hplip_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_hplip_server_packets',`
	corenet_send_hplip_server_packets($1)
	corenet_receive_hplip_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive hplip_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_hplip_server_packets',`
	corenet_dontaudit_send_hplip_server_packets($1)
	corenet_dontaudit_receive_hplip_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to hplip_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_hplip_server_packets',`
	gen_require(`
		type hplip_server_packet_t;
	')

	allow $1 hplip_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the i18n_input port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_i18n_input_port',`
	gen_require(`
		type i18n_input_port_t;
	')

	allow $1 i18n_input_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the i18n_input port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_i18n_input_port',`
	gen_require(`
		type i18n_input_port_t;
	')

	allow $1 i18n_input_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the i18n_input port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_i18n_input_port',`
	gen_require(`
		type i18n_input_port_t;
	')

	dontaudit $1 i18n_input_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the i18n_input port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_i18n_input_port',`
	gen_require(`
		type i18n_input_port_t;
	')

	allow $1 i18n_input_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the i18n_input port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_i18n_input_port',`
	gen_require(`
		type i18n_input_port_t;
	')

	dontaudit $1 i18n_input_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the i18n_input port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_i18n_input_port',`
	corenet_udp_send_i18n_input_port($1)
	corenet_udp_receive_i18n_input_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the i18n_input port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_i18n_input_port',`
	corenet_dontaudit_udp_send_i18n_input_port($1)
	corenet_dontaudit_udp_receive_i18n_input_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the i18n_input port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_i18n_input_port',`
	gen_require(`
		type i18n_input_port_t;
	')

	allow $1 i18n_input_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the i18n_input port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_i18n_input_port',`
	gen_require(`
		type i18n_input_port_t;
	')

	allow $1 i18n_input_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the i18n_input port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_i18n_input_port',`
	gen_require(`
		type i18n_input_port_t;
	')

	allow $1 i18n_input_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send i18n_input_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_i18n_input_client_packets',`
	gen_require(`
		type i18n_input_client_packet_t;
	')

	allow $1 i18n_input_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send i18n_input_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_i18n_input_client_packets',`
	gen_require(`
		type i18n_input_client_packet_t;
	')

	dontaudit $1 i18n_input_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive i18n_input_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_i18n_input_client_packets',`
	gen_require(`
		type i18n_input_client_packet_t;
	')

	allow $1 i18n_input_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive i18n_input_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_i18n_input_client_packets',`
	gen_require(`
		type i18n_input_client_packet_t;
	')

	dontaudit $1 i18n_input_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive i18n_input_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_i18n_input_client_packets',`
	corenet_send_i18n_input_client_packets($1)
	corenet_receive_i18n_input_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive i18n_input_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_i18n_input_client_packets',`
	corenet_dontaudit_send_i18n_input_client_packets($1)
	corenet_dontaudit_receive_i18n_input_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to i18n_input_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_i18n_input_client_packets',`
	gen_require(`
		type i18n_input_client_packet_t;
	')

	allow $1 i18n_input_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send i18n_input_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_i18n_input_server_packets',`
	gen_require(`
		type i18n_input_server_packet_t;
	')

	allow $1 i18n_input_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send i18n_input_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_i18n_input_server_packets',`
	gen_require(`
		type i18n_input_server_packet_t;
	')

	dontaudit $1 i18n_input_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive i18n_input_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_i18n_input_server_packets',`
	gen_require(`
		type i18n_input_server_packet_t;
	')

	allow $1 i18n_input_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive i18n_input_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_i18n_input_server_packets',`
	gen_require(`
		type i18n_input_server_packet_t;
	')

	dontaudit $1 i18n_input_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive i18n_input_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_i18n_input_server_packets',`
	corenet_send_i18n_input_server_packets($1)
	corenet_receive_i18n_input_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive i18n_input_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_i18n_input_server_packets',`
	corenet_dontaudit_send_i18n_input_server_packets($1)
	corenet_dontaudit_receive_i18n_input_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to i18n_input_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_i18n_input_server_packets',`
	gen_require(`
		type i18n_input_server_packet_t;
	')

	allow $1 i18n_input_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the imaze port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_imaze_port',`
	gen_require(`
		type imaze_port_t;
	')

	allow $1 imaze_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the imaze port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_imaze_port',`
	gen_require(`
		type imaze_port_t;
	')

	allow $1 imaze_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the imaze port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_imaze_port',`
	gen_require(`
		type imaze_port_t;
	')

	dontaudit $1 imaze_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the imaze port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_imaze_port',`
	gen_require(`
		type imaze_port_t;
	')

	allow $1 imaze_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the imaze port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_imaze_port',`
	gen_require(`
		type imaze_port_t;
	')

	dontaudit $1 imaze_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the imaze port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_imaze_port',`
	corenet_udp_send_imaze_port($1)
	corenet_udp_receive_imaze_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the imaze port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_imaze_port',`
	corenet_dontaudit_udp_send_imaze_port($1)
	corenet_dontaudit_udp_receive_imaze_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the imaze port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_imaze_port',`
	gen_require(`
		type imaze_port_t;
	')

	allow $1 imaze_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the imaze port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_imaze_port',`
	gen_require(`
		type imaze_port_t;
	')

	allow $1 imaze_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the imaze port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_imaze_port',`
	gen_require(`
		type imaze_port_t;
	')

	allow $1 imaze_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send imaze_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_imaze_client_packets',`
	gen_require(`
		type imaze_client_packet_t;
	')

	allow $1 imaze_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send imaze_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_imaze_client_packets',`
	gen_require(`
		type imaze_client_packet_t;
	')

	dontaudit $1 imaze_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive imaze_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_imaze_client_packets',`
	gen_require(`
		type imaze_client_packet_t;
	')

	allow $1 imaze_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive imaze_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_imaze_client_packets',`
	gen_require(`
		type imaze_client_packet_t;
	')

	dontaudit $1 imaze_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive imaze_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_imaze_client_packets',`
	corenet_send_imaze_client_packets($1)
	corenet_receive_imaze_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive imaze_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_imaze_client_packets',`
	corenet_dontaudit_send_imaze_client_packets($1)
	corenet_dontaudit_receive_imaze_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to imaze_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_imaze_client_packets',`
	gen_require(`
		type imaze_client_packet_t;
	')

	allow $1 imaze_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send imaze_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_imaze_server_packets',`
	gen_require(`
		type imaze_server_packet_t;
	')

	allow $1 imaze_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send imaze_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_imaze_server_packets',`
	gen_require(`
		type imaze_server_packet_t;
	')

	dontaudit $1 imaze_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive imaze_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_imaze_server_packets',`
	gen_require(`
		type imaze_server_packet_t;
	')

	allow $1 imaze_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive imaze_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_imaze_server_packets',`
	gen_require(`
		type imaze_server_packet_t;
	')

	dontaudit $1 imaze_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive imaze_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_imaze_server_packets',`
	corenet_send_imaze_server_packets($1)
	corenet_receive_imaze_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive imaze_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_imaze_server_packets',`
	corenet_dontaudit_send_imaze_server_packets($1)
	corenet_dontaudit_receive_imaze_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to imaze_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_imaze_server_packets',`
	gen_require(`
		type imaze_server_packet_t;
	')

	allow $1 imaze_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the inetd_child port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_inetd_child_port',`
	gen_require(`
		type inetd_child_port_t;
	')

	allow $1 inetd_child_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the inetd_child port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_inetd_child_port',`
	gen_require(`
		type inetd_child_port_t;
	')

	allow $1 inetd_child_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the inetd_child port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_inetd_child_port',`
	gen_require(`
		type inetd_child_port_t;
	')

	dontaudit $1 inetd_child_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the inetd_child port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_inetd_child_port',`
	gen_require(`
		type inetd_child_port_t;
	')

	allow $1 inetd_child_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the inetd_child port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_inetd_child_port',`
	gen_require(`
		type inetd_child_port_t;
	')

	dontaudit $1 inetd_child_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the inetd_child port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_inetd_child_port',`
	corenet_udp_send_inetd_child_port($1)
	corenet_udp_receive_inetd_child_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the inetd_child port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_inetd_child_port',`
	corenet_dontaudit_udp_send_inetd_child_port($1)
	corenet_dontaudit_udp_receive_inetd_child_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the inetd_child port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_inetd_child_port',`
	gen_require(`
		type inetd_child_port_t;
	')

	allow $1 inetd_child_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the inetd_child port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_inetd_child_port',`
	gen_require(`
		type inetd_child_port_t;
	')

	allow $1 inetd_child_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the inetd_child port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_inetd_child_port',`
	gen_require(`
		type inetd_child_port_t;
	')

	allow $1 inetd_child_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send inetd_child_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_inetd_child_client_packets',`
	gen_require(`
		type inetd_child_client_packet_t;
	')

	allow $1 inetd_child_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send inetd_child_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_inetd_child_client_packets',`
	gen_require(`
		type inetd_child_client_packet_t;
	')

	dontaudit $1 inetd_child_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive inetd_child_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_inetd_child_client_packets',`
	gen_require(`
		type inetd_child_client_packet_t;
	')

	allow $1 inetd_child_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive inetd_child_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_inetd_child_client_packets',`
	gen_require(`
		type inetd_child_client_packet_t;
	')

	dontaudit $1 inetd_child_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive inetd_child_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_inetd_child_client_packets',`
	corenet_send_inetd_child_client_packets($1)
	corenet_receive_inetd_child_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive inetd_child_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_inetd_child_client_packets',`
	corenet_dontaudit_send_inetd_child_client_packets($1)
	corenet_dontaudit_receive_inetd_child_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to inetd_child_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_inetd_child_client_packets',`
	gen_require(`
		type inetd_child_client_packet_t;
	')

	allow $1 inetd_child_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send inetd_child_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_inetd_child_server_packets',`
	gen_require(`
		type inetd_child_server_packet_t;
	')

	allow $1 inetd_child_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send inetd_child_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_inetd_child_server_packets',`
	gen_require(`
		type inetd_child_server_packet_t;
	')

	dontaudit $1 inetd_child_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive inetd_child_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_inetd_child_server_packets',`
	gen_require(`
		type inetd_child_server_packet_t;
	')

	allow $1 inetd_child_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive inetd_child_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_inetd_child_server_packets',`
	gen_require(`
		type inetd_child_server_packet_t;
	')

	dontaudit $1 inetd_child_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive inetd_child_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_inetd_child_server_packets',`
	corenet_send_inetd_child_server_packets($1)
	corenet_receive_inetd_child_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive inetd_child_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_inetd_child_server_packets',`
	corenet_dontaudit_send_inetd_child_server_packets($1)
	corenet_dontaudit_receive_inetd_child_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to inetd_child_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_inetd_child_server_packets',`
	gen_require(`
		type inetd_child_server_packet_t;
	')

	allow $1 inetd_child_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the innd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_innd_port',`
	gen_require(`
		type innd_port_t;
	')

	allow $1 innd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the innd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_innd_port',`
	gen_require(`
		type innd_port_t;
	')

	allow $1 innd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the innd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_innd_port',`
	gen_require(`
		type innd_port_t;
	')

	dontaudit $1 innd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the innd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_innd_port',`
	gen_require(`
		type innd_port_t;
	')

	allow $1 innd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the innd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_innd_port',`
	gen_require(`
		type innd_port_t;
	')

	dontaudit $1 innd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the innd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_innd_port',`
	corenet_udp_send_innd_port($1)
	corenet_udp_receive_innd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the innd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_innd_port',`
	corenet_dontaudit_udp_send_innd_port($1)
	corenet_dontaudit_udp_receive_innd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the innd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_innd_port',`
	gen_require(`
		type innd_port_t;
	')

	allow $1 innd_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the innd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_innd_port',`
	gen_require(`
		type innd_port_t;
	')

	allow $1 innd_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the innd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_innd_port',`
	gen_require(`
		type innd_port_t;
	')

	allow $1 innd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send innd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_innd_client_packets',`
	gen_require(`
		type innd_client_packet_t;
	')

	allow $1 innd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send innd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_innd_client_packets',`
	gen_require(`
		type innd_client_packet_t;
	')

	dontaudit $1 innd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive innd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_innd_client_packets',`
	gen_require(`
		type innd_client_packet_t;
	')

	allow $1 innd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive innd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_innd_client_packets',`
	gen_require(`
		type innd_client_packet_t;
	')

	dontaudit $1 innd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive innd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_innd_client_packets',`
	corenet_send_innd_client_packets($1)
	corenet_receive_innd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive innd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_innd_client_packets',`
	corenet_dontaudit_send_innd_client_packets($1)
	corenet_dontaudit_receive_innd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to innd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_innd_client_packets',`
	gen_require(`
		type innd_client_packet_t;
	')

	allow $1 innd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send innd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_innd_server_packets',`
	gen_require(`
		type innd_server_packet_t;
	')

	allow $1 innd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send innd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_innd_server_packets',`
	gen_require(`
		type innd_server_packet_t;
	')

	dontaudit $1 innd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive innd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_innd_server_packets',`
	gen_require(`
		type innd_server_packet_t;
	')

	allow $1 innd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive innd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_innd_server_packets',`
	gen_require(`
		type innd_server_packet_t;
	')

	dontaudit $1 innd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive innd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_innd_server_packets',`
	corenet_send_innd_server_packets($1)
	corenet_receive_innd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive innd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_innd_server_packets',`
	corenet_dontaudit_send_innd_server_packets($1)
	corenet_dontaudit_receive_innd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to innd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_innd_server_packets',`
	gen_require(`
		type innd_server_packet_t;
	')

	allow $1 innd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the ipp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_ipp_port',`
	gen_require(`
		type ipp_port_t;
	')

	allow $1 ipp_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the ipp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_ipp_port',`
	gen_require(`
		type ipp_port_t;
	')

	allow $1 ipp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the ipp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_ipp_port',`
	gen_require(`
		type ipp_port_t;
	')

	dontaudit $1 ipp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the ipp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_ipp_port',`
	gen_require(`
		type ipp_port_t;
	')

	allow $1 ipp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the ipp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_ipp_port',`
	gen_require(`
		type ipp_port_t;
	')

	dontaudit $1 ipp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the ipp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_ipp_port',`
	corenet_udp_send_ipp_port($1)
	corenet_udp_receive_ipp_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the ipp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_ipp_port',`
	corenet_dontaudit_udp_send_ipp_port($1)
	corenet_dontaudit_udp_receive_ipp_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the ipp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_ipp_port',`
	gen_require(`
		type ipp_port_t;
	')

	allow $1 ipp_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the ipp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_ipp_port',`
	gen_require(`
		type ipp_port_t;
	')

	allow $1 ipp_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the ipp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_ipp_port',`
	gen_require(`
		type ipp_port_t;
	')

	allow $1 ipp_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send ipp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ipp_client_packets',`
	gen_require(`
		type ipp_client_packet_t;
	')

	allow $1 ipp_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ipp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ipp_client_packets',`
	gen_require(`
		type ipp_client_packet_t;
	')

	dontaudit $1 ipp_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive ipp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ipp_client_packets',`
	gen_require(`
		type ipp_client_packet_t;
	')

	allow $1 ipp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ipp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ipp_client_packets',`
	gen_require(`
		type ipp_client_packet_t;
	')

	dontaudit $1 ipp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ipp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ipp_client_packets',`
	corenet_send_ipp_client_packets($1)
	corenet_receive_ipp_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ipp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ipp_client_packets',`
	corenet_dontaudit_send_ipp_client_packets($1)
	corenet_dontaudit_receive_ipp_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to ipp_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ipp_client_packets',`
	gen_require(`
		type ipp_client_packet_t;
	')

	allow $1 ipp_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send ipp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ipp_server_packets',`
	gen_require(`
		type ipp_server_packet_t;
	')

	allow $1 ipp_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ipp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ipp_server_packets',`
	gen_require(`
		type ipp_server_packet_t;
	')

	dontaudit $1 ipp_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive ipp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ipp_server_packets',`
	gen_require(`
		type ipp_server_packet_t;
	')

	allow $1 ipp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ipp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ipp_server_packets',`
	gen_require(`
		type ipp_server_packet_t;
	')

	dontaudit $1 ipp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ipp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ipp_server_packets',`
	corenet_send_ipp_server_packets($1)
	corenet_receive_ipp_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ipp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ipp_server_packets',`
	corenet_dontaudit_send_ipp_server_packets($1)
	corenet_dontaudit_receive_ipp_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to ipp_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ipp_server_packets',`
	gen_require(`
		type ipp_server_packet_t;
	')

	allow $1 ipp_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the ircd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_ircd_port',`
	gen_require(`
		type ircd_port_t;
	')

	allow $1 ircd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the ircd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_ircd_port',`
	gen_require(`
		type ircd_port_t;
	')

	allow $1 ircd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the ircd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_ircd_port',`
	gen_require(`
		type ircd_port_t;
	')

	dontaudit $1 ircd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the ircd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_ircd_port',`
	gen_require(`
		type ircd_port_t;
	')

	allow $1 ircd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the ircd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_ircd_port',`
	gen_require(`
		type ircd_port_t;
	')

	dontaudit $1 ircd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the ircd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_ircd_port',`
	corenet_udp_send_ircd_port($1)
	corenet_udp_receive_ircd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the ircd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_ircd_port',`
	corenet_dontaudit_udp_send_ircd_port($1)
	corenet_dontaudit_udp_receive_ircd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the ircd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_ircd_port',`
	gen_require(`
		type ircd_port_t;
	')

	allow $1 ircd_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the ircd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_ircd_port',`
	gen_require(`
		type ircd_port_t;
	')

	allow $1 ircd_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the ircd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_ircd_port',`
	gen_require(`
		type ircd_port_t;
	')

	allow $1 ircd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send ircd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ircd_client_packets',`
	gen_require(`
		type ircd_client_packet_t;
	')

	allow $1 ircd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ircd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ircd_client_packets',`
	gen_require(`
		type ircd_client_packet_t;
	')

	dontaudit $1 ircd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive ircd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ircd_client_packets',`
	gen_require(`
		type ircd_client_packet_t;
	')

	allow $1 ircd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ircd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ircd_client_packets',`
	gen_require(`
		type ircd_client_packet_t;
	')

	dontaudit $1 ircd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ircd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ircd_client_packets',`
	corenet_send_ircd_client_packets($1)
	corenet_receive_ircd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ircd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ircd_client_packets',`
	corenet_dontaudit_send_ircd_client_packets($1)
	corenet_dontaudit_receive_ircd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to ircd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ircd_client_packets',`
	gen_require(`
		type ircd_client_packet_t;
	')

	allow $1 ircd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send ircd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ircd_server_packets',`
	gen_require(`
		type ircd_server_packet_t;
	')

	allow $1 ircd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ircd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ircd_server_packets',`
	gen_require(`
		type ircd_server_packet_t;
	')

	dontaudit $1 ircd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive ircd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ircd_server_packets',`
	gen_require(`
		type ircd_server_packet_t;
	')

	allow $1 ircd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ircd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ircd_server_packets',`
	gen_require(`
		type ircd_server_packet_t;
	')

	dontaudit $1 ircd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ircd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ircd_server_packets',`
	corenet_send_ircd_server_packets($1)
	corenet_receive_ircd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ircd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ircd_server_packets',`
	corenet_dontaudit_send_ircd_server_packets($1)
	corenet_dontaudit_receive_ircd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to ircd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ircd_server_packets',`
	gen_require(`
		type ircd_server_packet_t;
	')

	allow $1 ircd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the isakmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_isakmp_port',`
	gen_require(`
		type isakmp_port_t;
	')

	allow $1 isakmp_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the isakmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_isakmp_port',`
	gen_require(`
		type isakmp_port_t;
	')

	allow $1 isakmp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the isakmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_isakmp_port',`
	gen_require(`
		type isakmp_port_t;
	')

	dontaudit $1 isakmp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the isakmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_isakmp_port',`
	gen_require(`
		type isakmp_port_t;
	')

	allow $1 isakmp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the isakmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_isakmp_port',`
	gen_require(`
		type isakmp_port_t;
	')

	dontaudit $1 isakmp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the isakmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_isakmp_port',`
	corenet_udp_send_isakmp_port($1)
	corenet_udp_receive_isakmp_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the isakmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_isakmp_port',`
	corenet_dontaudit_udp_send_isakmp_port($1)
	corenet_dontaudit_udp_receive_isakmp_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the isakmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_isakmp_port',`
	gen_require(`
		type isakmp_port_t;
	')

	allow $1 isakmp_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the isakmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_isakmp_port',`
	gen_require(`
		type isakmp_port_t;
	')

	allow $1 isakmp_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the isakmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_isakmp_port',`
	gen_require(`
		type isakmp_port_t;
	')

	allow $1 isakmp_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send isakmp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_isakmp_client_packets',`
	gen_require(`
		type isakmp_client_packet_t;
	')

	allow $1 isakmp_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send isakmp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_isakmp_client_packets',`
	gen_require(`
		type isakmp_client_packet_t;
	')

	dontaudit $1 isakmp_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive isakmp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_isakmp_client_packets',`
	gen_require(`
		type isakmp_client_packet_t;
	')

	allow $1 isakmp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive isakmp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_isakmp_client_packets',`
	gen_require(`
		type isakmp_client_packet_t;
	')

	dontaudit $1 isakmp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive isakmp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_isakmp_client_packets',`
	corenet_send_isakmp_client_packets($1)
	corenet_receive_isakmp_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive isakmp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_isakmp_client_packets',`
	corenet_dontaudit_send_isakmp_client_packets($1)
	corenet_dontaudit_receive_isakmp_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to isakmp_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_isakmp_client_packets',`
	gen_require(`
		type isakmp_client_packet_t;
	')

	allow $1 isakmp_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send isakmp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_isakmp_server_packets',`
	gen_require(`
		type isakmp_server_packet_t;
	')

	allow $1 isakmp_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send isakmp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_isakmp_server_packets',`
	gen_require(`
		type isakmp_server_packet_t;
	')

	dontaudit $1 isakmp_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive isakmp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_isakmp_server_packets',`
	gen_require(`
		type isakmp_server_packet_t;
	')

	allow $1 isakmp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive isakmp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_isakmp_server_packets',`
	gen_require(`
		type isakmp_server_packet_t;
	')

	dontaudit $1 isakmp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive isakmp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_isakmp_server_packets',`
	corenet_send_isakmp_server_packets($1)
	corenet_receive_isakmp_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive isakmp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_isakmp_server_packets',`
	corenet_dontaudit_send_isakmp_server_packets($1)
	corenet_dontaudit_receive_isakmp_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to isakmp_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_isakmp_server_packets',`
	gen_require(`
		type isakmp_server_packet_t;
	')

	allow $1 isakmp_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the jabber_client port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_jabber_client_port',`
	gen_require(`
		type jabber_client_port_t;
	')

	allow $1 jabber_client_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the jabber_client port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_jabber_client_port',`
	gen_require(`
		type jabber_client_port_t;
	')

	allow $1 jabber_client_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the jabber_client port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_jabber_client_port',`
	gen_require(`
		type jabber_client_port_t;
	')

	dontaudit $1 jabber_client_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the jabber_client port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_jabber_client_port',`
	gen_require(`
		type jabber_client_port_t;
	')

	allow $1 jabber_client_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the jabber_client port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_jabber_client_port',`
	gen_require(`
		type jabber_client_port_t;
	')

	dontaudit $1 jabber_client_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the jabber_client port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_jabber_client_port',`
	corenet_udp_send_jabber_client_port($1)
	corenet_udp_receive_jabber_client_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the jabber_client port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_jabber_client_port',`
	corenet_dontaudit_udp_send_jabber_client_port($1)
	corenet_dontaudit_udp_receive_jabber_client_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the jabber_client port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_jabber_client_port',`
	gen_require(`
		type jabber_client_port_t;
	')

	allow $1 jabber_client_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the jabber_client port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_jabber_client_port',`
	gen_require(`
		type jabber_client_port_t;
	')

	allow $1 jabber_client_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the jabber_client port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_jabber_client_port',`
	gen_require(`
		type jabber_client_port_t;
	')

	allow $1 jabber_client_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send jabber_client_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_jabber_client_client_packets',`
	gen_require(`
		type jabber_client_client_packet_t;
	')

	allow $1 jabber_client_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send jabber_client_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_jabber_client_client_packets',`
	gen_require(`
		type jabber_client_client_packet_t;
	')

	dontaudit $1 jabber_client_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive jabber_client_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_jabber_client_client_packets',`
	gen_require(`
		type jabber_client_client_packet_t;
	')

	allow $1 jabber_client_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive jabber_client_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_jabber_client_client_packets',`
	gen_require(`
		type jabber_client_client_packet_t;
	')

	dontaudit $1 jabber_client_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive jabber_client_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_jabber_client_client_packets',`
	corenet_send_jabber_client_client_packets($1)
	corenet_receive_jabber_client_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive jabber_client_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_jabber_client_client_packets',`
	corenet_dontaudit_send_jabber_client_client_packets($1)
	corenet_dontaudit_receive_jabber_client_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to jabber_client_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_jabber_client_client_packets',`
	gen_require(`
		type jabber_client_client_packet_t;
	')

	allow $1 jabber_client_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send jabber_client_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_jabber_client_server_packets',`
	gen_require(`
		type jabber_client_server_packet_t;
	')

	allow $1 jabber_client_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send jabber_client_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_jabber_client_server_packets',`
	gen_require(`
		type jabber_client_server_packet_t;
	')

	dontaudit $1 jabber_client_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive jabber_client_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_jabber_client_server_packets',`
	gen_require(`
		type jabber_client_server_packet_t;
	')

	allow $1 jabber_client_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive jabber_client_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_jabber_client_server_packets',`
	gen_require(`
		type jabber_client_server_packet_t;
	')

	dontaudit $1 jabber_client_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive jabber_client_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_jabber_client_server_packets',`
	corenet_send_jabber_client_server_packets($1)
	corenet_receive_jabber_client_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive jabber_client_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_jabber_client_server_packets',`
	corenet_dontaudit_send_jabber_client_server_packets($1)
	corenet_dontaudit_receive_jabber_client_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to jabber_client_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_jabber_client_server_packets',`
	gen_require(`
		type jabber_client_server_packet_t;
	')

	allow $1 jabber_client_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the jabber_interserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_jabber_interserver_port',`
	gen_require(`
		type jabber_interserver_port_t;
	')

	allow $1 jabber_interserver_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the jabber_interserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_jabber_interserver_port',`
	gen_require(`
		type jabber_interserver_port_t;
	')

	allow $1 jabber_interserver_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the jabber_interserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_jabber_interserver_port',`
	gen_require(`
		type jabber_interserver_port_t;
	')

	dontaudit $1 jabber_interserver_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the jabber_interserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_jabber_interserver_port',`
	gen_require(`
		type jabber_interserver_port_t;
	')

	allow $1 jabber_interserver_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the jabber_interserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_jabber_interserver_port',`
	gen_require(`
		type jabber_interserver_port_t;
	')

	dontaudit $1 jabber_interserver_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the jabber_interserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_jabber_interserver_port',`
	corenet_udp_send_jabber_interserver_port($1)
	corenet_udp_receive_jabber_interserver_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the jabber_interserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_jabber_interserver_port',`
	corenet_dontaudit_udp_send_jabber_interserver_port($1)
	corenet_dontaudit_udp_receive_jabber_interserver_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the jabber_interserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_jabber_interserver_port',`
	gen_require(`
		type jabber_interserver_port_t;
	')

	allow $1 jabber_interserver_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the jabber_interserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_jabber_interserver_port',`
	gen_require(`
		type jabber_interserver_port_t;
	')

	allow $1 jabber_interserver_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the jabber_interserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_jabber_interserver_port',`
	gen_require(`
		type jabber_interserver_port_t;
	')

	allow $1 jabber_interserver_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send jabber_interserver_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_jabber_interserver_client_packets',`
	gen_require(`
		type jabber_interserver_client_packet_t;
	')

	allow $1 jabber_interserver_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send jabber_interserver_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_jabber_interserver_client_packets',`
	gen_require(`
		type jabber_interserver_client_packet_t;
	')

	dontaudit $1 jabber_interserver_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive jabber_interserver_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_jabber_interserver_client_packets',`
	gen_require(`
		type jabber_interserver_client_packet_t;
	')

	allow $1 jabber_interserver_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive jabber_interserver_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_jabber_interserver_client_packets',`
	gen_require(`
		type jabber_interserver_client_packet_t;
	')

	dontaudit $1 jabber_interserver_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive jabber_interserver_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_jabber_interserver_client_packets',`
	corenet_send_jabber_interserver_client_packets($1)
	corenet_receive_jabber_interserver_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive jabber_interserver_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_jabber_interserver_client_packets',`
	corenet_dontaudit_send_jabber_interserver_client_packets($1)
	corenet_dontaudit_receive_jabber_interserver_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to jabber_interserver_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_jabber_interserver_client_packets',`
	gen_require(`
		type jabber_interserver_client_packet_t;
	')

	allow $1 jabber_interserver_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send jabber_interserver_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_jabber_interserver_server_packets',`
	gen_require(`
		type jabber_interserver_server_packet_t;
	')

	allow $1 jabber_interserver_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send jabber_interserver_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_jabber_interserver_server_packets',`
	gen_require(`
		type jabber_interserver_server_packet_t;
	')

	dontaudit $1 jabber_interserver_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive jabber_interserver_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_jabber_interserver_server_packets',`
	gen_require(`
		type jabber_interserver_server_packet_t;
	')

	allow $1 jabber_interserver_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive jabber_interserver_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_jabber_interserver_server_packets',`
	gen_require(`
		type jabber_interserver_server_packet_t;
	')

	dontaudit $1 jabber_interserver_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive jabber_interserver_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_jabber_interserver_server_packets',`
	corenet_send_jabber_interserver_server_packets($1)
	corenet_receive_jabber_interserver_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive jabber_interserver_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_jabber_interserver_server_packets',`
	corenet_dontaudit_send_jabber_interserver_server_packets($1)
	corenet_dontaudit_receive_jabber_interserver_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to jabber_interserver_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_jabber_interserver_server_packets',`
	gen_require(`
		type jabber_interserver_server_packet_t;
	')

	allow $1 jabber_interserver_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the kerberos_admin port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_kerberos_admin_port',`
	gen_require(`
		type kerberos_admin_port_t;
	')

	allow $1 kerberos_admin_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the kerberos_admin port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_kerberos_admin_port',`
	gen_require(`
		type kerberos_admin_port_t;
	')

	allow $1 kerberos_admin_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the kerberos_admin port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_kerberos_admin_port',`
	gen_require(`
		type kerberos_admin_port_t;
	')

	dontaudit $1 kerberos_admin_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the kerberos_admin port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_kerberos_admin_port',`
	gen_require(`
		type kerberos_admin_port_t;
	')

	allow $1 kerberos_admin_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the kerberos_admin port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_kerberos_admin_port',`
	gen_require(`
		type kerberos_admin_port_t;
	')

	dontaudit $1 kerberos_admin_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the kerberos_admin port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_kerberos_admin_port',`
	corenet_udp_send_kerberos_admin_port($1)
	corenet_udp_receive_kerberos_admin_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the kerberos_admin port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_kerberos_admin_port',`
	corenet_dontaudit_udp_send_kerberos_admin_port($1)
	corenet_dontaudit_udp_receive_kerberos_admin_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the kerberos_admin port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_kerberos_admin_port',`
	gen_require(`
		type kerberos_admin_port_t;
	')

	allow $1 kerberos_admin_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the kerberos_admin port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_kerberos_admin_port',`
	gen_require(`
		type kerberos_admin_port_t;
	')

	allow $1 kerberos_admin_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the kerberos_admin port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_kerberos_admin_port',`
	gen_require(`
		type kerberos_admin_port_t;
	')

	allow $1 kerberos_admin_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send kerberos_admin_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_kerberos_admin_client_packets',`
	gen_require(`
		type kerberos_admin_client_packet_t;
	')

	allow $1 kerberos_admin_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send kerberos_admin_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_kerberos_admin_client_packets',`
	gen_require(`
		type kerberos_admin_client_packet_t;
	')

	dontaudit $1 kerberos_admin_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive kerberos_admin_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_kerberos_admin_client_packets',`
	gen_require(`
		type kerberos_admin_client_packet_t;
	')

	allow $1 kerberos_admin_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive kerberos_admin_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_kerberos_admin_client_packets',`
	gen_require(`
		type kerberos_admin_client_packet_t;
	')

	dontaudit $1 kerberos_admin_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive kerberos_admin_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_kerberos_admin_client_packets',`
	corenet_send_kerberos_admin_client_packets($1)
	corenet_receive_kerberos_admin_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive kerberos_admin_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_kerberos_admin_client_packets',`
	corenet_dontaudit_send_kerberos_admin_client_packets($1)
	corenet_dontaudit_receive_kerberos_admin_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to kerberos_admin_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_kerberos_admin_client_packets',`
	gen_require(`
		type kerberos_admin_client_packet_t;
	')

	allow $1 kerberos_admin_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send kerberos_admin_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_kerberos_admin_server_packets',`
	gen_require(`
		type kerberos_admin_server_packet_t;
	')

	allow $1 kerberos_admin_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send kerberos_admin_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_kerberos_admin_server_packets',`
	gen_require(`
		type kerberos_admin_server_packet_t;
	')

	dontaudit $1 kerberos_admin_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive kerberos_admin_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_kerberos_admin_server_packets',`
	gen_require(`
		type kerberos_admin_server_packet_t;
	')

	allow $1 kerberos_admin_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive kerberos_admin_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_kerberos_admin_server_packets',`
	gen_require(`
		type kerberos_admin_server_packet_t;
	')

	dontaudit $1 kerberos_admin_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive kerberos_admin_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_kerberos_admin_server_packets',`
	corenet_send_kerberos_admin_server_packets($1)
	corenet_receive_kerberos_admin_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive kerberos_admin_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_kerberos_admin_server_packets',`
	corenet_dontaudit_send_kerberos_admin_server_packets($1)
	corenet_dontaudit_receive_kerberos_admin_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to kerberos_admin_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_kerberos_admin_server_packets',`
	gen_require(`
		type kerberos_admin_server_packet_t;
	')

	allow $1 kerberos_admin_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the kerberos_master port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_kerberos_master_port',`
	gen_require(`
		type kerberos_master_port_t;
	')

	allow $1 kerberos_master_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the kerberos_master port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_kerberos_master_port',`
	gen_require(`
		type kerberos_master_port_t;
	')

	allow $1 kerberos_master_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the kerberos_master port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_kerberos_master_port',`
	gen_require(`
		type kerberos_master_port_t;
	')

	dontaudit $1 kerberos_master_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the kerberos_master port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_kerberos_master_port',`
	gen_require(`
		type kerberos_master_port_t;
	')

	allow $1 kerberos_master_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the kerberos_master port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_kerberos_master_port',`
	gen_require(`
		type kerberos_master_port_t;
	')

	dontaudit $1 kerberos_master_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the kerberos_master port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_kerberos_master_port',`
	corenet_udp_send_kerberos_master_port($1)
	corenet_udp_receive_kerberos_master_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the kerberos_master port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_kerberos_master_port',`
	corenet_dontaudit_udp_send_kerberos_master_port($1)
	corenet_dontaudit_udp_receive_kerberos_master_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the kerberos_master port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_kerberos_master_port',`
	gen_require(`
		type kerberos_master_port_t;
	')

	allow $1 kerberos_master_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the kerberos_master port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_kerberos_master_port',`
	gen_require(`
		type kerberos_master_port_t;
	')

	allow $1 kerberos_master_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the kerberos_master port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_kerberos_master_port',`
	gen_require(`
		type kerberos_master_port_t;
	')

	allow $1 kerberos_master_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send kerberos_master_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_kerberos_master_client_packets',`
	gen_require(`
		type kerberos_master_client_packet_t;
	')

	allow $1 kerberos_master_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send kerberos_master_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_kerberos_master_client_packets',`
	gen_require(`
		type kerberos_master_client_packet_t;
	')

	dontaudit $1 kerberos_master_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive kerberos_master_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_kerberos_master_client_packets',`
	gen_require(`
		type kerberos_master_client_packet_t;
	')

	allow $1 kerberos_master_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive kerberos_master_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_kerberos_master_client_packets',`
	gen_require(`
		type kerberos_master_client_packet_t;
	')

	dontaudit $1 kerberos_master_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive kerberos_master_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_kerberos_master_client_packets',`
	corenet_send_kerberos_master_client_packets($1)
	corenet_receive_kerberos_master_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive kerberos_master_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_kerberos_master_client_packets',`
	corenet_dontaudit_send_kerberos_master_client_packets($1)
	corenet_dontaudit_receive_kerberos_master_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to kerberos_master_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_kerberos_master_client_packets',`
	gen_require(`
		type kerberos_master_client_packet_t;
	')

	allow $1 kerberos_master_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send kerberos_master_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_kerberos_master_server_packets',`
	gen_require(`
		type kerberos_master_server_packet_t;
	')

	allow $1 kerberos_master_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send kerberos_master_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_kerberos_master_server_packets',`
	gen_require(`
		type kerberos_master_server_packet_t;
	')

	dontaudit $1 kerberos_master_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive kerberos_master_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_kerberos_master_server_packets',`
	gen_require(`
		type kerberos_master_server_packet_t;
	')

	allow $1 kerberos_master_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive kerberos_master_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_kerberos_master_server_packets',`
	gen_require(`
		type kerberos_master_server_packet_t;
	')

	dontaudit $1 kerberos_master_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive kerberos_master_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_kerberos_master_server_packets',`
	corenet_send_kerberos_master_server_packets($1)
	corenet_receive_kerberos_master_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive kerberos_master_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_kerberos_master_server_packets',`
	corenet_dontaudit_send_kerberos_master_server_packets($1)
	corenet_dontaudit_receive_kerberos_master_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to kerberos_master_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_kerberos_master_server_packets',`
	gen_require(`
		type kerberos_master_server_packet_t;
	')

	allow $1 kerberos_master_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the kerberos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_kerberos_port',`
	gen_require(`
		type kerberos_port_t;
	')

	allow $1 kerberos_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the kerberos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_kerberos_port',`
	gen_require(`
		type kerberos_port_t;
	')

	allow $1 kerberos_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the kerberos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_kerberos_port',`
	gen_require(`
		type kerberos_port_t;
	')

	dontaudit $1 kerberos_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the kerberos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_kerberos_port',`
	gen_require(`
		type kerberos_port_t;
	')

	allow $1 kerberos_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the kerberos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_kerberos_port',`
	gen_require(`
		type kerberos_port_t;
	')

	dontaudit $1 kerberos_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the kerberos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_kerberos_port',`
	corenet_udp_send_kerberos_port($1)
	corenet_udp_receive_kerberos_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the kerberos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_kerberos_port',`
	corenet_dontaudit_udp_send_kerberos_port($1)
	corenet_dontaudit_udp_receive_kerberos_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the kerberos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_kerberos_port',`
	gen_require(`
		type kerberos_port_t;
	')

	allow $1 kerberos_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the kerberos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_kerberos_port',`
	gen_require(`
		type kerberos_port_t;
	')

	allow $1 kerberos_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the kerberos port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_kerberos_port',`
	gen_require(`
		type kerberos_port_t;
	')

	allow $1 kerberos_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send kerberos_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_kerberos_client_packets',`
	gen_require(`
		type kerberos_client_packet_t;
	')

	allow $1 kerberos_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send kerberos_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_kerberos_client_packets',`
	gen_require(`
		type kerberos_client_packet_t;
	')

	dontaudit $1 kerberos_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive kerberos_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_kerberos_client_packets',`
	gen_require(`
		type kerberos_client_packet_t;
	')

	allow $1 kerberos_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive kerberos_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_kerberos_client_packets',`
	gen_require(`
		type kerberos_client_packet_t;
	')

	dontaudit $1 kerberos_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive kerberos_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_kerberos_client_packets',`
	corenet_send_kerberos_client_packets($1)
	corenet_receive_kerberos_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive kerberos_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_kerberos_client_packets',`
	corenet_dontaudit_send_kerberos_client_packets($1)
	corenet_dontaudit_receive_kerberos_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to kerberos_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_kerberos_client_packets',`
	gen_require(`
		type kerberos_client_packet_t;
	')

	allow $1 kerberos_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send kerberos_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_kerberos_server_packets',`
	gen_require(`
		type kerberos_server_packet_t;
	')

	allow $1 kerberos_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send kerberos_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_kerberos_server_packets',`
	gen_require(`
		type kerberos_server_packet_t;
	')

	dontaudit $1 kerberos_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive kerberos_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_kerberos_server_packets',`
	gen_require(`
		type kerberos_server_packet_t;
	')

	allow $1 kerberos_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive kerberos_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_kerberos_server_packets',`
	gen_require(`
		type kerberos_server_packet_t;
	')

	dontaudit $1 kerberos_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive kerberos_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_kerberos_server_packets',`
	corenet_send_kerberos_server_packets($1)
	corenet_receive_kerberos_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive kerberos_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_kerberos_server_packets',`
	corenet_dontaudit_send_kerberos_server_packets($1)
	corenet_dontaudit_receive_kerberos_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to kerberos_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_kerberos_server_packets',`
	gen_require(`
		type kerberos_server_packet_t;
	')

	allow $1 kerberos_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the ktalkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_ktalkd_port',`
	gen_require(`
		type ktalkd_port_t;
	')

	allow $1 ktalkd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the ktalkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_ktalkd_port',`
	gen_require(`
		type ktalkd_port_t;
	')

	allow $1 ktalkd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the ktalkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_ktalkd_port',`
	gen_require(`
		type ktalkd_port_t;
	')

	dontaudit $1 ktalkd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the ktalkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_ktalkd_port',`
	gen_require(`
		type ktalkd_port_t;
	')

	allow $1 ktalkd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the ktalkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_ktalkd_port',`
	gen_require(`
		type ktalkd_port_t;
	')

	dontaudit $1 ktalkd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the ktalkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_ktalkd_port',`
	corenet_udp_send_ktalkd_port($1)
	corenet_udp_receive_ktalkd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the ktalkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_ktalkd_port',`
	corenet_dontaudit_udp_send_ktalkd_port($1)
	corenet_dontaudit_udp_receive_ktalkd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the ktalkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_ktalkd_port',`
	gen_require(`
		type ktalkd_port_t;
	')

	allow $1 ktalkd_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the ktalkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_ktalkd_port',`
	gen_require(`
		type ktalkd_port_t;
	')

	allow $1 ktalkd_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the ktalkd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_ktalkd_port',`
	gen_require(`
		type ktalkd_port_t;
	')

	allow $1 ktalkd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send ktalkd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ktalkd_client_packets',`
	gen_require(`
		type ktalkd_client_packet_t;
	')

	allow $1 ktalkd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ktalkd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ktalkd_client_packets',`
	gen_require(`
		type ktalkd_client_packet_t;
	')

	dontaudit $1 ktalkd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive ktalkd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ktalkd_client_packets',`
	gen_require(`
		type ktalkd_client_packet_t;
	')

	allow $1 ktalkd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ktalkd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ktalkd_client_packets',`
	gen_require(`
		type ktalkd_client_packet_t;
	')

	dontaudit $1 ktalkd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ktalkd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ktalkd_client_packets',`
	corenet_send_ktalkd_client_packets($1)
	corenet_receive_ktalkd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ktalkd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ktalkd_client_packets',`
	corenet_dontaudit_send_ktalkd_client_packets($1)
	corenet_dontaudit_receive_ktalkd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to ktalkd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ktalkd_client_packets',`
	gen_require(`
		type ktalkd_client_packet_t;
	')

	allow $1 ktalkd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send ktalkd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ktalkd_server_packets',`
	gen_require(`
		type ktalkd_server_packet_t;
	')

	allow $1 ktalkd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ktalkd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ktalkd_server_packets',`
	gen_require(`
		type ktalkd_server_packet_t;
	')

	dontaudit $1 ktalkd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive ktalkd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ktalkd_server_packets',`
	gen_require(`
		type ktalkd_server_packet_t;
	')

	allow $1 ktalkd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ktalkd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ktalkd_server_packets',`
	gen_require(`
		type ktalkd_server_packet_t;
	')

	dontaudit $1 ktalkd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ktalkd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ktalkd_server_packets',`
	corenet_send_ktalkd_server_packets($1)
	corenet_receive_ktalkd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ktalkd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ktalkd_server_packets',`
	corenet_dontaudit_send_ktalkd_server_packets($1)
	corenet_dontaudit_receive_ktalkd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to ktalkd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ktalkd_server_packets',`
	gen_require(`
		type ktalkd_server_packet_t;
	')

	allow $1 ktalkd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the ldap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_ldap_port',`
	gen_require(`
		type ldap_port_t;
	')

	allow $1 ldap_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the ldap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_ldap_port',`
	gen_require(`
		type ldap_port_t;
	')

	allow $1 ldap_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the ldap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_ldap_port',`
	gen_require(`
		type ldap_port_t;
	')

	dontaudit $1 ldap_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the ldap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_ldap_port',`
	gen_require(`
		type ldap_port_t;
	')

	allow $1 ldap_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the ldap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_ldap_port',`
	gen_require(`
		type ldap_port_t;
	')

	dontaudit $1 ldap_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the ldap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_ldap_port',`
	corenet_udp_send_ldap_port($1)
	corenet_udp_receive_ldap_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the ldap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_ldap_port',`
	corenet_dontaudit_udp_send_ldap_port($1)
	corenet_dontaudit_udp_receive_ldap_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the ldap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_ldap_port',`
	gen_require(`
		type ldap_port_t;
	')

	allow $1 ldap_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the ldap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_ldap_port',`
	gen_require(`
		type ldap_port_t;
	')

	allow $1 ldap_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the ldap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_ldap_port',`
	gen_require(`
		type ldap_port_t;
	')

	allow $1 ldap_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send ldap_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ldap_client_packets',`
	gen_require(`
		type ldap_client_packet_t;
	')

	allow $1 ldap_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ldap_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ldap_client_packets',`
	gen_require(`
		type ldap_client_packet_t;
	')

	dontaudit $1 ldap_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive ldap_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ldap_client_packets',`
	gen_require(`
		type ldap_client_packet_t;
	')

	allow $1 ldap_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ldap_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ldap_client_packets',`
	gen_require(`
		type ldap_client_packet_t;
	')

	dontaudit $1 ldap_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ldap_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ldap_client_packets',`
	corenet_send_ldap_client_packets($1)
	corenet_receive_ldap_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ldap_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ldap_client_packets',`
	corenet_dontaudit_send_ldap_client_packets($1)
	corenet_dontaudit_receive_ldap_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to ldap_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ldap_client_packets',`
	gen_require(`
		type ldap_client_packet_t;
	')

	allow $1 ldap_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send ldap_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ldap_server_packets',`
	gen_require(`
		type ldap_server_packet_t;
	')

	allow $1 ldap_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ldap_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ldap_server_packets',`
	gen_require(`
		type ldap_server_packet_t;
	')

	dontaudit $1 ldap_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive ldap_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ldap_server_packets',`
	gen_require(`
		type ldap_server_packet_t;
	')

	allow $1 ldap_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ldap_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ldap_server_packets',`
	gen_require(`
		type ldap_server_packet_t;
	')

	dontaudit $1 ldap_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ldap_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ldap_server_packets',`
	corenet_send_ldap_server_packets($1)
	corenet_receive_ldap_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ldap_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ldap_server_packets',`
	corenet_dontaudit_send_ldap_server_packets($1)
	corenet_dontaudit_receive_ldap_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to ldap_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ldap_server_packets',`
	gen_require(`
		type ldap_server_packet_t;
	')

	allow $1 ldap_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the lmtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_lmtp_port',`
	gen_require(`
		type lmtp_port_t;
	')

	allow $1 lmtp_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the lmtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_lmtp_port',`
	gen_require(`
		type lmtp_port_t;
	')

	allow $1 lmtp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the lmtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_lmtp_port',`
	gen_require(`
		type lmtp_port_t;
	')

	dontaudit $1 lmtp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the lmtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_lmtp_port',`
	gen_require(`
		type lmtp_port_t;
	')

	allow $1 lmtp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the lmtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_lmtp_port',`
	gen_require(`
		type lmtp_port_t;
	')

	dontaudit $1 lmtp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the lmtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_lmtp_port',`
	corenet_udp_send_lmtp_port($1)
	corenet_udp_receive_lmtp_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the lmtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_lmtp_port',`
	corenet_dontaudit_udp_send_lmtp_port($1)
	corenet_dontaudit_udp_receive_lmtp_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the lmtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_lmtp_port',`
	gen_require(`
		type lmtp_port_t;
	')

	allow $1 lmtp_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the lmtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_lmtp_port',`
	gen_require(`
		type lmtp_port_t;
	')

	allow $1 lmtp_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the lmtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_lmtp_port',`
	gen_require(`
		type lmtp_port_t;
	')

	allow $1 lmtp_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send lmtp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_lmtp_client_packets',`
	gen_require(`
		type lmtp_client_packet_t;
	')

	allow $1 lmtp_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send lmtp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_lmtp_client_packets',`
	gen_require(`
		type lmtp_client_packet_t;
	')

	dontaudit $1 lmtp_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive lmtp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_lmtp_client_packets',`
	gen_require(`
		type lmtp_client_packet_t;
	')

	allow $1 lmtp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive lmtp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_lmtp_client_packets',`
	gen_require(`
		type lmtp_client_packet_t;
	')

	dontaudit $1 lmtp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive lmtp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_lmtp_client_packets',`
	corenet_send_lmtp_client_packets($1)
	corenet_receive_lmtp_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive lmtp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_lmtp_client_packets',`
	corenet_dontaudit_send_lmtp_client_packets($1)
	corenet_dontaudit_receive_lmtp_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to lmtp_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_lmtp_client_packets',`
	gen_require(`
		type lmtp_client_packet_t;
	')

	allow $1 lmtp_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send lmtp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_lmtp_server_packets',`
	gen_require(`
		type lmtp_server_packet_t;
	')

	allow $1 lmtp_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send lmtp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_lmtp_server_packets',`
	gen_require(`
		type lmtp_server_packet_t;
	')

	dontaudit $1 lmtp_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive lmtp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_lmtp_server_packets',`
	gen_require(`
		type lmtp_server_packet_t;
	')

	allow $1 lmtp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive lmtp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_lmtp_server_packets',`
	gen_require(`
		type lmtp_server_packet_t;
	')

	dontaudit $1 lmtp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive lmtp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_lmtp_server_packets',`
	corenet_send_lmtp_server_packets($1)
	corenet_receive_lmtp_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive lmtp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_lmtp_server_packets',`
	corenet_dontaudit_send_lmtp_server_packets($1)
	corenet_dontaudit_receive_lmtp_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to lmtp_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_lmtp_server_packets',`
	gen_require(`
		type lmtp_server_packet_t;
	')

	allow $1 lmtp_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the mail port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_mail_port',`
	gen_require(`
		type mail_port_t;
	')

	allow $1 mail_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the mail port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_mail_port',`
	gen_require(`
		type mail_port_t;
	')

	allow $1 mail_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the mail port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_mail_port',`
	gen_require(`
		type mail_port_t;
	')

	dontaudit $1 mail_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the mail port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_mail_port',`
	gen_require(`
		type mail_port_t;
	')

	allow $1 mail_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the mail port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_mail_port',`
	gen_require(`
		type mail_port_t;
	')

	dontaudit $1 mail_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the mail port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_mail_port',`
	corenet_udp_send_mail_port($1)
	corenet_udp_receive_mail_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the mail port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_mail_port',`
	corenet_dontaudit_udp_send_mail_port($1)
	corenet_dontaudit_udp_receive_mail_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the mail port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_mail_port',`
	gen_require(`
		type mail_port_t;
	')

	allow $1 mail_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the mail port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_mail_port',`
	gen_require(`
		type mail_port_t;
	')

	allow $1 mail_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the mail port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_mail_port',`
	gen_require(`
		type mail_port_t;
	')

	allow $1 mail_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send mail_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_mail_client_packets',`
	gen_require(`
		type mail_client_packet_t;
	')

	allow $1 mail_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send mail_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_mail_client_packets',`
	gen_require(`
		type mail_client_packet_t;
	')

	dontaudit $1 mail_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive mail_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_mail_client_packets',`
	gen_require(`
		type mail_client_packet_t;
	')

	allow $1 mail_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive mail_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_mail_client_packets',`
	gen_require(`
		type mail_client_packet_t;
	')

	dontaudit $1 mail_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive mail_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_mail_client_packets',`
	corenet_send_mail_client_packets($1)
	corenet_receive_mail_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive mail_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_mail_client_packets',`
	corenet_dontaudit_send_mail_client_packets($1)
	corenet_dontaudit_receive_mail_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to mail_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_mail_client_packets',`
	gen_require(`
		type mail_client_packet_t;
	')

	allow $1 mail_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send mail_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_mail_server_packets',`
	gen_require(`
		type mail_server_packet_t;
	')

	allow $1 mail_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send mail_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_mail_server_packets',`
	gen_require(`
		type mail_server_packet_t;
	')

	dontaudit $1 mail_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive mail_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_mail_server_packets',`
	gen_require(`
		type mail_server_packet_t;
	')

	allow $1 mail_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive mail_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_mail_server_packets',`
	gen_require(`
		type mail_server_packet_t;
	')

	dontaudit $1 mail_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive mail_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_mail_server_packets',`
	corenet_send_mail_server_packets($1)
	corenet_receive_mail_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive mail_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_mail_server_packets',`
	corenet_dontaudit_send_mail_server_packets($1)
	corenet_dontaudit_receive_mail_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to mail_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_mail_server_packets',`
	gen_require(`
		type mail_server_packet_t;
	')

	allow $1 mail_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the monopd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_monopd_port',`
	gen_require(`
		type monopd_port_t;
	')

	allow $1 monopd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the monopd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_monopd_port',`
	gen_require(`
		type monopd_port_t;
	')

	allow $1 monopd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the monopd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_monopd_port',`
	gen_require(`
		type monopd_port_t;
	')

	dontaudit $1 monopd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the monopd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_monopd_port',`
	gen_require(`
		type monopd_port_t;
	')

	allow $1 monopd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the monopd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_monopd_port',`
	gen_require(`
		type monopd_port_t;
	')

	dontaudit $1 monopd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the monopd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_monopd_port',`
	corenet_udp_send_monopd_port($1)
	corenet_udp_receive_monopd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the monopd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_monopd_port',`
	corenet_dontaudit_udp_send_monopd_port($1)
	corenet_dontaudit_udp_receive_monopd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the monopd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_monopd_port',`
	gen_require(`
		type monopd_port_t;
	')

	allow $1 monopd_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the monopd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_monopd_port',`
	gen_require(`
		type monopd_port_t;
	')

	allow $1 monopd_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the monopd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_monopd_port',`
	gen_require(`
		type monopd_port_t;
	')

	allow $1 monopd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send monopd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_monopd_client_packets',`
	gen_require(`
		type monopd_client_packet_t;
	')

	allow $1 monopd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send monopd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_monopd_client_packets',`
	gen_require(`
		type monopd_client_packet_t;
	')

	dontaudit $1 monopd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive monopd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_monopd_client_packets',`
	gen_require(`
		type monopd_client_packet_t;
	')

	allow $1 monopd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive monopd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_monopd_client_packets',`
	gen_require(`
		type monopd_client_packet_t;
	')

	dontaudit $1 monopd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive monopd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_monopd_client_packets',`
	corenet_send_monopd_client_packets($1)
	corenet_receive_monopd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive monopd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_monopd_client_packets',`
	corenet_dontaudit_send_monopd_client_packets($1)
	corenet_dontaudit_receive_monopd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to monopd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_monopd_client_packets',`
	gen_require(`
		type monopd_client_packet_t;
	')

	allow $1 monopd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send monopd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_monopd_server_packets',`
	gen_require(`
		type monopd_server_packet_t;
	')

	allow $1 monopd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send monopd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_monopd_server_packets',`
	gen_require(`
		type monopd_server_packet_t;
	')

	dontaudit $1 monopd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive monopd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_monopd_server_packets',`
	gen_require(`
		type monopd_server_packet_t;
	')

	allow $1 monopd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive monopd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_monopd_server_packets',`
	gen_require(`
		type monopd_server_packet_t;
	')

	dontaudit $1 monopd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive monopd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_monopd_server_packets',`
	corenet_send_monopd_server_packets($1)
	corenet_receive_monopd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive monopd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_monopd_server_packets',`
	corenet_dontaudit_send_monopd_server_packets($1)
	corenet_dontaudit_receive_monopd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to monopd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_monopd_server_packets',`
	gen_require(`
		type monopd_server_packet_t;
	')

	allow $1 monopd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the mysqld port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_mysqld_port',`
	gen_require(`
		type mysqld_port_t;
	')

	allow $1 mysqld_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the mysqld port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_mysqld_port',`
	gen_require(`
		type mysqld_port_t;
	')

	allow $1 mysqld_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the mysqld port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_mysqld_port',`
	gen_require(`
		type mysqld_port_t;
	')

	dontaudit $1 mysqld_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the mysqld port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_mysqld_port',`
	gen_require(`
		type mysqld_port_t;
	')

	allow $1 mysqld_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the mysqld port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_mysqld_port',`
	gen_require(`
		type mysqld_port_t;
	')

	dontaudit $1 mysqld_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the mysqld port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_mysqld_port',`
	corenet_udp_send_mysqld_port($1)
	corenet_udp_receive_mysqld_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the mysqld port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_mysqld_port',`
	corenet_dontaudit_udp_send_mysqld_port($1)
	corenet_dontaudit_udp_receive_mysqld_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the mysqld port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_mysqld_port',`
	gen_require(`
		type mysqld_port_t;
	')

	allow $1 mysqld_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the mysqld port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_mysqld_port',`
	gen_require(`
		type mysqld_port_t;
	')

	allow $1 mysqld_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the mysqld port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_mysqld_port',`
	gen_require(`
		type mysqld_port_t;
	')

	allow $1 mysqld_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send mysqld_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_mysqld_client_packets',`
	gen_require(`
		type mysqld_client_packet_t;
	')

	allow $1 mysqld_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send mysqld_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_mysqld_client_packets',`
	gen_require(`
		type mysqld_client_packet_t;
	')

	dontaudit $1 mysqld_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive mysqld_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_mysqld_client_packets',`
	gen_require(`
		type mysqld_client_packet_t;
	')

	allow $1 mysqld_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive mysqld_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_mysqld_client_packets',`
	gen_require(`
		type mysqld_client_packet_t;
	')

	dontaudit $1 mysqld_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive mysqld_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_mysqld_client_packets',`
	corenet_send_mysqld_client_packets($1)
	corenet_receive_mysqld_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive mysqld_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_mysqld_client_packets',`
	corenet_dontaudit_send_mysqld_client_packets($1)
	corenet_dontaudit_receive_mysqld_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to mysqld_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_mysqld_client_packets',`
	gen_require(`
		type mysqld_client_packet_t;
	')

	allow $1 mysqld_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send mysqld_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_mysqld_server_packets',`
	gen_require(`
		type mysqld_server_packet_t;
	')

	allow $1 mysqld_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send mysqld_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_mysqld_server_packets',`
	gen_require(`
		type mysqld_server_packet_t;
	')

	dontaudit $1 mysqld_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive mysqld_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_mysqld_server_packets',`
	gen_require(`
		type mysqld_server_packet_t;
	')

	allow $1 mysqld_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive mysqld_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_mysqld_server_packets',`
	gen_require(`
		type mysqld_server_packet_t;
	')

	dontaudit $1 mysqld_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive mysqld_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_mysqld_server_packets',`
	corenet_send_mysqld_server_packets($1)
	corenet_receive_mysqld_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive mysqld_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_mysqld_server_packets',`
	corenet_dontaudit_send_mysqld_server_packets($1)
	corenet_dontaudit_receive_mysqld_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to mysqld_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_mysqld_server_packets',`
	gen_require(`
		type mysqld_server_packet_t;
	')

	allow $1 mysqld_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the nessus port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_nessus_port',`
	gen_require(`
		type nessus_port_t;
	')

	allow $1 nessus_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the nessus port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_nessus_port',`
	gen_require(`
		type nessus_port_t;
	')

	allow $1 nessus_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the nessus port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_nessus_port',`
	gen_require(`
		type nessus_port_t;
	')

	dontaudit $1 nessus_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the nessus port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_nessus_port',`
	gen_require(`
		type nessus_port_t;
	')

	allow $1 nessus_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the nessus port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_nessus_port',`
	gen_require(`
		type nessus_port_t;
	')

	dontaudit $1 nessus_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the nessus port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_nessus_port',`
	corenet_udp_send_nessus_port($1)
	corenet_udp_receive_nessus_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the nessus port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_nessus_port',`
	corenet_dontaudit_udp_send_nessus_port($1)
	corenet_dontaudit_udp_receive_nessus_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the nessus port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_nessus_port',`
	gen_require(`
		type nessus_port_t;
	')

	allow $1 nessus_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the nessus port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_nessus_port',`
	gen_require(`
		type nessus_port_t;
	')

	allow $1 nessus_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the nessus port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_nessus_port',`
	gen_require(`
		type nessus_port_t;
	')

	allow $1 nessus_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send nessus_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_nessus_client_packets',`
	gen_require(`
		type nessus_client_packet_t;
	')

	allow $1 nessus_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send nessus_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_nessus_client_packets',`
	gen_require(`
		type nessus_client_packet_t;
	')

	dontaudit $1 nessus_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive nessus_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_nessus_client_packets',`
	gen_require(`
		type nessus_client_packet_t;
	')

	allow $1 nessus_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive nessus_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_nessus_client_packets',`
	gen_require(`
		type nessus_client_packet_t;
	')

	dontaudit $1 nessus_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive nessus_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_nessus_client_packets',`
	corenet_send_nessus_client_packets($1)
	corenet_receive_nessus_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive nessus_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_nessus_client_packets',`
	corenet_dontaudit_send_nessus_client_packets($1)
	corenet_dontaudit_receive_nessus_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to nessus_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_nessus_client_packets',`
	gen_require(`
		type nessus_client_packet_t;
	')

	allow $1 nessus_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send nessus_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_nessus_server_packets',`
	gen_require(`
		type nessus_server_packet_t;
	')

	allow $1 nessus_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send nessus_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_nessus_server_packets',`
	gen_require(`
		type nessus_server_packet_t;
	')

	dontaudit $1 nessus_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive nessus_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_nessus_server_packets',`
	gen_require(`
		type nessus_server_packet_t;
	')

	allow $1 nessus_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive nessus_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_nessus_server_packets',`
	gen_require(`
		type nessus_server_packet_t;
	')

	dontaudit $1 nessus_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive nessus_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_nessus_server_packets',`
	corenet_send_nessus_server_packets($1)
	corenet_receive_nessus_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive nessus_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_nessus_server_packets',`
	corenet_dontaudit_send_nessus_server_packets($1)
	corenet_dontaudit_receive_nessus_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to nessus_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_nessus_server_packets',`
	gen_require(`
		type nessus_server_packet_t;
	')

	allow $1 nessus_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the nmbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_nmbd_port',`
	gen_require(`
		type nmbd_port_t;
	')

	allow $1 nmbd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the nmbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_nmbd_port',`
	gen_require(`
		type nmbd_port_t;
	')

	allow $1 nmbd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the nmbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_nmbd_port',`
	gen_require(`
		type nmbd_port_t;
	')

	dontaudit $1 nmbd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the nmbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_nmbd_port',`
	gen_require(`
		type nmbd_port_t;
	')

	allow $1 nmbd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the nmbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_nmbd_port',`
	gen_require(`
		type nmbd_port_t;
	')

	dontaudit $1 nmbd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the nmbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_nmbd_port',`
	corenet_udp_send_nmbd_port($1)
	corenet_udp_receive_nmbd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the nmbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_nmbd_port',`
	corenet_dontaudit_udp_send_nmbd_port($1)
	corenet_dontaudit_udp_receive_nmbd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the nmbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_nmbd_port',`
	gen_require(`
		type nmbd_port_t;
	')

	allow $1 nmbd_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the nmbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_nmbd_port',`
	gen_require(`
		type nmbd_port_t;
	')

	allow $1 nmbd_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the nmbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_nmbd_port',`
	gen_require(`
		type nmbd_port_t;
	')

	allow $1 nmbd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send nmbd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_nmbd_client_packets',`
	gen_require(`
		type nmbd_client_packet_t;
	')

	allow $1 nmbd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send nmbd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_nmbd_client_packets',`
	gen_require(`
		type nmbd_client_packet_t;
	')

	dontaudit $1 nmbd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive nmbd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_nmbd_client_packets',`
	gen_require(`
		type nmbd_client_packet_t;
	')

	allow $1 nmbd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive nmbd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_nmbd_client_packets',`
	gen_require(`
		type nmbd_client_packet_t;
	')

	dontaudit $1 nmbd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive nmbd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_nmbd_client_packets',`
	corenet_send_nmbd_client_packets($1)
	corenet_receive_nmbd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive nmbd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_nmbd_client_packets',`
	corenet_dontaudit_send_nmbd_client_packets($1)
	corenet_dontaudit_receive_nmbd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to nmbd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_nmbd_client_packets',`
	gen_require(`
		type nmbd_client_packet_t;
	')

	allow $1 nmbd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send nmbd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_nmbd_server_packets',`
	gen_require(`
		type nmbd_server_packet_t;
	')

	allow $1 nmbd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send nmbd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_nmbd_server_packets',`
	gen_require(`
		type nmbd_server_packet_t;
	')

	dontaudit $1 nmbd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive nmbd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_nmbd_server_packets',`
	gen_require(`
		type nmbd_server_packet_t;
	')

	allow $1 nmbd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive nmbd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_nmbd_server_packets',`
	gen_require(`
		type nmbd_server_packet_t;
	')

	dontaudit $1 nmbd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive nmbd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_nmbd_server_packets',`
	corenet_send_nmbd_server_packets($1)
	corenet_receive_nmbd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive nmbd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_nmbd_server_packets',`
	corenet_dontaudit_send_nmbd_server_packets($1)
	corenet_dontaudit_receive_nmbd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to nmbd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_nmbd_server_packets',`
	gen_require(`
		type nmbd_server_packet_t;
	')

	allow $1 nmbd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the ntp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_ntp_port',`
	gen_require(`
		type ntp_port_t;
	')

	allow $1 ntp_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the ntp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_ntp_port',`
	gen_require(`
		type ntp_port_t;
	')

	allow $1 ntp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the ntp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_ntp_port',`
	gen_require(`
		type ntp_port_t;
	')

	dontaudit $1 ntp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the ntp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_ntp_port',`
	gen_require(`
		type ntp_port_t;
	')

	allow $1 ntp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the ntp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_ntp_port',`
	gen_require(`
		type ntp_port_t;
	')

	dontaudit $1 ntp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the ntp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_ntp_port',`
	corenet_udp_send_ntp_port($1)
	corenet_udp_receive_ntp_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the ntp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_ntp_port',`
	corenet_dontaudit_udp_send_ntp_port($1)
	corenet_dontaudit_udp_receive_ntp_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the ntp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_ntp_port',`
	gen_require(`
		type ntp_port_t;
	')

	allow $1 ntp_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the ntp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_ntp_port',`
	gen_require(`
		type ntp_port_t;
	')

	allow $1 ntp_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the ntp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_ntp_port',`
	gen_require(`
		type ntp_port_t;
	')

	allow $1 ntp_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send ntp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ntp_client_packets',`
	gen_require(`
		type ntp_client_packet_t;
	')

	allow $1 ntp_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ntp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ntp_client_packets',`
	gen_require(`
		type ntp_client_packet_t;
	')

	dontaudit $1 ntp_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive ntp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ntp_client_packets',`
	gen_require(`
		type ntp_client_packet_t;
	')

	allow $1 ntp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ntp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ntp_client_packets',`
	gen_require(`
		type ntp_client_packet_t;
	')

	dontaudit $1 ntp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ntp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ntp_client_packets',`
	corenet_send_ntp_client_packets($1)
	corenet_receive_ntp_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ntp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ntp_client_packets',`
	corenet_dontaudit_send_ntp_client_packets($1)
	corenet_dontaudit_receive_ntp_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to ntp_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ntp_client_packets',`
	gen_require(`
		type ntp_client_packet_t;
	')

	allow $1 ntp_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send ntp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ntp_server_packets',`
	gen_require(`
		type ntp_server_packet_t;
	')

	allow $1 ntp_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ntp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ntp_server_packets',`
	gen_require(`
		type ntp_server_packet_t;
	')

	dontaudit $1 ntp_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive ntp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ntp_server_packets',`
	gen_require(`
		type ntp_server_packet_t;
	')

	allow $1 ntp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ntp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ntp_server_packets',`
	gen_require(`
		type ntp_server_packet_t;
	')

	dontaudit $1 ntp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ntp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ntp_server_packets',`
	corenet_send_ntp_server_packets($1)
	corenet_receive_ntp_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ntp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ntp_server_packets',`
	corenet_dontaudit_send_ntp_server_packets($1)
	corenet_dontaudit_receive_ntp_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to ntp_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ntp_server_packets',`
	gen_require(`
		type ntp_server_packet_t;
	')

	allow $1 ntp_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the openvpn port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_openvpn_port',`
	gen_require(`
		type openvpn_port_t;
	')

	allow $1 openvpn_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the openvpn port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_openvpn_port',`
	gen_require(`
		type openvpn_port_t;
	')

	allow $1 openvpn_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the openvpn port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_openvpn_port',`
	gen_require(`
		type openvpn_port_t;
	')

	dontaudit $1 openvpn_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the openvpn port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_openvpn_port',`
	gen_require(`
		type openvpn_port_t;
	')

	allow $1 openvpn_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the openvpn port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_openvpn_port',`
	gen_require(`
		type openvpn_port_t;
	')

	dontaudit $1 openvpn_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the openvpn port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_openvpn_port',`
	corenet_udp_send_openvpn_port($1)
	corenet_udp_receive_openvpn_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the openvpn port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_openvpn_port',`
	corenet_dontaudit_udp_send_openvpn_port($1)
	corenet_dontaudit_udp_receive_openvpn_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the openvpn port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_openvpn_port',`
	gen_require(`
		type openvpn_port_t;
	')

	allow $1 openvpn_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the openvpn port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_openvpn_port',`
	gen_require(`
		type openvpn_port_t;
	')

	allow $1 openvpn_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the openvpn port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_openvpn_port',`
	gen_require(`
		type openvpn_port_t;
	')

	allow $1 openvpn_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send openvpn_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_openvpn_client_packets',`
	gen_require(`
		type openvpn_client_packet_t;
	')

	allow $1 openvpn_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send openvpn_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_openvpn_client_packets',`
	gen_require(`
		type openvpn_client_packet_t;
	')

	dontaudit $1 openvpn_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive openvpn_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_openvpn_client_packets',`
	gen_require(`
		type openvpn_client_packet_t;
	')

	allow $1 openvpn_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive openvpn_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_openvpn_client_packets',`
	gen_require(`
		type openvpn_client_packet_t;
	')

	dontaudit $1 openvpn_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive openvpn_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_openvpn_client_packets',`
	corenet_send_openvpn_client_packets($1)
	corenet_receive_openvpn_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive openvpn_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_openvpn_client_packets',`
	corenet_dontaudit_send_openvpn_client_packets($1)
	corenet_dontaudit_receive_openvpn_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to openvpn_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_openvpn_client_packets',`
	gen_require(`
		type openvpn_client_packet_t;
	')

	allow $1 openvpn_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send openvpn_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_openvpn_server_packets',`
	gen_require(`
		type openvpn_server_packet_t;
	')

	allow $1 openvpn_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send openvpn_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_openvpn_server_packets',`
	gen_require(`
		type openvpn_server_packet_t;
	')

	dontaudit $1 openvpn_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive openvpn_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_openvpn_server_packets',`
	gen_require(`
		type openvpn_server_packet_t;
	')

	allow $1 openvpn_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive openvpn_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_openvpn_server_packets',`
	gen_require(`
		type openvpn_server_packet_t;
	')

	dontaudit $1 openvpn_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive openvpn_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_openvpn_server_packets',`
	corenet_send_openvpn_server_packets($1)
	corenet_receive_openvpn_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive openvpn_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_openvpn_server_packets',`
	corenet_dontaudit_send_openvpn_server_packets($1)
	corenet_dontaudit_receive_openvpn_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to openvpn_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_openvpn_server_packets',`
	gen_require(`
		type openvpn_server_packet_t;
	')

	allow $1 openvpn_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the pegasus_http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_pegasus_http_port',`
	gen_require(`
		type pegasus_http_port_t;
	')

	allow $1 pegasus_http_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the pegasus_http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_pegasus_http_port',`
	gen_require(`
		type pegasus_http_port_t;
	')

	allow $1 pegasus_http_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the pegasus_http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_pegasus_http_port',`
	gen_require(`
		type pegasus_http_port_t;
	')

	dontaudit $1 pegasus_http_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the pegasus_http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_pegasus_http_port',`
	gen_require(`
		type pegasus_http_port_t;
	')

	allow $1 pegasus_http_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the pegasus_http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_pegasus_http_port',`
	gen_require(`
		type pegasus_http_port_t;
	')

	dontaudit $1 pegasus_http_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the pegasus_http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_pegasus_http_port',`
	corenet_udp_send_pegasus_http_port($1)
	corenet_udp_receive_pegasus_http_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the pegasus_http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_pegasus_http_port',`
	corenet_dontaudit_udp_send_pegasus_http_port($1)
	corenet_dontaudit_udp_receive_pegasus_http_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the pegasus_http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_pegasus_http_port',`
	gen_require(`
		type pegasus_http_port_t;
	')

	allow $1 pegasus_http_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the pegasus_http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_pegasus_http_port',`
	gen_require(`
		type pegasus_http_port_t;
	')

	allow $1 pegasus_http_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the pegasus_http port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_pegasus_http_port',`
	gen_require(`
		type pegasus_http_port_t;
	')

	allow $1 pegasus_http_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send pegasus_http_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_pegasus_http_client_packets',`
	gen_require(`
		type pegasus_http_client_packet_t;
	')

	allow $1 pegasus_http_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send pegasus_http_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_pegasus_http_client_packets',`
	gen_require(`
		type pegasus_http_client_packet_t;
	')

	dontaudit $1 pegasus_http_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive pegasus_http_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_pegasus_http_client_packets',`
	gen_require(`
		type pegasus_http_client_packet_t;
	')

	allow $1 pegasus_http_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive pegasus_http_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_pegasus_http_client_packets',`
	gen_require(`
		type pegasus_http_client_packet_t;
	')

	dontaudit $1 pegasus_http_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive pegasus_http_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_pegasus_http_client_packets',`
	corenet_send_pegasus_http_client_packets($1)
	corenet_receive_pegasus_http_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive pegasus_http_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_pegasus_http_client_packets',`
	corenet_dontaudit_send_pegasus_http_client_packets($1)
	corenet_dontaudit_receive_pegasus_http_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to pegasus_http_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_pegasus_http_client_packets',`
	gen_require(`
		type pegasus_http_client_packet_t;
	')

	allow $1 pegasus_http_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send pegasus_http_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_pegasus_http_server_packets',`
	gen_require(`
		type pegasus_http_server_packet_t;
	')

	allow $1 pegasus_http_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send pegasus_http_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_pegasus_http_server_packets',`
	gen_require(`
		type pegasus_http_server_packet_t;
	')

	dontaudit $1 pegasus_http_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive pegasus_http_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_pegasus_http_server_packets',`
	gen_require(`
		type pegasus_http_server_packet_t;
	')

	allow $1 pegasus_http_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive pegasus_http_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_pegasus_http_server_packets',`
	gen_require(`
		type pegasus_http_server_packet_t;
	')

	dontaudit $1 pegasus_http_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive pegasus_http_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_pegasus_http_server_packets',`
	corenet_send_pegasus_http_server_packets($1)
	corenet_receive_pegasus_http_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive pegasus_http_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_pegasus_http_server_packets',`
	corenet_dontaudit_send_pegasus_http_server_packets($1)
	corenet_dontaudit_receive_pegasus_http_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to pegasus_http_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_pegasus_http_server_packets',`
	gen_require(`
		type pegasus_http_server_packet_t;
	')

	allow $1 pegasus_http_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the pegasus_https port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_pegasus_https_port',`
	gen_require(`
		type pegasus_https_port_t;
	')

	allow $1 pegasus_https_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the pegasus_https port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_pegasus_https_port',`
	gen_require(`
		type pegasus_https_port_t;
	')

	allow $1 pegasus_https_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the pegasus_https port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_pegasus_https_port',`
	gen_require(`
		type pegasus_https_port_t;
	')

	dontaudit $1 pegasus_https_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the pegasus_https port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_pegasus_https_port',`
	gen_require(`
		type pegasus_https_port_t;
	')

	allow $1 pegasus_https_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the pegasus_https port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_pegasus_https_port',`
	gen_require(`
		type pegasus_https_port_t;
	')

	dontaudit $1 pegasus_https_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the pegasus_https port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_pegasus_https_port',`
	corenet_udp_send_pegasus_https_port($1)
	corenet_udp_receive_pegasus_https_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the pegasus_https port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_pegasus_https_port',`
	corenet_dontaudit_udp_send_pegasus_https_port($1)
	corenet_dontaudit_udp_receive_pegasus_https_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the pegasus_https port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_pegasus_https_port',`
	gen_require(`
		type pegasus_https_port_t;
	')

	allow $1 pegasus_https_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the pegasus_https port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_pegasus_https_port',`
	gen_require(`
		type pegasus_https_port_t;
	')

	allow $1 pegasus_https_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the pegasus_https port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_pegasus_https_port',`
	gen_require(`
		type pegasus_https_port_t;
	')

	allow $1 pegasus_https_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send pegasus_https_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_pegasus_https_client_packets',`
	gen_require(`
		type pegasus_https_client_packet_t;
	')

	allow $1 pegasus_https_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send pegasus_https_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_pegasus_https_client_packets',`
	gen_require(`
		type pegasus_https_client_packet_t;
	')

	dontaudit $1 pegasus_https_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive pegasus_https_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_pegasus_https_client_packets',`
	gen_require(`
		type pegasus_https_client_packet_t;
	')

	allow $1 pegasus_https_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive pegasus_https_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_pegasus_https_client_packets',`
	gen_require(`
		type pegasus_https_client_packet_t;
	')

	dontaudit $1 pegasus_https_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive pegasus_https_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_pegasus_https_client_packets',`
	corenet_send_pegasus_https_client_packets($1)
	corenet_receive_pegasus_https_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive pegasus_https_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_pegasus_https_client_packets',`
	corenet_dontaudit_send_pegasus_https_client_packets($1)
	corenet_dontaudit_receive_pegasus_https_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to pegasus_https_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_pegasus_https_client_packets',`
	gen_require(`
		type pegasus_https_client_packet_t;
	')

	allow $1 pegasus_https_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send pegasus_https_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_pegasus_https_server_packets',`
	gen_require(`
		type pegasus_https_server_packet_t;
	')

	allow $1 pegasus_https_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send pegasus_https_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_pegasus_https_server_packets',`
	gen_require(`
		type pegasus_https_server_packet_t;
	')

	dontaudit $1 pegasus_https_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive pegasus_https_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_pegasus_https_server_packets',`
	gen_require(`
		type pegasus_https_server_packet_t;
	')

	allow $1 pegasus_https_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive pegasus_https_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_pegasus_https_server_packets',`
	gen_require(`
		type pegasus_https_server_packet_t;
	')

	dontaudit $1 pegasus_https_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive pegasus_https_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_pegasus_https_server_packets',`
	corenet_send_pegasus_https_server_packets($1)
	corenet_receive_pegasus_https_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive pegasus_https_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_pegasus_https_server_packets',`
	corenet_dontaudit_send_pegasus_https_server_packets($1)
	corenet_dontaudit_receive_pegasus_https_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to pegasus_https_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_pegasus_https_server_packets',`
	gen_require(`
		type pegasus_https_server_packet_t;
	')

	allow $1 pegasus_https_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the pop port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_pop_port',`
	gen_require(`
		type pop_port_t;
	')

	allow $1 pop_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the pop port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_pop_port',`
	gen_require(`
		type pop_port_t;
	')

	allow $1 pop_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the pop port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_pop_port',`
	gen_require(`
		type pop_port_t;
	')

	dontaudit $1 pop_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the pop port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_pop_port',`
	gen_require(`
		type pop_port_t;
	')

	allow $1 pop_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the pop port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_pop_port',`
	gen_require(`
		type pop_port_t;
	')

	dontaudit $1 pop_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the pop port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_pop_port',`
	corenet_udp_send_pop_port($1)
	corenet_udp_receive_pop_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the pop port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_pop_port',`
	corenet_dontaudit_udp_send_pop_port($1)
	corenet_dontaudit_udp_receive_pop_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the pop port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_pop_port',`
	gen_require(`
		type pop_port_t;
	')

	allow $1 pop_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the pop port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_pop_port',`
	gen_require(`
		type pop_port_t;
	')

	allow $1 pop_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the pop port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_pop_port',`
	gen_require(`
		type pop_port_t;
	')

	allow $1 pop_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send pop_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_pop_client_packets',`
	gen_require(`
		type pop_client_packet_t;
	')

	allow $1 pop_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send pop_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_pop_client_packets',`
	gen_require(`
		type pop_client_packet_t;
	')

	dontaudit $1 pop_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive pop_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_pop_client_packets',`
	gen_require(`
		type pop_client_packet_t;
	')

	allow $1 pop_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive pop_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_pop_client_packets',`
	gen_require(`
		type pop_client_packet_t;
	')

	dontaudit $1 pop_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive pop_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_pop_client_packets',`
	corenet_send_pop_client_packets($1)
	corenet_receive_pop_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive pop_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_pop_client_packets',`
	corenet_dontaudit_send_pop_client_packets($1)
	corenet_dontaudit_receive_pop_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to pop_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_pop_client_packets',`
	gen_require(`
		type pop_client_packet_t;
	')

	allow $1 pop_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send pop_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_pop_server_packets',`
	gen_require(`
		type pop_server_packet_t;
	')

	allow $1 pop_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send pop_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_pop_server_packets',`
	gen_require(`
		type pop_server_packet_t;
	')

	dontaudit $1 pop_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive pop_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_pop_server_packets',`
	gen_require(`
		type pop_server_packet_t;
	')

	allow $1 pop_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive pop_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_pop_server_packets',`
	gen_require(`
		type pop_server_packet_t;
	')

	dontaudit $1 pop_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive pop_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_pop_server_packets',`
	corenet_send_pop_server_packets($1)
	corenet_receive_pop_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive pop_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_pop_server_packets',`
	corenet_dontaudit_send_pop_server_packets($1)
	corenet_dontaudit_receive_pop_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to pop_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_pop_server_packets',`
	gen_require(`
		type pop_server_packet_t;
	')

	allow $1 pop_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the portmap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_portmap_port',`
	gen_require(`
		type portmap_port_t;
	')

	allow $1 portmap_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the portmap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_portmap_port',`
	gen_require(`
		type portmap_port_t;
	')

	allow $1 portmap_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the portmap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_portmap_port',`
	gen_require(`
		type portmap_port_t;
	')

	dontaudit $1 portmap_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the portmap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_portmap_port',`
	gen_require(`
		type portmap_port_t;
	')

	allow $1 portmap_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the portmap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_portmap_port',`
	gen_require(`
		type portmap_port_t;
	')

	dontaudit $1 portmap_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the portmap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_portmap_port',`
	corenet_udp_send_portmap_port($1)
	corenet_udp_receive_portmap_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the portmap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_portmap_port',`
	corenet_dontaudit_udp_send_portmap_port($1)
	corenet_dontaudit_udp_receive_portmap_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the portmap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_portmap_port',`
	gen_require(`
		type portmap_port_t;
	')

	allow $1 portmap_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the portmap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_portmap_port',`
	gen_require(`
		type portmap_port_t;
	')

	allow $1 portmap_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the portmap port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_portmap_port',`
	gen_require(`
		type portmap_port_t;
	')

	allow $1 portmap_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send portmap_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_portmap_client_packets',`
	gen_require(`
		type portmap_client_packet_t;
	')

	allow $1 portmap_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send portmap_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_portmap_client_packets',`
	gen_require(`
		type portmap_client_packet_t;
	')

	dontaudit $1 portmap_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive portmap_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_portmap_client_packets',`
	gen_require(`
		type portmap_client_packet_t;
	')

	allow $1 portmap_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive portmap_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_portmap_client_packets',`
	gen_require(`
		type portmap_client_packet_t;
	')

	dontaudit $1 portmap_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive portmap_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_portmap_client_packets',`
	corenet_send_portmap_client_packets($1)
	corenet_receive_portmap_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive portmap_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_portmap_client_packets',`
	corenet_dontaudit_send_portmap_client_packets($1)
	corenet_dontaudit_receive_portmap_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to portmap_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_portmap_client_packets',`
	gen_require(`
		type portmap_client_packet_t;
	')

	allow $1 portmap_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send portmap_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_portmap_server_packets',`
	gen_require(`
		type portmap_server_packet_t;
	')

	allow $1 portmap_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send portmap_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_portmap_server_packets',`
	gen_require(`
		type portmap_server_packet_t;
	')

	dontaudit $1 portmap_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive portmap_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_portmap_server_packets',`
	gen_require(`
		type portmap_server_packet_t;
	')

	allow $1 portmap_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive portmap_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_portmap_server_packets',`
	gen_require(`
		type portmap_server_packet_t;
	')

	dontaudit $1 portmap_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive portmap_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_portmap_server_packets',`
	corenet_send_portmap_server_packets($1)
	corenet_receive_portmap_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive portmap_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_portmap_server_packets',`
	corenet_dontaudit_send_portmap_server_packets($1)
	corenet_dontaudit_receive_portmap_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to portmap_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_portmap_server_packets',`
	gen_require(`
		type portmap_server_packet_t;
	')

	allow $1 portmap_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the postgresql port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_postgresql_port',`
	gen_require(`
		type postgresql_port_t;
	')

	allow $1 postgresql_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the postgresql port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_postgresql_port',`
	gen_require(`
		type postgresql_port_t;
	')

	allow $1 postgresql_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the postgresql port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_postgresql_port',`
	gen_require(`
		type postgresql_port_t;
	')

	dontaudit $1 postgresql_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the postgresql port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_postgresql_port',`
	gen_require(`
		type postgresql_port_t;
	')

	allow $1 postgresql_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the postgresql port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_postgresql_port',`
	gen_require(`
		type postgresql_port_t;
	')

	dontaudit $1 postgresql_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the postgresql port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_postgresql_port',`
	corenet_udp_send_postgresql_port($1)
	corenet_udp_receive_postgresql_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the postgresql port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_postgresql_port',`
	corenet_dontaudit_udp_send_postgresql_port($1)
	corenet_dontaudit_udp_receive_postgresql_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the postgresql port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_postgresql_port',`
	gen_require(`
		type postgresql_port_t;
	')

	allow $1 postgresql_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the postgresql port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_postgresql_port',`
	gen_require(`
		type postgresql_port_t;
	')

	allow $1 postgresql_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the postgresql port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_postgresql_port',`
	gen_require(`
		type postgresql_port_t;
	')

	allow $1 postgresql_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send postgresql_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_postgresql_client_packets',`
	gen_require(`
		type postgresql_client_packet_t;
	')

	allow $1 postgresql_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send postgresql_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_postgresql_client_packets',`
	gen_require(`
		type postgresql_client_packet_t;
	')

	dontaudit $1 postgresql_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive postgresql_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_postgresql_client_packets',`
	gen_require(`
		type postgresql_client_packet_t;
	')

	allow $1 postgresql_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive postgresql_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_postgresql_client_packets',`
	gen_require(`
		type postgresql_client_packet_t;
	')

	dontaudit $1 postgresql_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive postgresql_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_postgresql_client_packets',`
	corenet_send_postgresql_client_packets($1)
	corenet_receive_postgresql_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive postgresql_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_postgresql_client_packets',`
	corenet_dontaudit_send_postgresql_client_packets($1)
	corenet_dontaudit_receive_postgresql_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to postgresql_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_postgresql_client_packets',`
	gen_require(`
		type postgresql_client_packet_t;
	')

	allow $1 postgresql_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send postgresql_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_postgresql_server_packets',`
	gen_require(`
		type postgresql_server_packet_t;
	')

	allow $1 postgresql_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send postgresql_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_postgresql_server_packets',`
	gen_require(`
		type postgresql_server_packet_t;
	')

	dontaudit $1 postgresql_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive postgresql_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_postgresql_server_packets',`
	gen_require(`
		type postgresql_server_packet_t;
	')

	allow $1 postgresql_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive postgresql_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_postgresql_server_packets',`
	gen_require(`
		type postgresql_server_packet_t;
	')

	dontaudit $1 postgresql_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive postgresql_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_postgresql_server_packets',`
	corenet_send_postgresql_server_packets($1)
	corenet_receive_postgresql_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive postgresql_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_postgresql_server_packets',`
	corenet_dontaudit_send_postgresql_server_packets($1)
	corenet_dontaudit_receive_postgresql_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to postgresql_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_postgresql_server_packets',`
	gen_require(`
		type postgresql_server_packet_t;
	')

	allow $1 postgresql_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the postgrey port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_postgrey_port',`
	gen_require(`
		type postgrey_port_t;
	')

	allow $1 postgrey_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the postgrey port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_postgrey_port',`
	gen_require(`
		type postgrey_port_t;
	')

	allow $1 postgrey_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the postgrey port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_postgrey_port',`
	gen_require(`
		type postgrey_port_t;
	')

	dontaudit $1 postgrey_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the postgrey port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_postgrey_port',`
	gen_require(`
		type postgrey_port_t;
	')

	allow $1 postgrey_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the postgrey port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_postgrey_port',`
	gen_require(`
		type postgrey_port_t;
	')

	dontaudit $1 postgrey_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the postgrey port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_postgrey_port',`
	corenet_udp_send_postgrey_port($1)
	corenet_udp_receive_postgrey_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the postgrey port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_postgrey_port',`
	corenet_dontaudit_udp_send_postgrey_port($1)
	corenet_dontaudit_udp_receive_postgrey_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the postgrey port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_postgrey_port',`
	gen_require(`
		type postgrey_port_t;
	')

	allow $1 postgrey_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the postgrey port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_postgrey_port',`
	gen_require(`
		type postgrey_port_t;
	')

	allow $1 postgrey_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the postgrey port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_postgrey_port',`
	gen_require(`
		type postgrey_port_t;
	')

	allow $1 postgrey_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send postgrey_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_postgrey_client_packets',`
	gen_require(`
		type postgrey_client_packet_t;
	')

	allow $1 postgrey_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send postgrey_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_postgrey_client_packets',`
	gen_require(`
		type postgrey_client_packet_t;
	')

	dontaudit $1 postgrey_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive postgrey_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_postgrey_client_packets',`
	gen_require(`
		type postgrey_client_packet_t;
	')

	allow $1 postgrey_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive postgrey_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_postgrey_client_packets',`
	gen_require(`
		type postgrey_client_packet_t;
	')

	dontaudit $1 postgrey_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive postgrey_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_postgrey_client_packets',`
	corenet_send_postgrey_client_packets($1)
	corenet_receive_postgrey_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive postgrey_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_postgrey_client_packets',`
	corenet_dontaudit_send_postgrey_client_packets($1)
	corenet_dontaudit_receive_postgrey_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to postgrey_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_postgrey_client_packets',`
	gen_require(`
		type postgrey_client_packet_t;
	')

	allow $1 postgrey_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send postgrey_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_postgrey_server_packets',`
	gen_require(`
		type postgrey_server_packet_t;
	')

	allow $1 postgrey_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send postgrey_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_postgrey_server_packets',`
	gen_require(`
		type postgrey_server_packet_t;
	')

	dontaudit $1 postgrey_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive postgrey_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_postgrey_server_packets',`
	gen_require(`
		type postgrey_server_packet_t;
	')

	allow $1 postgrey_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive postgrey_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_postgrey_server_packets',`
	gen_require(`
		type postgrey_server_packet_t;
	')

	dontaudit $1 postgrey_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive postgrey_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_postgrey_server_packets',`
	corenet_send_postgrey_server_packets($1)
	corenet_receive_postgrey_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive postgrey_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_postgrey_server_packets',`
	corenet_dontaudit_send_postgrey_server_packets($1)
	corenet_dontaudit_receive_postgrey_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to postgrey_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_postgrey_server_packets',`
	gen_require(`
		type postgrey_server_packet_t;
	')

	allow $1 postgrey_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the printer port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_printer_port',`
	gen_require(`
		type printer_port_t;
	')

	allow $1 printer_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the printer port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_printer_port',`
	gen_require(`
		type printer_port_t;
	')

	allow $1 printer_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the printer port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_printer_port',`
	gen_require(`
		type printer_port_t;
	')

	dontaudit $1 printer_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the printer port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_printer_port',`
	gen_require(`
		type printer_port_t;
	')

	allow $1 printer_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the printer port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_printer_port',`
	gen_require(`
		type printer_port_t;
	')

	dontaudit $1 printer_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the printer port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_printer_port',`
	corenet_udp_send_printer_port($1)
	corenet_udp_receive_printer_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the printer port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_printer_port',`
	corenet_dontaudit_udp_send_printer_port($1)
	corenet_dontaudit_udp_receive_printer_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the printer port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_printer_port',`
	gen_require(`
		type printer_port_t;
	')

	allow $1 printer_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the printer port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_printer_port',`
	gen_require(`
		type printer_port_t;
	')

	allow $1 printer_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the printer port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_printer_port',`
	gen_require(`
		type printer_port_t;
	')

	allow $1 printer_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send printer_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_printer_client_packets',`
	gen_require(`
		type printer_client_packet_t;
	')

	allow $1 printer_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send printer_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_printer_client_packets',`
	gen_require(`
		type printer_client_packet_t;
	')

	dontaudit $1 printer_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive printer_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_printer_client_packets',`
	gen_require(`
		type printer_client_packet_t;
	')

	allow $1 printer_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive printer_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_printer_client_packets',`
	gen_require(`
		type printer_client_packet_t;
	')

	dontaudit $1 printer_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive printer_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_printer_client_packets',`
	corenet_send_printer_client_packets($1)
	corenet_receive_printer_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive printer_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_printer_client_packets',`
	corenet_dontaudit_send_printer_client_packets($1)
	corenet_dontaudit_receive_printer_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to printer_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_printer_client_packets',`
	gen_require(`
		type printer_client_packet_t;
	')

	allow $1 printer_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send printer_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_printer_server_packets',`
	gen_require(`
		type printer_server_packet_t;
	')

	allow $1 printer_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send printer_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_printer_server_packets',`
	gen_require(`
		type printer_server_packet_t;
	')

	dontaudit $1 printer_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive printer_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_printer_server_packets',`
	gen_require(`
		type printer_server_packet_t;
	')

	allow $1 printer_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive printer_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_printer_server_packets',`
	gen_require(`
		type printer_server_packet_t;
	')

	dontaudit $1 printer_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive printer_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_printer_server_packets',`
	corenet_send_printer_server_packets($1)
	corenet_receive_printer_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive printer_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_printer_server_packets',`
	corenet_dontaudit_send_printer_server_packets($1)
	corenet_dontaudit_receive_printer_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to printer_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_printer_server_packets',`
	gen_require(`
		type printer_server_packet_t;
	')

	allow $1 printer_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the ptal port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_ptal_port',`
	gen_require(`
		type ptal_port_t;
	')

	allow $1 ptal_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the ptal port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_ptal_port',`
	gen_require(`
		type ptal_port_t;
	')

	allow $1 ptal_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the ptal port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_ptal_port',`
	gen_require(`
		type ptal_port_t;
	')

	dontaudit $1 ptal_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the ptal port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_ptal_port',`
	gen_require(`
		type ptal_port_t;
	')

	allow $1 ptal_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the ptal port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_ptal_port',`
	gen_require(`
		type ptal_port_t;
	')

	dontaudit $1 ptal_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the ptal port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_ptal_port',`
	corenet_udp_send_ptal_port($1)
	corenet_udp_receive_ptal_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the ptal port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_ptal_port',`
	corenet_dontaudit_udp_send_ptal_port($1)
	corenet_dontaudit_udp_receive_ptal_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the ptal port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_ptal_port',`
	gen_require(`
		type ptal_port_t;
	')

	allow $1 ptal_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the ptal port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_ptal_port',`
	gen_require(`
		type ptal_port_t;
	')

	allow $1 ptal_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the ptal port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_ptal_port',`
	gen_require(`
		type ptal_port_t;
	')

	allow $1 ptal_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send ptal_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ptal_client_packets',`
	gen_require(`
		type ptal_client_packet_t;
	')

	allow $1 ptal_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ptal_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ptal_client_packets',`
	gen_require(`
		type ptal_client_packet_t;
	')

	dontaudit $1 ptal_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive ptal_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ptal_client_packets',`
	gen_require(`
		type ptal_client_packet_t;
	')

	allow $1 ptal_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ptal_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ptal_client_packets',`
	gen_require(`
		type ptal_client_packet_t;
	')

	dontaudit $1 ptal_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ptal_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ptal_client_packets',`
	corenet_send_ptal_client_packets($1)
	corenet_receive_ptal_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ptal_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ptal_client_packets',`
	corenet_dontaudit_send_ptal_client_packets($1)
	corenet_dontaudit_receive_ptal_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to ptal_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ptal_client_packets',`
	gen_require(`
		type ptal_client_packet_t;
	')

	allow $1 ptal_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send ptal_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ptal_server_packets',`
	gen_require(`
		type ptal_server_packet_t;
	')

	allow $1 ptal_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ptal_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ptal_server_packets',`
	gen_require(`
		type ptal_server_packet_t;
	')

	dontaudit $1 ptal_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive ptal_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ptal_server_packets',`
	gen_require(`
		type ptal_server_packet_t;
	')

	allow $1 ptal_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ptal_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ptal_server_packets',`
	gen_require(`
		type ptal_server_packet_t;
	')

	dontaudit $1 ptal_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ptal_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ptal_server_packets',`
	corenet_send_ptal_server_packets($1)
	corenet_receive_ptal_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ptal_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ptal_server_packets',`
	corenet_dontaudit_send_ptal_server_packets($1)
	corenet_dontaudit_receive_ptal_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to ptal_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ptal_server_packets',`
	gen_require(`
		type ptal_server_packet_t;
	')

	allow $1 ptal_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the pxe port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_pxe_port',`
	gen_require(`
		type pxe_port_t;
	')

	allow $1 pxe_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the pxe port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_pxe_port',`
	gen_require(`
		type pxe_port_t;
	')

	allow $1 pxe_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the pxe port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_pxe_port',`
	gen_require(`
		type pxe_port_t;
	')

	dontaudit $1 pxe_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the pxe port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_pxe_port',`
	gen_require(`
		type pxe_port_t;
	')

	allow $1 pxe_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the pxe port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_pxe_port',`
	gen_require(`
		type pxe_port_t;
	')

	dontaudit $1 pxe_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the pxe port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_pxe_port',`
	corenet_udp_send_pxe_port($1)
	corenet_udp_receive_pxe_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the pxe port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_pxe_port',`
	corenet_dontaudit_udp_send_pxe_port($1)
	corenet_dontaudit_udp_receive_pxe_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the pxe port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_pxe_port',`
	gen_require(`
		type pxe_port_t;
	')

	allow $1 pxe_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the pxe port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_pxe_port',`
	gen_require(`
		type pxe_port_t;
	')

	allow $1 pxe_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the pxe port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_pxe_port',`
	gen_require(`
		type pxe_port_t;
	')

	allow $1 pxe_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send pxe_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_pxe_client_packets',`
	gen_require(`
		type pxe_client_packet_t;
	')

	allow $1 pxe_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send pxe_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_pxe_client_packets',`
	gen_require(`
		type pxe_client_packet_t;
	')

	dontaudit $1 pxe_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive pxe_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_pxe_client_packets',`
	gen_require(`
		type pxe_client_packet_t;
	')

	allow $1 pxe_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive pxe_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_pxe_client_packets',`
	gen_require(`
		type pxe_client_packet_t;
	')

	dontaudit $1 pxe_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive pxe_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_pxe_client_packets',`
	corenet_send_pxe_client_packets($1)
	corenet_receive_pxe_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive pxe_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_pxe_client_packets',`
	corenet_dontaudit_send_pxe_client_packets($1)
	corenet_dontaudit_receive_pxe_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to pxe_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_pxe_client_packets',`
	gen_require(`
		type pxe_client_packet_t;
	')

	allow $1 pxe_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send pxe_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_pxe_server_packets',`
	gen_require(`
		type pxe_server_packet_t;
	')

	allow $1 pxe_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send pxe_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_pxe_server_packets',`
	gen_require(`
		type pxe_server_packet_t;
	')

	dontaudit $1 pxe_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive pxe_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_pxe_server_packets',`
	gen_require(`
		type pxe_server_packet_t;
	')

	allow $1 pxe_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive pxe_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_pxe_server_packets',`
	gen_require(`
		type pxe_server_packet_t;
	')

	dontaudit $1 pxe_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive pxe_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_pxe_server_packets',`
	corenet_send_pxe_server_packets($1)
	corenet_receive_pxe_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive pxe_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_pxe_server_packets',`
	corenet_dontaudit_send_pxe_server_packets($1)
	corenet_dontaudit_receive_pxe_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to pxe_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_pxe_server_packets',`
	gen_require(`
		type pxe_server_packet_t;
	')

	allow $1 pxe_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the pyzor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_pyzor_port',`
	gen_require(`
		type pyzor_port_t;
	')

	allow $1 pyzor_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the pyzor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_pyzor_port',`
	gen_require(`
		type pyzor_port_t;
	')

	allow $1 pyzor_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the pyzor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_pyzor_port',`
	gen_require(`
		type pyzor_port_t;
	')

	dontaudit $1 pyzor_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the pyzor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_pyzor_port',`
	gen_require(`
		type pyzor_port_t;
	')

	allow $1 pyzor_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the pyzor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_pyzor_port',`
	gen_require(`
		type pyzor_port_t;
	')

	dontaudit $1 pyzor_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the pyzor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_pyzor_port',`
	corenet_udp_send_pyzor_port($1)
	corenet_udp_receive_pyzor_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the pyzor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_pyzor_port',`
	corenet_dontaudit_udp_send_pyzor_port($1)
	corenet_dontaudit_udp_receive_pyzor_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the pyzor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_pyzor_port',`
	gen_require(`
		type pyzor_port_t;
	')

	allow $1 pyzor_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the pyzor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_pyzor_port',`
	gen_require(`
		type pyzor_port_t;
	')

	allow $1 pyzor_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the pyzor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_pyzor_port',`
	gen_require(`
		type pyzor_port_t;
	')

	allow $1 pyzor_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send pyzor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_pyzor_client_packets',`
	gen_require(`
		type pyzor_client_packet_t;
	')

	allow $1 pyzor_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send pyzor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_pyzor_client_packets',`
	gen_require(`
		type pyzor_client_packet_t;
	')

	dontaudit $1 pyzor_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive pyzor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_pyzor_client_packets',`
	gen_require(`
		type pyzor_client_packet_t;
	')

	allow $1 pyzor_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive pyzor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_pyzor_client_packets',`
	gen_require(`
		type pyzor_client_packet_t;
	')

	dontaudit $1 pyzor_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive pyzor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_pyzor_client_packets',`
	corenet_send_pyzor_client_packets($1)
	corenet_receive_pyzor_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive pyzor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_pyzor_client_packets',`
	corenet_dontaudit_send_pyzor_client_packets($1)
	corenet_dontaudit_receive_pyzor_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to pyzor_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_pyzor_client_packets',`
	gen_require(`
		type pyzor_client_packet_t;
	')

	allow $1 pyzor_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send pyzor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_pyzor_server_packets',`
	gen_require(`
		type pyzor_server_packet_t;
	')

	allow $1 pyzor_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send pyzor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_pyzor_server_packets',`
	gen_require(`
		type pyzor_server_packet_t;
	')

	dontaudit $1 pyzor_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive pyzor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_pyzor_server_packets',`
	gen_require(`
		type pyzor_server_packet_t;
	')

	allow $1 pyzor_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive pyzor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_pyzor_server_packets',`
	gen_require(`
		type pyzor_server_packet_t;
	')

	dontaudit $1 pyzor_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive pyzor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_pyzor_server_packets',`
	corenet_send_pyzor_server_packets($1)
	corenet_receive_pyzor_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive pyzor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_pyzor_server_packets',`
	corenet_dontaudit_send_pyzor_server_packets($1)
	corenet_dontaudit_receive_pyzor_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to pyzor_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_pyzor_server_packets',`
	gen_require(`
		type pyzor_server_packet_t;
	')

	allow $1 pyzor_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the radacct port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_radacct_port',`
	gen_require(`
		type radacct_port_t;
	')

	allow $1 radacct_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the radacct port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_radacct_port',`
	gen_require(`
		type radacct_port_t;
	')

	allow $1 radacct_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the radacct port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_radacct_port',`
	gen_require(`
		type radacct_port_t;
	')

	dontaudit $1 radacct_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the radacct port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_radacct_port',`
	gen_require(`
		type radacct_port_t;
	')

	allow $1 radacct_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the radacct port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_radacct_port',`
	gen_require(`
		type radacct_port_t;
	')

	dontaudit $1 radacct_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the radacct port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_radacct_port',`
	corenet_udp_send_radacct_port($1)
	corenet_udp_receive_radacct_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the radacct port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_radacct_port',`
	corenet_dontaudit_udp_send_radacct_port($1)
	corenet_dontaudit_udp_receive_radacct_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the radacct port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_radacct_port',`
	gen_require(`
		type radacct_port_t;
	')

	allow $1 radacct_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the radacct port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_radacct_port',`
	gen_require(`
		type radacct_port_t;
	')

	allow $1 radacct_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the radacct port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_radacct_port',`
	gen_require(`
		type radacct_port_t;
	')

	allow $1 radacct_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send radacct_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_radacct_client_packets',`
	gen_require(`
		type radacct_client_packet_t;
	')

	allow $1 radacct_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send radacct_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_radacct_client_packets',`
	gen_require(`
		type radacct_client_packet_t;
	')

	dontaudit $1 radacct_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive radacct_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_radacct_client_packets',`
	gen_require(`
		type radacct_client_packet_t;
	')

	allow $1 radacct_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive radacct_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_radacct_client_packets',`
	gen_require(`
		type radacct_client_packet_t;
	')

	dontaudit $1 radacct_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive radacct_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_radacct_client_packets',`
	corenet_send_radacct_client_packets($1)
	corenet_receive_radacct_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive radacct_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_radacct_client_packets',`
	corenet_dontaudit_send_radacct_client_packets($1)
	corenet_dontaudit_receive_radacct_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to radacct_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_radacct_client_packets',`
	gen_require(`
		type radacct_client_packet_t;
	')

	allow $1 radacct_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send radacct_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_radacct_server_packets',`
	gen_require(`
		type radacct_server_packet_t;
	')

	allow $1 radacct_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send radacct_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_radacct_server_packets',`
	gen_require(`
		type radacct_server_packet_t;
	')

	dontaudit $1 radacct_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive radacct_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_radacct_server_packets',`
	gen_require(`
		type radacct_server_packet_t;
	')

	allow $1 radacct_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive radacct_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_radacct_server_packets',`
	gen_require(`
		type radacct_server_packet_t;
	')

	dontaudit $1 radacct_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive radacct_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_radacct_server_packets',`
	corenet_send_radacct_server_packets($1)
	corenet_receive_radacct_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive radacct_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_radacct_server_packets',`
	corenet_dontaudit_send_radacct_server_packets($1)
	corenet_dontaudit_receive_radacct_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to radacct_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_radacct_server_packets',`
	gen_require(`
		type radacct_server_packet_t;
	')

	allow $1 radacct_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the radius port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_radius_port',`
	gen_require(`
		type radius_port_t;
	')

	allow $1 radius_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the radius port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_radius_port',`
	gen_require(`
		type radius_port_t;
	')

	allow $1 radius_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the radius port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_radius_port',`
	gen_require(`
		type radius_port_t;
	')

	dontaudit $1 radius_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the radius port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_radius_port',`
	gen_require(`
		type radius_port_t;
	')

	allow $1 radius_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the radius port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_radius_port',`
	gen_require(`
		type radius_port_t;
	')

	dontaudit $1 radius_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the radius port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_radius_port',`
	corenet_udp_send_radius_port($1)
	corenet_udp_receive_radius_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the radius port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_radius_port',`
	corenet_dontaudit_udp_send_radius_port($1)
	corenet_dontaudit_udp_receive_radius_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the radius port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_radius_port',`
	gen_require(`
		type radius_port_t;
	')

	allow $1 radius_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the radius port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_radius_port',`
	gen_require(`
		type radius_port_t;
	')

	allow $1 radius_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the radius port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_radius_port',`
	gen_require(`
		type radius_port_t;
	')

	allow $1 radius_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send radius_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_radius_client_packets',`
	gen_require(`
		type radius_client_packet_t;
	')

	allow $1 radius_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send radius_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_radius_client_packets',`
	gen_require(`
		type radius_client_packet_t;
	')

	dontaudit $1 radius_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive radius_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_radius_client_packets',`
	gen_require(`
		type radius_client_packet_t;
	')

	allow $1 radius_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive radius_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_radius_client_packets',`
	gen_require(`
		type radius_client_packet_t;
	')

	dontaudit $1 radius_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive radius_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_radius_client_packets',`
	corenet_send_radius_client_packets($1)
	corenet_receive_radius_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive radius_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_radius_client_packets',`
	corenet_dontaudit_send_radius_client_packets($1)
	corenet_dontaudit_receive_radius_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to radius_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_radius_client_packets',`
	gen_require(`
		type radius_client_packet_t;
	')

	allow $1 radius_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send radius_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_radius_server_packets',`
	gen_require(`
		type radius_server_packet_t;
	')

	allow $1 radius_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send radius_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_radius_server_packets',`
	gen_require(`
		type radius_server_packet_t;
	')

	dontaudit $1 radius_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive radius_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_radius_server_packets',`
	gen_require(`
		type radius_server_packet_t;
	')

	allow $1 radius_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive radius_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_radius_server_packets',`
	gen_require(`
		type radius_server_packet_t;
	')

	dontaudit $1 radius_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive radius_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_radius_server_packets',`
	corenet_send_radius_server_packets($1)
	corenet_receive_radius_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive radius_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_radius_server_packets',`
	corenet_dontaudit_send_radius_server_packets($1)
	corenet_dontaudit_receive_radius_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to radius_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_radius_server_packets',`
	gen_require(`
		type radius_server_packet_t;
	')

	allow $1 radius_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the razor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_razor_port',`
	gen_require(`
		type razor_port_t;
	')

	allow $1 razor_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the razor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_razor_port',`
	gen_require(`
		type razor_port_t;
	')

	allow $1 razor_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the razor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_razor_port',`
	gen_require(`
		type razor_port_t;
	')

	dontaudit $1 razor_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the razor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_razor_port',`
	gen_require(`
		type razor_port_t;
	')

	allow $1 razor_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the razor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_razor_port',`
	gen_require(`
		type razor_port_t;
	')

	dontaudit $1 razor_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the razor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_razor_port',`
	corenet_udp_send_razor_port($1)
	corenet_udp_receive_razor_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the razor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_razor_port',`
	corenet_dontaudit_udp_send_razor_port($1)
	corenet_dontaudit_udp_receive_razor_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the razor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_razor_port',`
	gen_require(`
		type razor_port_t;
	')

	allow $1 razor_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the razor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_razor_port',`
	gen_require(`
		type razor_port_t;
	')

	allow $1 razor_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the razor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_razor_port',`
	gen_require(`
		type razor_port_t;
	')

	allow $1 razor_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send razor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_razor_client_packets',`
	gen_require(`
		type razor_client_packet_t;
	')

	allow $1 razor_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send razor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_razor_client_packets',`
	gen_require(`
		type razor_client_packet_t;
	')

	dontaudit $1 razor_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive razor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_razor_client_packets',`
	gen_require(`
		type razor_client_packet_t;
	')

	allow $1 razor_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive razor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_razor_client_packets',`
	gen_require(`
		type razor_client_packet_t;
	')

	dontaudit $1 razor_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive razor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_razor_client_packets',`
	corenet_send_razor_client_packets($1)
	corenet_receive_razor_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive razor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_razor_client_packets',`
	corenet_dontaudit_send_razor_client_packets($1)
	corenet_dontaudit_receive_razor_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to razor_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_razor_client_packets',`
	gen_require(`
		type razor_client_packet_t;
	')

	allow $1 razor_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send razor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_razor_server_packets',`
	gen_require(`
		type razor_server_packet_t;
	')

	allow $1 razor_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send razor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_razor_server_packets',`
	gen_require(`
		type razor_server_packet_t;
	')

	dontaudit $1 razor_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive razor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_razor_server_packets',`
	gen_require(`
		type razor_server_packet_t;
	')

	allow $1 razor_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive razor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_razor_server_packets',`
	gen_require(`
		type razor_server_packet_t;
	')

	dontaudit $1 razor_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive razor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_razor_server_packets',`
	corenet_send_razor_server_packets($1)
	corenet_receive_razor_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive razor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_razor_server_packets',`
	corenet_dontaudit_send_razor_server_packets($1)
	corenet_dontaudit_receive_razor_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to razor_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_razor_server_packets',`
	gen_require(`
		type razor_server_packet_t;
	')

	allow $1 razor_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the rlogind port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_rlogind_port',`
	gen_require(`
		type rlogind_port_t;
	')

	allow $1 rlogind_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the rlogind port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_rlogind_port',`
	gen_require(`
		type rlogind_port_t;
	')

	allow $1 rlogind_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the rlogind port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_rlogind_port',`
	gen_require(`
		type rlogind_port_t;
	')

	dontaudit $1 rlogind_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the rlogind port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_rlogind_port',`
	gen_require(`
		type rlogind_port_t;
	')

	allow $1 rlogind_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the rlogind port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_rlogind_port',`
	gen_require(`
		type rlogind_port_t;
	')

	dontaudit $1 rlogind_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the rlogind port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_rlogind_port',`
	corenet_udp_send_rlogind_port($1)
	corenet_udp_receive_rlogind_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the rlogind port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_rlogind_port',`
	corenet_dontaudit_udp_send_rlogind_port($1)
	corenet_dontaudit_udp_receive_rlogind_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the rlogind port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_rlogind_port',`
	gen_require(`
		type rlogind_port_t;
	')

	allow $1 rlogind_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the rlogind port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_rlogind_port',`
	gen_require(`
		type rlogind_port_t;
	')

	allow $1 rlogind_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the rlogind port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_rlogind_port',`
	gen_require(`
		type rlogind_port_t;
	')

	allow $1 rlogind_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send rlogind_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_rlogind_client_packets',`
	gen_require(`
		type rlogind_client_packet_t;
	')

	allow $1 rlogind_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send rlogind_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_rlogind_client_packets',`
	gen_require(`
		type rlogind_client_packet_t;
	')

	dontaudit $1 rlogind_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive rlogind_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_rlogind_client_packets',`
	gen_require(`
		type rlogind_client_packet_t;
	')

	allow $1 rlogind_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive rlogind_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_rlogind_client_packets',`
	gen_require(`
		type rlogind_client_packet_t;
	')

	dontaudit $1 rlogind_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive rlogind_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_rlogind_client_packets',`
	corenet_send_rlogind_client_packets($1)
	corenet_receive_rlogind_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive rlogind_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_rlogind_client_packets',`
	corenet_dontaudit_send_rlogind_client_packets($1)
	corenet_dontaudit_receive_rlogind_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to rlogind_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_rlogind_client_packets',`
	gen_require(`
		type rlogind_client_packet_t;
	')

	allow $1 rlogind_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send rlogind_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_rlogind_server_packets',`
	gen_require(`
		type rlogind_server_packet_t;
	')

	allow $1 rlogind_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send rlogind_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_rlogind_server_packets',`
	gen_require(`
		type rlogind_server_packet_t;
	')

	dontaudit $1 rlogind_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive rlogind_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_rlogind_server_packets',`
	gen_require(`
		type rlogind_server_packet_t;
	')

	allow $1 rlogind_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive rlogind_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_rlogind_server_packets',`
	gen_require(`
		type rlogind_server_packet_t;
	')

	dontaudit $1 rlogind_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive rlogind_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_rlogind_server_packets',`
	corenet_send_rlogind_server_packets($1)
	corenet_receive_rlogind_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive rlogind_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_rlogind_server_packets',`
	corenet_dontaudit_send_rlogind_server_packets($1)
	corenet_dontaudit_receive_rlogind_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to rlogind_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_rlogind_server_packets',`
	gen_require(`
		type rlogind_server_packet_t;
	')

	allow $1 rlogind_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the rndc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_rndc_port',`
	gen_require(`
		type rndc_port_t;
	')

	allow $1 rndc_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the rndc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_rndc_port',`
	gen_require(`
		type rndc_port_t;
	')

	allow $1 rndc_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the rndc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_rndc_port',`
	gen_require(`
		type rndc_port_t;
	')

	dontaudit $1 rndc_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the rndc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_rndc_port',`
	gen_require(`
		type rndc_port_t;
	')

	allow $1 rndc_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the rndc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_rndc_port',`
	gen_require(`
		type rndc_port_t;
	')

	dontaudit $1 rndc_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the rndc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_rndc_port',`
	corenet_udp_send_rndc_port($1)
	corenet_udp_receive_rndc_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the rndc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_rndc_port',`
	corenet_dontaudit_udp_send_rndc_port($1)
	corenet_dontaudit_udp_receive_rndc_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the rndc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_rndc_port',`
	gen_require(`
		type rndc_port_t;
	')

	allow $1 rndc_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the rndc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_rndc_port',`
	gen_require(`
		type rndc_port_t;
	')

	allow $1 rndc_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the rndc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_rndc_port',`
	gen_require(`
		type rndc_port_t;
	')

	allow $1 rndc_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send rndc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_rndc_client_packets',`
	gen_require(`
		type rndc_client_packet_t;
	')

	allow $1 rndc_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send rndc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_rndc_client_packets',`
	gen_require(`
		type rndc_client_packet_t;
	')

	dontaudit $1 rndc_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive rndc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_rndc_client_packets',`
	gen_require(`
		type rndc_client_packet_t;
	')

	allow $1 rndc_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive rndc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_rndc_client_packets',`
	gen_require(`
		type rndc_client_packet_t;
	')

	dontaudit $1 rndc_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive rndc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_rndc_client_packets',`
	corenet_send_rndc_client_packets($1)
	corenet_receive_rndc_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive rndc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_rndc_client_packets',`
	corenet_dontaudit_send_rndc_client_packets($1)
	corenet_dontaudit_receive_rndc_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to rndc_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_rndc_client_packets',`
	gen_require(`
		type rndc_client_packet_t;
	')

	allow $1 rndc_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send rndc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_rndc_server_packets',`
	gen_require(`
		type rndc_server_packet_t;
	')

	allow $1 rndc_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send rndc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_rndc_server_packets',`
	gen_require(`
		type rndc_server_packet_t;
	')

	dontaudit $1 rndc_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive rndc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_rndc_server_packets',`
	gen_require(`
		type rndc_server_packet_t;
	')

	allow $1 rndc_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive rndc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_rndc_server_packets',`
	gen_require(`
		type rndc_server_packet_t;
	')

	dontaudit $1 rndc_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive rndc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_rndc_server_packets',`
	corenet_send_rndc_server_packets($1)
	corenet_receive_rndc_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive rndc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_rndc_server_packets',`
	corenet_dontaudit_send_rndc_server_packets($1)
	corenet_dontaudit_receive_rndc_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to rndc_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_rndc_server_packets',`
	gen_require(`
		type rndc_server_packet_t;
	')

	allow $1 rndc_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the router port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_router_port',`
	gen_require(`
		type router_port_t;
	')

	allow $1 router_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the router port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_router_port',`
	gen_require(`
		type router_port_t;
	')

	allow $1 router_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the router port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_router_port',`
	gen_require(`
		type router_port_t;
	')

	dontaudit $1 router_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the router port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_router_port',`
	gen_require(`
		type router_port_t;
	')

	allow $1 router_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the router port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_router_port',`
	gen_require(`
		type router_port_t;
	')

	dontaudit $1 router_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the router port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_router_port',`
	corenet_udp_send_router_port($1)
	corenet_udp_receive_router_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the router port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_router_port',`
	corenet_dontaudit_udp_send_router_port($1)
	corenet_dontaudit_udp_receive_router_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the router port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_router_port',`
	gen_require(`
		type router_port_t;
	')

	allow $1 router_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the router port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_router_port',`
	gen_require(`
		type router_port_t;
	')

	allow $1 router_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the router port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_router_port',`
	gen_require(`
		type router_port_t;
	')

	allow $1 router_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send router_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_router_client_packets',`
	gen_require(`
		type router_client_packet_t;
	')

	allow $1 router_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send router_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_router_client_packets',`
	gen_require(`
		type router_client_packet_t;
	')

	dontaudit $1 router_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive router_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_router_client_packets',`
	gen_require(`
		type router_client_packet_t;
	')

	allow $1 router_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive router_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_router_client_packets',`
	gen_require(`
		type router_client_packet_t;
	')

	dontaudit $1 router_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive router_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_router_client_packets',`
	corenet_send_router_client_packets($1)
	corenet_receive_router_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive router_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_router_client_packets',`
	corenet_dontaudit_send_router_client_packets($1)
	corenet_dontaudit_receive_router_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to router_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_router_client_packets',`
	gen_require(`
		type router_client_packet_t;
	')

	allow $1 router_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send router_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_router_server_packets',`
	gen_require(`
		type router_server_packet_t;
	')

	allow $1 router_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send router_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_router_server_packets',`
	gen_require(`
		type router_server_packet_t;
	')

	dontaudit $1 router_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive router_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_router_server_packets',`
	gen_require(`
		type router_server_packet_t;
	')

	allow $1 router_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive router_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_router_server_packets',`
	gen_require(`
		type router_server_packet_t;
	')

	dontaudit $1 router_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive router_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_router_server_packets',`
	corenet_send_router_server_packets($1)
	corenet_receive_router_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive router_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_router_server_packets',`
	corenet_dontaudit_send_router_server_packets($1)
	corenet_dontaudit_receive_router_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to router_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_router_server_packets',`
	gen_require(`
		type router_server_packet_t;
	')

	allow $1 router_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the rsh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_rsh_port',`
	gen_require(`
		type rsh_port_t;
	')

	allow $1 rsh_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the rsh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_rsh_port',`
	gen_require(`
		type rsh_port_t;
	')

	allow $1 rsh_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the rsh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_rsh_port',`
	gen_require(`
		type rsh_port_t;
	')

	dontaudit $1 rsh_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the rsh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_rsh_port',`
	gen_require(`
		type rsh_port_t;
	')

	allow $1 rsh_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the rsh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_rsh_port',`
	gen_require(`
		type rsh_port_t;
	')

	dontaudit $1 rsh_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the rsh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_rsh_port',`
	corenet_udp_send_rsh_port($1)
	corenet_udp_receive_rsh_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the rsh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_rsh_port',`
	corenet_dontaudit_udp_send_rsh_port($1)
	corenet_dontaudit_udp_receive_rsh_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the rsh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_rsh_port',`
	gen_require(`
		type rsh_port_t;
	')

	allow $1 rsh_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the rsh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_rsh_port',`
	gen_require(`
		type rsh_port_t;
	')

	allow $1 rsh_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the rsh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_rsh_port',`
	gen_require(`
		type rsh_port_t;
	')

	allow $1 rsh_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send rsh_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_rsh_client_packets',`
	gen_require(`
		type rsh_client_packet_t;
	')

	allow $1 rsh_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send rsh_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_rsh_client_packets',`
	gen_require(`
		type rsh_client_packet_t;
	')

	dontaudit $1 rsh_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive rsh_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_rsh_client_packets',`
	gen_require(`
		type rsh_client_packet_t;
	')

	allow $1 rsh_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive rsh_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_rsh_client_packets',`
	gen_require(`
		type rsh_client_packet_t;
	')

	dontaudit $1 rsh_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive rsh_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_rsh_client_packets',`
	corenet_send_rsh_client_packets($1)
	corenet_receive_rsh_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive rsh_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_rsh_client_packets',`
	corenet_dontaudit_send_rsh_client_packets($1)
	corenet_dontaudit_receive_rsh_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to rsh_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_rsh_client_packets',`
	gen_require(`
		type rsh_client_packet_t;
	')

	allow $1 rsh_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send rsh_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_rsh_server_packets',`
	gen_require(`
		type rsh_server_packet_t;
	')

	allow $1 rsh_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send rsh_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_rsh_server_packets',`
	gen_require(`
		type rsh_server_packet_t;
	')

	dontaudit $1 rsh_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive rsh_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_rsh_server_packets',`
	gen_require(`
		type rsh_server_packet_t;
	')

	allow $1 rsh_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive rsh_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_rsh_server_packets',`
	gen_require(`
		type rsh_server_packet_t;
	')

	dontaudit $1 rsh_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive rsh_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_rsh_server_packets',`
	corenet_send_rsh_server_packets($1)
	corenet_receive_rsh_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive rsh_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_rsh_server_packets',`
	corenet_dontaudit_send_rsh_server_packets($1)
	corenet_dontaudit_receive_rsh_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to rsh_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_rsh_server_packets',`
	gen_require(`
		type rsh_server_packet_t;
	')

	allow $1 rsh_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the rsync port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_rsync_port',`
	gen_require(`
		type rsync_port_t;
	')

	allow $1 rsync_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the rsync port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_rsync_port',`
	gen_require(`
		type rsync_port_t;
	')

	allow $1 rsync_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the rsync port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_rsync_port',`
	gen_require(`
		type rsync_port_t;
	')

	dontaudit $1 rsync_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the rsync port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_rsync_port',`
	gen_require(`
		type rsync_port_t;
	')

	allow $1 rsync_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the rsync port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_rsync_port',`
	gen_require(`
		type rsync_port_t;
	')

	dontaudit $1 rsync_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the rsync port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_rsync_port',`
	corenet_udp_send_rsync_port($1)
	corenet_udp_receive_rsync_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the rsync port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_rsync_port',`
	corenet_dontaudit_udp_send_rsync_port($1)
	corenet_dontaudit_udp_receive_rsync_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the rsync port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_rsync_port',`
	gen_require(`
		type rsync_port_t;
	')

	allow $1 rsync_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the rsync port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_rsync_port',`
	gen_require(`
		type rsync_port_t;
	')

	allow $1 rsync_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the rsync port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_rsync_port',`
	gen_require(`
		type rsync_port_t;
	')

	allow $1 rsync_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send rsync_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_rsync_client_packets',`
	gen_require(`
		type rsync_client_packet_t;
	')

	allow $1 rsync_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send rsync_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_rsync_client_packets',`
	gen_require(`
		type rsync_client_packet_t;
	')

	dontaudit $1 rsync_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive rsync_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_rsync_client_packets',`
	gen_require(`
		type rsync_client_packet_t;
	')

	allow $1 rsync_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive rsync_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_rsync_client_packets',`
	gen_require(`
		type rsync_client_packet_t;
	')

	dontaudit $1 rsync_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive rsync_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_rsync_client_packets',`
	corenet_send_rsync_client_packets($1)
	corenet_receive_rsync_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive rsync_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_rsync_client_packets',`
	corenet_dontaudit_send_rsync_client_packets($1)
	corenet_dontaudit_receive_rsync_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to rsync_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_rsync_client_packets',`
	gen_require(`
		type rsync_client_packet_t;
	')

	allow $1 rsync_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send rsync_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_rsync_server_packets',`
	gen_require(`
		type rsync_server_packet_t;
	')

	allow $1 rsync_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send rsync_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_rsync_server_packets',`
	gen_require(`
		type rsync_server_packet_t;
	')

	dontaudit $1 rsync_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive rsync_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_rsync_server_packets',`
	gen_require(`
		type rsync_server_packet_t;
	')

	allow $1 rsync_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive rsync_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_rsync_server_packets',`
	gen_require(`
		type rsync_server_packet_t;
	')

	dontaudit $1 rsync_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive rsync_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_rsync_server_packets',`
	corenet_send_rsync_server_packets($1)
	corenet_receive_rsync_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive rsync_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_rsync_server_packets',`
	corenet_dontaudit_send_rsync_server_packets($1)
	corenet_dontaudit_receive_rsync_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to rsync_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_rsync_server_packets',`
	gen_require(`
		type rsync_server_packet_t;
	')

	allow $1 rsync_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the smbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_smbd_port',`
	gen_require(`
		type smbd_port_t;
	')

	allow $1 smbd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the smbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_smbd_port',`
	gen_require(`
		type smbd_port_t;
	')

	allow $1 smbd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the smbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_smbd_port',`
	gen_require(`
		type smbd_port_t;
	')

	dontaudit $1 smbd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the smbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_smbd_port',`
	gen_require(`
		type smbd_port_t;
	')

	allow $1 smbd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the smbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_smbd_port',`
	gen_require(`
		type smbd_port_t;
	')

	dontaudit $1 smbd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the smbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_smbd_port',`
	corenet_udp_send_smbd_port($1)
	corenet_udp_receive_smbd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the smbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_smbd_port',`
	corenet_dontaudit_udp_send_smbd_port($1)
	corenet_dontaudit_udp_receive_smbd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the smbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_smbd_port',`
	gen_require(`
		type smbd_port_t;
	')

	allow $1 smbd_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the smbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_smbd_port',`
	gen_require(`
		type smbd_port_t;
	')

	allow $1 smbd_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the smbd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_smbd_port',`
	gen_require(`
		type smbd_port_t;
	')

	allow $1 smbd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send smbd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_smbd_client_packets',`
	gen_require(`
		type smbd_client_packet_t;
	')

	allow $1 smbd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send smbd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_smbd_client_packets',`
	gen_require(`
		type smbd_client_packet_t;
	')

	dontaudit $1 smbd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive smbd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_smbd_client_packets',`
	gen_require(`
		type smbd_client_packet_t;
	')

	allow $1 smbd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive smbd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_smbd_client_packets',`
	gen_require(`
		type smbd_client_packet_t;
	')

	dontaudit $1 smbd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive smbd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_smbd_client_packets',`
	corenet_send_smbd_client_packets($1)
	corenet_receive_smbd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive smbd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_smbd_client_packets',`
	corenet_dontaudit_send_smbd_client_packets($1)
	corenet_dontaudit_receive_smbd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to smbd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_smbd_client_packets',`
	gen_require(`
		type smbd_client_packet_t;
	')

	allow $1 smbd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send smbd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_smbd_server_packets',`
	gen_require(`
		type smbd_server_packet_t;
	')

	allow $1 smbd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send smbd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_smbd_server_packets',`
	gen_require(`
		type smbd_server_packet_t;
	')

	dontaudit $1 smbd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive smbd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_smbd_server_packets',`
	gen_require(`
		type smbd_server_packet_t;
	')

	allow $1 smbd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive smbd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_smbd_server_packets',`
	gen_require(`
		type smbd_server_packet_t;
	')

	dontaudit $1 smbd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive smbd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_smbd_server_packets',`
	corenet_send_smbd_server_packets($1)
	corenet_receive_smbd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive smbd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_smbd_server_packets',`
	corenet_dontaudit_send_smbd_server_packets($1)
	corenet_dontaudit_receive_smbd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to smbd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_smbd_server_packets',`
	gen_require(`
		type smbd_server_packet_t;
	')

	allow $1 smbd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the smtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_smtp_port',`
	gen_require(`
		type smtp_port_t;
	')

	allow $1 smtp_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the smtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_smtp_port',`
	gen_require(`
		type smtp_port_t;
	')

	allow $1 smtp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the smtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_smtp_port',`
	gen_require(`
		type smtp_port_t;
	')

	dontaudit $1 smtp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the smtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_smtp_port',`
	gen_require(`
		type smtp_port_t;
	')

	allow $1 smtp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the smtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_smtp_port',`
	gen_require(`
		type smtp_port_t;
	')

	dontaudit $1 smtp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the smtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_smtp_port',`
	corenet_udp_send_smtp_port($1)
	corenet_udp_receive_smtp_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the smtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_smtp_port',`
	corenet_dontaudit_udp_send_smtp_port($1)
	corenet_dontaudit_udp_receive_smtp_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the smtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_smtp_port',`
	gen_require(`
		type smtp_port_t;
	')

	allow $1 smtp_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the smtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_smtp_port',`
	gen_require(`
		type smtp_port_t;
	')

	allow $1 smtp_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the smtp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_smtp_port',`
	gen_require(`
		type smtp_port_t;
	')

	allow $1 smtp_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send smtp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_smtp_client_packets',`
	gen_require(`
		type smtp_client_packet_t;
	')

	allow $1 smtp_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send smtp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_smtp_client_packets',`
	gen_require(`
		type smtp_client_packet_t;
	')

	dontaudit $1 smtp_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive smtp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_smtp_client_packets',`
	gen_require(`
		type smtp_client_packet_t;
	')

	allow $1 smtp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive smtp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_smtp_client_packets',`
	gen_require(`
		type smtp_client_packet_t;
	')

	dontaudit $1 smtp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive smtp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_smtp_client_packets',`
	corenet_send_smtp_client_packets($1)
	corenet_receive_smtp_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive smtp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_smtp_client_packets',`
	corenet_dontaudit_send_smtp_client_packets($1)
	corenet_dontaudit_receive_smtp_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to smtp_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_smtp_client_packets',`
	gen_require(`
		type smtp_client_packet_t;
	')

	allow $1 smtp_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send smtp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_smtp_server_packets',`
	gen_require(`
		type smtp_server_packet_t;
	')

	allow $1 smtp_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send smtp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_smtp_server_packets',`
	gen_require(`
		type smtp_server_packet_t;
	')

	dontaudit $1 smtp_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive smtp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_smtp_server_packets',`
	gen_require(`
		type smtp_server_packet_t;
	')

	allow $1 smtp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive smtp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_smtp_server_packets',`
	gen_require(`
		type smtp_server_packet_t;
	')

	dontaudit $1 smtp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive smtp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_smtp_server_packets',`
	corenet_send_smtp_server_packets($1)
	corenet_receive_smtp_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive smtp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_smtp_server_packets',`
	corenet_dontaudit_send_smtp_server_packets($1)
	corenet_dontaudit_receive_smtp_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to smtp_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_smtp_server_packets',`
	gen_require(`
		type smtp_server_packet_t;
	')

	allow $1 smtp_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the snmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_snmp_port',`
	gen_require(`
		type snmp_port_t;
	')

	allow $1 snmp_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the snmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_snmp_port',`
	gen_require(`
		type snmp_port_t;
	')

	allow $1 snmp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the snmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_snmp_port',`
	gen_require(`
		type snmp_port_t;
	')

	dontaudit $1 snmp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the snmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_snmp_port',`
	gen_require(`
		type snmp_port_t;
	')

	allow $1 snmp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the snmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_snmp_port',`
	gen_require(`
		type snmp_port_t;
	')

	dontaudit $1 snmp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the snmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_snmp_port',`
	corenet_udp_send_snmp_port($1)
	corenet_udp_receive_snmp_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the snmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_snmp_port',`
	corenet_dontaudit_udp_send_snmp_port($1)
	corenet_dontaudit_udp_receive_snmp_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the snmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_snmp_port',`
	gen_require(`
		type snmp_port_t;
	')

	allow $1 snmp_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the snmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_snmp_port',`
	gen_require(`
		type snmp_port_t;
	')

	allow $1 snmp_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the snmp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_snmp_port',`
	gen_require(`
		type snmp_port_t;
	')

	allow $1 snmp_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send snmp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_snmp_client_packets',`
	gen_require(`
		type snmp_client_packet_t;
	')

	allow $1 snmp_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send snmp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_snmp_client_packets',`
	gen_require(`
		type snmp_client_packet_t;
	')

	dontaudit $1 snmp_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive snmp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_snmp_client_packets',`
	gen_require(`
		type snmp_client_packet_t;
	')

	allow $1 snmp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive snmp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_snmp_client_packets',`
	gen_require(`
		type snmp_client_packet_t;
	')

	dontaudit $1 snmp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive snmp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_snmp_client_packets',`
	corenet_send_snmp_client_packets($1)
	corenet_receive_snmp_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive snmp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_snmp_client_packets',`
	corenet_dontaudit_send_snmp_client_packets($1)
	corenet_dontaudit_receive_snmp_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to snmp_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_snmp_client_packets',`
	gen_require(`
		type snmp_client_packet_t;
	')

	allow $1 snmp_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send snmp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_snmp_server_packets',`
	gen_require(`
		type snmp_server_packet_t;
	')

	allow $1 snmp_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send snmp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_snmp_server_packets',`
	gen_require(`
		type snmp_server_packet_t;
	')

	dontaudit $1 snmp_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive snmp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_snmp_server_packets',`
	gen_require(`
		type snmp_server_packet_t;
	')

	allow $1 snmp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive snmp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_snmp_server_packets',`
	gen_require(`
		type snmp_server_packet_t;
	')

	dontaudit $1 snmp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive snmp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_snmp_server_packets',`
	corenet_send_snmp_server_packets($1)
	corenet_receive_snmp_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive snmp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_snmp_server_packets',`
	corenet_dontaudit_send_snmp_server_packets($1)
	corenet_dontaudit_receive_snmp_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to snmp_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_snmp_server_packets',`
	gen_require(`
		type snmp_server_packet_t;
	')

	allow $1 snmp_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the spamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_spamd_port',`
	gen_require(`
		type spamd_port_t;
	')

	allow $1 spamd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the spamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_spamd_port',`
	gen_require(`
		type spamd_port_t;
	')

	allow $1 spamd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the spamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_spamd_port',`
	gen_require(`
		type spamd_port_t;
	')

	dontaudit $1 spamd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the spamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_spamd_port',`
	gen_require(`
		type spamd_port_t;
	')

	allow $1 spamd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the spamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_spamd_port',`
	gen_require(`
		type spamd_port_t;
	')

	dontaudit $1 spamd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the spamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_spamd_port',`
	corenet_udp_send_spamd_port($1)
	corenet_udp_receive_spamd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the spamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_spamd_port',`
	corenet_dontaudit_udp_send_spamd_port($1)
	corenet_dontaudit_udp_receive_spamd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the spamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_spamd_port',`
	gen_require(`
		type spamd_port_t;
	')

	allow $1 spamd_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the spamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_spamd_port',`
	gen_require(`
		type spamd_port_t;
	')

	allow $1 spamd_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the spamd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_spamd_port',`
	gen_require(`
		type spamd_port_t;
	')

	allow $1 spamd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send spamd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_spamd_client_packets',`
	gen_require(`
		type spamd_client_packet_t;
	')

	allow $1 spamd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send spamd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_spamd_client_packets',`
	gen_require(`
		type spamd_client_packet_t;
	')

	dontaudit $1 spamd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive spamd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_spamd_client_packets',`
	gen_require(`
		type spamd_client_packet_t;
	')

	allow $1 spamd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive spamd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_spamd_client_packets',`
	gen_require(`
		type spamd_client_packet_t;
	')

	dontaudit $1 spamd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive spamd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_spamd_client_packets',`
	corenet_send_spamd_client_packets($1)
	corenet_receive_spamd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive spamd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_spamd_client_packets',`
	corenet_dontaudit_send_spamd_client_packets($1)
	corenet_dontaudit_receive_spamd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to spamd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_spamd_client_packets',`
	gen_require(`
		type spamd_client_packet_t;
	')

	allow $1 spamd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send spamd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_spamd_server_packets',`
	gen_require(`
		type spamd_server_packet_t;
	')

	allow $1 spamd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send spamd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_spamd_server_packets',`
	gen_require(`
		type spamd_server_packet_t;
	')

	dontaudit $1 spamd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive spamd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_spamd_server_packets',`
	gen_require(`
		type spamd_server_packet_t;
	')

	allow $1 spamd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive spamd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_spamd_server_packets',`
	gen_require(`
		type spamd_server_packet_t;
	')

	dontaudit $1 spamd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive spamd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_spamd_server_packets',`
	corenet_send_spamd_server_packets($1)
	corenet_receive_spamd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive spamd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_spamd_server_packets',`
	corenet_dontaudit_send_spamd_server_packets($1)
	corenet_dontaudit_receive_spamd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to spamd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_spamd_server_packets',`
	gen_require(`
		type spamd_server_packet_t;
	')

	allow $1 spamd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the ssh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_ssh_port',`
	gen_require(`
		type ssh_port_t;
	')

	allow $1 ssh_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the ssh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_ssh_port',`
	gen_require(`
		type ssh_port_t;
	')

	allow $1 ssh_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the ssh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_ssh_port',`
	gen_require(`
		type ssh_port_t;
	')

	dontaudit $1 ssh_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the ssh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_ssh_port',`
	gen_require(`
		type ssh_port_t;
	')

	allow $1 ssh_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the ssh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_ssh_port',`
	gen_require(`
		type ssh_port_t;
	')

	dontaudit $1 ssh_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the ssh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_ssh_port',`
	corenet_udp_send_ssh_port($1)
	corenet_udp_receive_ssh_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the ssh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_ssh_port',`
	corenet_dontaudit_udp_send_ssh_port($1)
	corenet_dontaudit_udp_receive_ssh_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the ssh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_ssh_port',`
	gen_require(`
		type ssh_port_t;
	')

	allow $1 ssh_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the ssh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_ssh_port',`
	gen_require(`
		type ssh_port_t;
	')

	allow $1 ssh_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the ssh port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_ssh_port',`
	gen_require(`
		type ssh_port_t;
	')

	allow $1 ssh_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send ssh_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ssh_client_packets',`
	gen_require(`
		type ssh_client_packet_t;
	')

	allow $1 ssh_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ssh_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ssh_client_packets',`
	gen_require(`
		type ssh_client_packet_t;
	')

	dontaudit $1 ssh_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive ssh_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ssh_client_packets',`
	gen_require(`
		type ssh_client_packet_t;
	')

	allow $1 ssh_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ssh_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ssh_client_packets',`
	gen_require(`
		type ssh_client_packet_t;
	')

	dontaudit $1 ssh_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ssh_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ssh_client_packets',`
	corenet_send_ssh_client_packets($1)
	corenet_receive_ssh_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ssh_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ssh_client_packets',`
	corenet_dontaudit_send_ssh_client_packets($1)
	corenet_dontaudit_receive_ssh_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to ssh_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ssh_client_packets',`
	gen_require(`
		type ssh_client_packet_t;
	')

	allow $1 ssh_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send ssh_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_ssh_server_packets',`
	gen_require(`
		type ssh_server_packet_t;
	')

	allow $1 ssh_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send ssh_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_ssh_server_packets',`
	gen_require(`
		type ssh_server_packet_t;
	')

	dontaudit $1 ssh_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive ssh_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_ssh_server_packets',`
	gen_require(`
		type ssh_server_packet_t;
	')

	allow $1 ssh_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive ssh_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_ssh_server_packets',`
	gen_require(`
		type ssh_server_packet_t;
	')

	dontaudit $1 ssh_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive ssh_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_ssh_server_packets',`
	corenet_send_ssh_server_packets($1)
	corenet_receive_ssh_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive ssh_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_ssh_server_packets',`
	corenet_dontaudit_send_ssh_server_packets($1)
	corenet_dontaudit_receive_ssh_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to ssh_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_ssh_server_packets',`
	gen_require(`
		type ssh_server_packet_t;
	')

	allow $1 ssh_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the soundd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_soundd_port',`
	gen_require(`
		type soundd_port_t;
	')

	allow $1 soundd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the soundd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_soundd_port',`
	gen_require(`
		type soundd_port_t;
	')

	allow $1 soundd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the soundd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_soundd_port',`
	gen_require(`
		type soundd_port_t;
	')

	dontaudit $1 soundd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the soundd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_soundd_port',`
	gen_require(`
		type soundd_port_t;
	')

	allow $1 soundd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the soundd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_soundd_port',`
	gen_require(`
		type soundd_port_t;
	')

	dontaudit $1 soundd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the soundd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_soundd_port',`
	corenet_udp_send_soundd_port($1)
	corenet_udp_receive_soundd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the soundd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_soundd_port',`
	corenet_dontaudit_udp_send_soundd_port($1)
	corenet_dontaudit_udp_receive_soundd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the soundd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_soundd_port',`
	gen_require(`
		type soundd_port_t;
	')

	allow $1 soundd_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the soundd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_soundd_port',`
	gen_require(`
		type soundd_port_t;
	')

	allow $1 soundd_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the soundd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_soundd_port',`
	gen_require(`
		type soundd_port_t;
	')

	allow $1 soundd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send soundd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_soundd_client_packets',`
	gen_require(`
		type soundd_client_packet_t;
	')

	allow $1 soundd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send soundd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_soundd_client_packets',`
	gen_require(`
		type soundd_client_packet_t;
	')

	dontaudit $1 soundd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive soundd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_soundd_client_packets',`
	gen_require(`
		type soundd_client_packet_t;
	')

	allow $1 soundd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive soundd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_soundd_client_packets',`
	gen_require(`
		type soundd_client_packet_t;
	')

	dontaudit $1 soundd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive soundd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_soundd_client_packets',`
	corenet_send_soundd_client_packets($1)
	corenet_receive_soundd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive soundd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_soundd_client_packets',`
	corenet_dontaudit_send_soundd_client_packets($1)
	corenet_dontaudit_receive_soundd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to soundd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_soundd_client_packets',`
	gen_require(`
		type soundd_client_packet_t;
	')

	allow $1 soundd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send soundd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_soundd_server_packets',`
	gen_require(`
		type soundd_server_packet_t;
	')

	allow $1 soundd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send soundd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_soundd_server_packets',`
	gen_require(`
		type soundd_server_packet_t;
	')

	dontaudit $1 soundd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive soundd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_soundd_server_packets',`
	gen_require(`
		type soundd_server_packet_t;
	')

	allow $1 soundd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive soundd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_soundd_server_packets',`
	gen_require(`
		type soundd_server_packet_t;
	')

	dontaudit $1 soundd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive soundd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_soundd_server_packets',`
	corenet_send_soundd_server_packets($1)
	corenet_receive_soundd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive soundd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_soundd_server_packets',`
	corenet_dontaudit_send_soundd_server_packets($1)
	corenet_dontaudit_receive_soundd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to soundd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_soundd_server_packets',`
	gen_require(`
		type soundd_server_packet_t;
	')

	allow $1 soundd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the swat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_swat_port',`
	gen_require(`
		type swat_port_t;
	')

	allow $1 swat_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the swat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_swat_port',`
	gen_require(`
		type swat_port_t;
	')

	allow $1 swat_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the swat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_swat_port',`
	gen_require(`
		type swat_port_t;
	')

	dontaudit $1 swat_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the swat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_swat_port',`
	gen_require(`
		type swat_port_t;
	')

	allow $1 swat_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the swat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_swat_port',`
	gen_require(`
		type swat_port_t;
	')

	dontaudit $1 swat_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the swat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_swat_port',`
	corenet_udp_send_swat_port($1)
	corenet_udp_receive_swat_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the swat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_swat_port',`
	corenet_dontaudit_udp_send_swat_port($1)
	corenet_dontaudit_udp_receive_swat_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the swat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_swat_port',`
	gen_require(`
		type swat_port_t;
	')

	allow $1 swat_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the swat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_swat_port',`
	gen_require(`
		type swat_port_t;
	')

	allow $1 swat_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the swat port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_swat_port',`
	gen_require(`
		type swat_port_t;
	')

	allow $1 swat_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send swat_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_swat_client_packets',`
	gen_require(`
		type swat_client_packet_t;
	')

	allow $1 swat_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send swat_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_swat_client_packets',`
	gen_require(`
		type swat_client_packet_t;
	')

	dontaudit $1 swat_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive swat_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_swat_client_packets',`
	gen_require(`
		type swat_client_packet_t;
	')

	allow $1 swat_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive swat_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_swat_client_packets',`
	gen_require(`
		type swat_client_packet_t;
	')

	dontaudit $1 swat_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive swat_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_swat_client_packets',`
	corenet_send_swat_client_packets($1)
	corenet_receive_swat_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive swat_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_swat_client_packets',`
	corenet_dontaudit_send_swat_client_packets($1)
	corenet_dontaudit_receive_swat_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to swat_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_swat_client_packets',`
	gen_require(`
		type swat_client_packet_t;
	')

	allow $1 swat_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send swat_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_swat_server_packets',`
	gen_require(`
		type swat_server_packet_t;
	')

	allow $1 swat_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send swat_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_swat_server_packets',`
	gen_require(`
		type swat_server_packet_t;
	')

	dontaudit $1 swat_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive swat_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_swat_server_packets',`
	gen_require(`
		type swat_server_packet_t;
	')

	allow $1 swat_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive swat_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_swat_server_packets',`
	gen_require(`
		type swat_server_packet_t;
	')

	dontaudit $1 swat_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive swat_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_swat_server_packets',`
	corenet_send_swat_server_packets($1)
	corenet_receive_swat_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive swat_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_swat_server_packets',`
	corenet_dontaudit_send_swat_server_packets($1)
	corenet_dontaudit_receive_swat_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to swat_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_swat_server_packets',`
	gen_require(`
		type swat_server_packet_t;
	')

	allow $1 swat_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the syslogd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_syslogd_port',`
	gen_require(`
		type syslogd_port_t;
	')

	allow $1 syslogd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the syslogd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_syslogd_port',`
	gen_require(`
		type syslogd_port_t;
	')

	allow $1 syslogd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the syslogd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_syslogd_port',`
	gen_require(`
		type syslogd_port_t;
	')

	dontaudit $1 syslogd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the syslogd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_syslogd_port',`
	gen_require(`
		type syslogd_port_t;
	')

	allow $1 syslogd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the syslogd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_syslogd_port',`
	gen_require(`
		type syslogd_port_t;
	')

	dontaudit $1 syslogd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the syslogd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_syslogd_port',`
	corenet_udp_send_syslogd_port($1)
	corenet_udp_receive_syslogd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the syslogd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_syslogd_port',`
	corenet_dontaudit_udp_send_syslogd_port($1)
	corenet_dontaudit_udp_receive_syslogd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the syslogd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_syslogd_port',`
	gen_require(`
		type syslogd_port_t;
	')

	allow $1 syslogd_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the syslogd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_syslogd_port',`
	gen_require(`
		type syslogd_port_t;
	')

	allow $1 syslogd_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the syslogd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_syslogd_port',`
	gen_require(`
		type syslogd_port_t;
	')

	allow $1 syslogd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send syslogd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_syslogd_client_packets',`
	gen_require(`
		type syslogd_client_packet_t;
	')

	allow $1 syslogd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send syslogd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_syslogd_client_packets',`
	gen_require(`
		type syslogd_client_packet_t;
	')

	dontaudit $1 syslogd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive syslogd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_syslogd_client_packets',`
	gen_require(`
		type syslogd_client_packet_t;
	')

	allow $1 syslogd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive syslogd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_syslogd_client_packets',`
	gen_require(`
		type syslogd_client_packet_t;
	')

	dontaudit $1 syslogd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive syslogd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_syslogd_client_packets',`
	corenet_send_syslogd_client_packets($1)
	corenet_receive_syslogd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive syslogd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_syslogd_client_packets',`
	corenet_dontaudit_send_syslogd_client_packets($1)
	corenet_dontaudit_receive_syslogd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to syslogd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_syslogd_client_packets',`
	gen_require(`
		type syslogd_client_packet_t;
	')

	allow $1 syslogd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send syslogd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_syslogd_server_packets',`
	gen_require(`
		type syslogd_server_packet_t;
	')

	allow $1 syslogd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send syslogd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_syslogd_server_packets',`
	gen_require(`
		type syslogd_server_packet_t;
	')

	dontaudit $1 syslogd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive syslogd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_syslogd_server_packets',`
	gen_require(`
		type syslogd_server_packet_t;
	')

	allow $1 syslogd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive syslogd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_syslogd_server_packets',`
	gen_require(`
		type syslogd_server_packet_t;
	')

	dontaudit $1 syslogd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive syslogd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_syslogd_server_packets',`
	corenet_send_syslogd_server_packets($1)
	corenet_receive_syslogd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive syslogd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_syslogd_server_packets',`
	corenet_dontaudit_send_syslogd_server_packets($1)
	corenet_dontaudit_receive_syslogd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to syslogd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_syslogd_server_packets',`
	gen_require(`
		type syslogd_server_packet_t;
	')

	allow $1 syslogd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the telnetd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_telnetd_port',`
	gen_require(`
		type telnetd_port_t;
	')

	allow $1 telnetd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the telnetd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_telnetd_port',`
	gen_require(`
		type telnetd_port_t;
	')

	allow $1 telnetd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the telnetd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_telnetd_port',`
	gen_require(`
		type telnetd_port_t;
	')

	dontaudit $1 telnetd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the telnetd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_telnetd_port',`
	gen_require(`
		type telnetd_port_t;
	')

	allow $1 telnetd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the telnetd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_telnetd_port',`
	gen_require(`
		type telnetd_port_t;
	')

	dontaudit $1 telnetd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the telnetd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_telnetd_port',`
	corenet_udp_send_telnetd_port($1)
	corenet_udp_receive_telnetd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the telnetd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_telnetd_port',`
	corenet_dontaudit_udp_send_telnetd_port($1)
	corenet_dontaudit_udp_receive_telnetd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the telnetd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_telnetd_port',`
	gen_require(`
		type telnetd_port_t;
	')

	allow $1 telnetd_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the telnetd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_telnetd_port',`
	gen_require(`
		type telnetd_port_t;
	')

	allow $1 telnetd_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the telnetd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_telnetd_port',`
	gen_require(`
		type telnetd_port_t;
	')

	allow $1 telnetd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send telnetd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_telnetd_client_packets',`
	gen_require(`
		type telnetd_client_packet_t;
	')

	allow $1 telnetd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send telnetd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_telnetd_client_packets',`
	gen_require(`
		type telnetd_client_packet_t;
	')

	dontaudit $1 telnetd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive telnetd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_telnetd_client_packets',`
	gen_require(`
		type telnetd_client_packet_t;
	')

	allow $1 telnetd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive telnetd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_telnetd_client_packets',`
	gen_require(`
		type telnetd_client_packet_t;
	')

	dontaudit $1 telnetd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive telnetd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_telnetd_client_packets',`
	corenet_send_telnetd_client_packets($1)
	corenet_receive_telnetd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive telnetd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_telnetd_client_packets',`
	corenet_dontaudit_send_telnetd_client_packets($1)
	corenet_dontaudit_receive_telnetd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to telnetd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_telnetd_client_packets',`
	gen_require(`
		type telnetd_client_packet_t;
	')

	allow $1 telnetd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send telnetd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_telnetd_server_packets',`
	gen_require(`
		type telnetd_server_packet_t;
	')

	allow $1 telnetd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send telnetd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_telnetd_server_packets',`
	gen_require(`
		type telnetd_server_packet_t;
	')

	dontaudit $1 telnetd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive telnetd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_telnetd_server_packets',`
	gen_require(`
		type telnetd_server_packet_t;
	')

	allow $1 telnetd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive telnetd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_telnetd_server_packets',`
	gen_require(`
		type telnetd_server_packet_t;
	')

	dontaudit $1 telnetd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive telnetd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_telnetd_server_packets',`
	corenet_send_telnetd_server_packets($1)
	corenet_receive_telnetd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive telnetd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_telnetd_server_packets',`
	corenet_dontaudit_send_telnetd_server_packets($1)
	corenet_dontaudit_receive_telnetd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to telnetd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_telnetd_server_packets',`
	gen_require(`
		type telnetd_server_packet_t;
	')

	allow $1 telnetd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the tftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_tftp_port',`
	gen_require(`
		type tftp_port_t;
	')

	allow $1 tftp_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the tftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_tftp_port',`
	gen_require(`
		type tftp_port_t;
	')

	allow $1 tftp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the tftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_tftp_port',`
	gen_require(`
		type tftp_port_t;
	')

	dontaudit $1 tftp_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the tftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_tftp_port',`
	gen_require(`
		type tftp_port_t;
	')

	allow $1 tftp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the tftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_tftp_port',`
	gen_require(`
		type tftp_port_t;
	')

	dontaudit $1 tftp_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the tftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_tftp_port',`
	corenet_udp_send_tftp_port($1)
	corenet_udp_receive_tftp_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the tftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_tftp_port',`
	corenet_dontaudit_udp_send_tftp_port($1)
	corenet_dontaudit_udp_receive_tftp_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the tftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_tftp_port',`
	gen_require(`
		type tftp_port_t;
	')

	allow $1 tftp_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the tftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_tftp_port',`
	gen_require(`
		type tftp_port_t;
	')

	allow $1 tftp_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the tftp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_tftp_port',`
	gen_require(`
		type tftp_port_t;
	')

	allow $1 tftp_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send tftp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_tftp_client_packets',`
	gen_require(`
		type tftp_client_packet_t;
	')

	allow $1 tftp_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send tftp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_tftp_client_packets',`
	gen_require(`
		type tftp_client_packet_t;
	')

	dontaudit $1 tftp_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive tftp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_tftp_client_packets',`
	gen_require(`
		type tftp_client_packet_t;
	')

	allow $1 tftp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive tftp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_tftp_client_packets',`
	gen_require(`
		type tftp_client_packet_t;
	')

	dontaudit $1 tftp_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive tftp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_tftp_client_packets',`
	corenet_send_tftp_client_packets($1)
	corenet_receive_tftp_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive tftp_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_tftp_client_packets',`
	corenet_dontaudit_send_tftp_client_packets($1)
	corenet_dontaudit_receive_tftp_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to tftp_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_tftp_client_packets',`
	gen_require(`
		type tftp_client_packet_t;
	')

	allow $1 tftp_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send tftp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_tftp_server_packets',`
	gen_require(`
		type tftp_server_packet_t;
	')

	allow $1 tftp_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send tftp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_tftp_server_packets',`
	gen_require(`
		type tftp_server_packet_t;
	')

	dontaudit $1 tftp_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive tftp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_tftp_server_packets',`
	gen_require(`
		type tftp_server_packet_t;
	')

	allow $1 tftp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive tftp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_tftp_server_packets',`
	gen_require(`
		type tftp_server_packet_t;
	')

	dontaudit $1 tftp_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive tftp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_tftp_server_packets',`
	corenet_send_tftp_server_packets($1)
	corenet_receive_tftp_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive tftp_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_tftp_server_packets',`
	corenet_dontaudit_send_tftp_server_packets($1)
	corenet_dontaudit_receive_tftp_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to tftp_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_tftp_server_packets',`
	gen_require(`
		type tftp_server_packet_t;
	')

	allow $1 tftp_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the tor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_tor_port',`
	gen_require(`
		type tor_port_t;
	')

	allow $1 tor_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the tor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_tor_port',`
	gen_require(`
		type tor_port_t;
	')

	allow $1 tor_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the tor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_tor_port',`
	gen_require(`
		type tor_port_t;
	')

	dontaudit $1 tor_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the tor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_tor_port',`
	gen_require(`
		type tor_port_t;
	')

	allow $1 tor_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the tor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_tor_port',`
	gen_require(`
		type tor_port_t;
	')

	dontaudit $1 tor_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the tor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_tor_port',`
	corenet_udp_send_tor_port($1)
	corenet_udp_receive_tor_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the tor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_tor_port',`
	corenet_dontaudit_udp_send_tor_port($1)
	corenet_dontaudit_udp_receive_tor_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the tor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_tor_port',`
	gen_require(`
		type tor_port_t;
	')

	allow $1 tor_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the tor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_tor_port',`
	gen_require(`
		type tor_port_t;
	')

	allow $1 tor_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the tor port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_tor_port',`
	gen_require(`
		type tor_port_t;
	')

	allow $1 tor_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send tor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_tor_client_packets',`
	gen_require(`
		type tor_client_packet_t;
	')

	allow $1 tor_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send tor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_tor_client_packets',`
	gen_require(`
		type tor_client_packet_t;
	')

	dontaudit $1 tor_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive tor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_tor_client_packets',`
	gen_require(`
		type tor_client_packet_t;
	')

	allow $1 tor_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive tor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_tor_client_packets',`
	gen_require(`
		type tor_client_packet_t;
	')

	dontaudit $1 tor_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive tor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_tor_client_packets',`
	corenet_send_tor_client_packets($1)
	corenet_receive_tor_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive tor_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_tor_client_packets',`
	corenet_dontaudit_send_tor_client_packets($1)
	corenet_dontaudit_receive_tor_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to tor_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_tor_client_packets',`
	gen_require(`
		type tor_client_packet_t;
	')

	allow $1 tor_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send tor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_tor_server_packets',`
	gen_require(`
		type tor_server_packet_t;
	')

	allow $1 tor_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send tor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_tor_server_packets',`
	gen_require(`
		type tor_server_packet_t;
	')

	dontaudit $1 tor_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive tor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_tor_server_packets',`
	gen_require(`
		type tor_server_packet_t;
	')

	allow $1 tor_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive tor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_tor_server_packets',`
	gen_require(`
		type tor_server_packet_t;
	')

	dontaudit $1 tor_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive tor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_tor_server_packets',`
	corenet_send_tor_server_packets($1)
	corenet_receive_tor_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive tor_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_tor_server_packets',`
	corenet_dontaudit_send_tor_server_packets($1)
	corenet_dontaudit_receive_tor_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to tor_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_tor_server_packets',`
	gen_require(`
		type tor_server_packet_t;
	')

	allow $1 tor_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the traceroute port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_traceroute_port',`
	gen_require(`
		type traceroute_port_t;
	')

	allow $1 traceroute_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the traceroute port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_traceroute_port',`
	gen_require(`
		type traceroute_port_t;
	')

	allow $1 traceroute_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the traceroute port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_traceroute_port',`
	gen_require(`
		type traceroute_port_t;
	')

	dontaudit $1 traceroute_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the traceroute port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_traceroute_port',`
	gen_require(`
		type traceroute_port_t;
	')

	allow $1 traceroute_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the traceroute port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_traceroute_port',`
	gen_require(`
		type traceroute_port_t;
	')

	dontaudit $1 traceroute_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the traceroute port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_traceroute_port',`
	corenet_udp_send_traceroute_port($1)
	corenet_udp_receive_traceroute_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the traceroute port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_traceroute_port',`
	corenet_dontaudit_udp_send_traceroute_port($1)
	corenet_dontaudit_udp_receive_traceroute_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the traceroute port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_traceroute_port',`
	gen_require(`
		type traceroute_port_t;
	')

	allow $1 traceroute_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the traceroute port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_traceroute_port',`
	gen_require(`
		type traceroute_port_t;
	')

	allow $1 traceroute_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the traceroute port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_traceroute_port',`
	gen_require(`
		type traceroute_port_t;
	')

	allow $1 traceroute_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send traceroute_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_traceroute_client_packets',`
	gen_require(`
		type traceroute_client_packet_t;
	')

	allow $1 traceroute_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send traceroute_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_traceroute_client_packets',`
	gen_require(`
		type traceroute_client_packet_t;
	')

	dontaudit $1 traceroute_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive traceroute_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_traceroute_client_packets',`
	gen_require(`
		type traceroute_client_packet_t;
	')

	allow $1 traceroute_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive traceroute_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_traceroute_client_packets',`
	gen_require(`
		type traceroute_client_packet_t;
	')

	dontaudit $1 traceroute_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive traceroute_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_traceroute_client_packets',`
	corenet_send_traceroute_client_packets($1)
	corenet_receive_traceroute_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive traceroute_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_traceroute_client_packets',`
	corenet_dontaudit_send_traceroute_client_packets($1)
	corenet_dontaudit_receive_traceroute_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to traceroute_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_traceroute_client_packets',`
	gen_require(`
		type traceroute_client_packet_t;
	')

	allow $1 traceroute_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send traceroute_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_traceroute_server_packets',`
	gen_require(`
		type traceroute_server_packet_t;
	')

	allow $1 traceroute_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send traceroute_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_traceroute_server_packets',`
	gen_require(`
		type traceroute_server_packet_t;
	')

	dontaudit $1 traceroute_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive traceroute_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_traceroute_server_packets',`
	gen_require(`
		type traceroute_server_packet_t;
	')

	allow $1 traceroute_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive traceroute_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_traceroute_server_packets',`
	gen_require(`
		type traceroute_server_packet_t;
	')

	dontaudit $1 traceroute_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive traceroute_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_traceroute_server_packets',`
	corenet_send_traceroute_server_packets($1)
	corenet_receive_traceroute_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive traceroute_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_traceroute_server_packets',`
	corenet_dontaudit_send_traceroute_server_packets($1)
	corenet_dontaudit_receive_traceroute_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to traceroute_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_traceroute_server_packets',`
	gen_require(`
		type traceroute_server_packet_t;
	')

	allow $1 traceroute_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the transproxy port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_transproxy_port',`
	gen_require(`
		type transproxy_port_t;
	')

	allow $1 transproxy_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the transproxy port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_transproxy_port',`
	gen_require(`
		type transproxy_port_t;
	')

	allow $1 transproxy_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the transproxy port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_transproxy_port',`
	gen_require(`
		type transproxy_port_t;
	')

	dontaudit $1 transproxy_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the transproxy port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_transproxy_port',`
	gen_require(`
		type transproxy_port_t;
	')

	allow $1 transproxy_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the transproxy port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_transproxy_port',`
	gen_require(`
		type transproxy_port_t;
	')

	dontaudit $1 transproxy_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the transproxy port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_transproxy_port',`
	corenet_udp_send_transproxy_port($1)
	corenet_udp_receive_transproxy_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the transproxy port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_transproxy_port',`
	corenet_dontaudit_udp_send_transproxy_port($1)
	corenet_dontaudit_udp_receive_transproxy_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the transproxy port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_transproxy_port',`
	gen_require(`
		type transproxy_port_t;
	')

	allow $1 transproxy_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the transproxy port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_transproxy_port',`
	gen_require(`
		type transproxy_port_t;
	')

	allow $1 transproxy_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the transproxy port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_transproxy_port',`
	gen_require(`
		type transproxy_port_t;
	')

	allow $1 transproxy_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send transproxy_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_transproxy_client_packets',`
	gen_require(`
		type transproxy_client_packet_t;
	')

	allow $1 transproxy_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send transproxy_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_transproxy_client_packets',`
	gen_require(`
		type transproxy_client_packet_t;
	')

	dontaudit $1 transproxy_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive transproxy_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_transproxy_client_packets',`
	gen_require(`
		type transproxy_client_packet_t;
	')

	allow $1 transproxy_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive transproxy_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_transproxy_client_packets',`
	gen_require(`
		type transproxy_client_packet_t;
	')

	dontaudit $1 transproxy_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive transproxy_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_transproxy_client_packets',`
	corenet_send_transproxy_client_packets($1)
	corenet_receive_transproxy_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive transproxy_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_transproxy_client_packets',`
	corenet_dontaudit_send_transproxy_client_packets($1)
	corenet_dontaudit_receive_transproxy_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to transproxy_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_transproxy_client_packets',`
	gen_require(`
		type transproxy_client_packet_t;
	')

	allow $1 transproxy_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send transproxy_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_transproxy_server_packets',`
	gen_require(`
		type transproxy_server_packet_t;
	')

	allow $1 transproxy_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send transproxy_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_transproxy_server_packets',`
	gen_require(`
		type transproxy_server_packet_t;
	')

	dontaudit $1 transproxy_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive transproxy_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_transproxy_server_packets',`
	gen_require(`
		type transproxy_server_packet_t;
	')

	allow $1 transproxy_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive transproxy_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_transproxy_server_packets',`
	gen_require(`
		type transproxy_server_packet_t;
	')

	dontaudit $1 transproxy_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive transproxy_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_transproxy_server_packets',`
	corenet_send_transproxy_server_packets($1)
	corenet_receive_transproxy_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive transproxy_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_transproxy_server_packets',`
	corenet_dontaudit_send_transproxy_server_packets($1)
	corenet_dontaudit_receive_transproxy_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to transproxy_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_transproxy_server_packets',`
	gen_require(`
		type transproxy_server_packet_t;
	')

	allow $1 transproxy_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the uucpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_uucpd_port',`
	gen_require(`
		type uucpd_port_t;
	')

	allow $1 uucpd_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the uucpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_uucpd_port',`
	gen_require(`
		type uucpd_port_t;
	')

	allow $1 uucpd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the uucpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_uucpd_port',`
	gen_require(`
		type uucpd_port_t;
	')

	dontaudit $1 uucpd_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the uucpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_uucpd_port',`
	gen_require(`
		type uucpd_port_t;
	')

	allow $1 uucpd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the uucpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_uucpd_port',`
	gen_require(`
		type uucpd_port_t;
	')

	dontaudit $1 uucpd_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the uucpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_uucpd_port',`
	corenet_udp_send_uucpd_port($1)
	corenet_udp_receive_uucpd_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the uucpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_uucpd_port',`
	corenet_dontaudit_udp_send_uucpd_port($1)
	corenet_dontaudit_udp_receive_uucpd_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the uucpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_uucpd_port',`
	gen_require(`
		type uucpd_port_t;
	')

	allow $1 uucpd_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Bind UDP sockets to the uucpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_uucpd_port',`
	gen_require(`
		type uucpd_port_t;
	')

	allow $1 uucpd_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

########################################
## <summary>
##	Make a TCP connection to the uucpd port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_uucpd_port',`
	gen_require(`
		type uucpd_port_t;
	')

	allow $1 uucpd_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send uucpd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_uucpd_client_packets',`
	gen_require(`
		type uucpd_client_packet_t;
	')

	allow $1 uucpd_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send uucpd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_uucpd_client_packets',`
	gen_require(`
		type uucpd_client_packet_t;
	')

	dontaudit $1 uucpd_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive uucpd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_uucpd_client_packets',`
	gen_require(`
		type uucpd_client_packet_t;
	')

	allow $1 uucpd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive uucpd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_uucpd_client_packets',`
	gen_require(`
		type uucpd_client_packet_t;
	')

	dontaudit $1 uucpd_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive uucpd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_uucpd_client_packets',`
	corenet_send_uucpd_client_packets($1)
	corenet_receive_uucpd_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive uucpd_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_uucpd_client_packets',`
	corenet_dontaudit_send_uucpd_client_packets($1)
	corenet_dontaudit_receive_uucpd_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to uucpd_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_uucpd_client_packets',`
	gen_require(`
		type uucpd_client_packet_t;
	')

	allow $1 uucpd_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send uucpd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_uucpd_server_packets',`
	gen_require(`
		type uucpd_server_packet_t;
	')

	allow $1 uucpd_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send uucpd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_uucpd_server_packets',`
	gen_require(`
		type uucpd_server_packet_t;
	')

	dontaudit $1 uucpd_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive uucpd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_uucpd_server_packets',`
	gen_require(`
		type uucpd_server_packet_t;
	')

	allow $1 uucpd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive uucpd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_uucpd_server_packets',`
	gen_require(`
		type uucpd_server_packet_t;
	')

	dontaudit $1 uucpd_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive uucpd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_uucpd_server_packets',`
	corenet_send_uucpd_server_packets($1)
	corenet_receive_uucpd_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive uucpd_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_uucpd_server_packets',`
	corenet_dontaudit_send_uucpd_server_packets($1)
	corenet_dontaudit_receive_uucpd_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to uucpd_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_uucpd_server_packets',`
	gen_require(`
		type uucpd_server_packet_t;
	')

	allow $1 uucpd_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the vnc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_vnc_port',`
	gen_require(`
		type vnc_port_t;
	')

	allow $1 vnc_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the vnc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_vnc_port',`
	gen_require(`
		type vnc_port_t;
	')

	allow $1 vnc_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the vnc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_vnc_port',`
	gen_require(`
		type vnc_port_t;
	')

	dontaudit $1 vnc_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the vnc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_vnc_port',`
	gen_require(`
		type vnc_port_t;
	')

	allow $1 vnc_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the vnc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_vnc_port',`
	gen_require(`
		type vnc_port_t;
	')

	dontaudit $1 vnc_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the vnc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_vnc_port',`
	corenet_udp_send_vnc_port($1)
	corenet_udp_receive_vnc_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the vnc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_vnc_port',`
	corenet_dontaudit_udp_send_vnc_port($1)
	corenet_dontaudit_udp_receive_vnc_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the vnc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_vnc_port',`
	gen_require(`
		type vnc_port_t;
	')

	allow $1 vnc_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the vnc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_vnc_port',`
	gen_require(`
		type vnc_port_t;
	')

	allow $1 vnc_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the vnc port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_vnc_port',`
	gen_require(`
		type vnc_port_t;
	')

	allow $1 vnc_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send vnc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_vnc_client_packets',`
	gen_require(`
		type vnc_client_packet_t;
	')

	allow $1 vnc_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send vnc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_vnc_client_packets',`
	gen_require(`
		type vnc_client_packet_t;
	')

	dontaudit $1 vnc_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive vnc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_vnc_client_packets',`
	gen_require(`
		type vnc_client_packet_t;
	')

	allow $1 vnc_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive vnc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_vnc_client_packets',`
	gen_require(`
		type vnc_client_packet_t;
	')

	dontaudit $1 vnc_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive vnc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_vnc_client_packets',`
	corenet_send_vnc_client_packets($1)
	corenet_receive_vnc_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive vnc_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_vnc_client_packets',`
	corenet_dontaudit_send_vnc_client_packets($1)
	corenet_dontaudit_receive_vnc_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to vnc_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_vnc_client_packets',`
	gen_require(`
		type vnc_client_packet_t;
	')

	allow $1 vnc_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send vnc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_vnc_server_packets',`
	gen_require(`
		type vnc_server_packet_t;
	')

	allow $1 vnc_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send vnc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_vnc_server_packets',`
	gen_require(`
		type vnc_server_packet_t;
	')

	dontaudit $1 vnc_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive vnc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_vnc_server_packets',`
	gen_require(`
		type vnc_server_packet_t;
	')

	allow $1 vnc_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive vnc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_vnc_server_packets',`
	gen_require(`
		type vnc_server_packet_t;
	')

	dontaudit $1 vnc_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive vnc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_vnc_server_packets',`
	corenet_send_vnc_server_packets($1)
	corenet_receive_vnc_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive vnc_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_vnc_server_packets',`
	corenet_dontaudit_send_vnc_server_packets($1)
	corenet_dontaudit_receive_vnc_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to vnc_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_vnc_server_packets',`
	gen_require(`
		type vnc_server_packet_t;
	')

	allow $1 vnc_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the xen port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_xen_port',`
	gen_require(`
		type xen_port_t;
	')

	allow $1 xen_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the xen port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_xen_port',`
	gen_require(`
		type xen_port_t;
	')

	allow $1 xen_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the xen port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_xen_port',`
	gen_require(`
		type xen_port_t;
	')

	dontaudit $1 xen_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the xen port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_xen_port',`
	gen_require(`
		type xen_port_t;
	')

	allow $1 xen_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the xen port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_xen_port',`
	gen_require(`
		type xen_port_t;
	')

	dontaudit $1 xen_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the xen port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_xen_port',`
	corenet_udp_send_xen_port($1)
	corenet_udp_receive_xen_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the xen port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_xen_port',`
	corenet_dontaudit_udp_send_xen_port($1)
	corenet_dontaudit_udp_receive_xen_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the xen port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_xen_port',`
	gen_require(`
		type xen_port_t;
	')

	allow $1 xen_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the xen port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_xen_port',`
	gen_require(`
		type xen_port_t;
	')

	allow $1 xen_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the xen port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_xen_port',`
	gen_require(`
		type xen_port_t;
	')

	allow $1 xen_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send xen_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_xen_client_packets',`
	gen_require(`
		type xen_client_packet_t;
	')

	allow $1 xen_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send xen_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_xen_client_packets',`
	gen_require(`
		type xen_client_packet_t;
	')

	dontaudit $1 xen_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive xen_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_xen_client_packets',`
	gen_require(`
		type xen_client_packet_t;
	')

	allow $1 xen_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive xen_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_xen_client_packets',`
	gen_require(`
		type xen_client_packet_t;
	')

	dontaudit $1 xen_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive xen_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_xen_client_packets',`
	corenet_send_xen_client_packets($1)
	corenet_receive_xen_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive xen_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_xen_client_packets',`
	corenet_dontaudit_send_xen_client_packets($1)
	corenet_dontaudit_receive_xen_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to xen_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_xen_client_packets',`
	gen_require(`
		type xen_client_packet_t;
	')

	allow $1 xen_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send xen_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_xen_server_packets',`
	gen_require(`
		type xen_server_packet_t;
	')

	allow $1 xen_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send xen_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_xen_server_packets',`
	gen_require(`
		type xen_server_packet_t;
	')

	dontaudit $1 xen_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive xen_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_xen_server_packets',`
	gen_require(`
		type xen_server_packet_t;
	')

	allow $1 xen_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive xen_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_xen_server_packets',`
	gen_require(`
		type xen_server_packet_t;
	')

	dontaudit $1 xen_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive xen_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_xen_server_packets',`
	corenet_send_xen_server_packets($1)
	corenet_receive_xen_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive xen_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_xen_server_packets',`
	corenet_dontaudit_send_xen_server_packets($1)
	corenet_dontaudit_receive_xen_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to xen_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_xen_server_packets',`
	gen_require(`
		type xen_server_packet_t;
	')

	allow $1 xen_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the xserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_xserver_port',`
	gen_require(`
		type xserver_port_t;
	')

	allow $1 xserver_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the xserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_xserver_port',`
	gen_require(`
		type xserver_port_t;
	')

	allow $1 xserver_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the xserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_xserver_port',`
	gen_require(`
		type xserver_port_t;
	')

	dontaudit $1 xserver_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the xserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_xserver_port',`
	gen_require(`
		type xserver_port_t;
	')

	allow $1 xserver_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the xserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_xserver_port',`
	gen_require(`
		type xserver_port_t;
	')

	dontaudit $1 xserver_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the xserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_xserver_port',`
	corenet_udp_send_xserver_port($1)
	corenet_udp_receive_xserver_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the xserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_xserver_port',`
	corenet_dontaudit_udp_send_xserver_port($1)
	corenet_dontaudit_udp_receive_xserver_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the xserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_xserver_port',`
	gen_require(`
		type xserver_port_t;
	')

	allow $1 xserver_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the xserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_xserver_port',`
	gen_require(`
		type xserver_port_t;
	')

	allow $1 xserver_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the xserver port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_xserver_port',`
	gen_require(`
		type xserver_port_t;
	')

	allow $1 xserver_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send xserver_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_xserver_client_packets',`
	gen_require(`
		type xserver_client_packet_t;
	')

	allow $1 xserver_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send xserver_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_xserver_client_packets',`
	gen_require(`
		type xserver_client_packet_t;
	')

	dontaudit $1 xserver_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive xserver_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_xserver_client_packets',`
	gen_require(`
		type xserver_client_packet_t;
	')

	allow $1 xserver_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive xserver_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_xserver_client_packets',`
	gen_require(`
		type xserver_client_packet_t;
	')

	dontaudit $1 xserver_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive xserver_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_xserver_client_packets',`
	corenet_send_xserver_client_packets($1)
	corenet_receive_xserver_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive xserver_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_xserver_client_packets',`
	corenet_dontaudit_send_xserver_client_packets($1)
	corenet_dontaudit_receive_xserver_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to xserver_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_xserver_client_packets',`
	gen_require(`
		type xserver_client_packet_t;
	')

	allow $1 xserver_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send xserver_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_xserver_server_packets',`
	gen_require(`
		type xserver_server_packet_t;
	')

	allow $1 xserver_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send xserver_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_xserver_server_packets',`
	gen_require(`
		type xserver_server_packet_t;
	')

	dontaudit $1 xserver_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive xserver_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_xserver_server_packets',`
	gen_require(`
		type xserver_server_packet_t;
	')

	allow $1 xserver_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive xserver_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_xserver_server_packets',`
	gen_require(`
		type xserver_server_packet_t;
	')

	dontaudit $1 xserver_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive xserver_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_xserver_server_packets',`
	corenet_send_xserver_server_packets($1)
	corenet_receive_xserver_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive xserver_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_xserver_server_packets',`
	corenet_dontaudit_send_xserver_server_packets($1)
	corenet_dontaudit_receive_xserver_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to xserver_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_xserver_server_packets',`
	gen_require(`
		type xserver_server_packet_t;
	')

	allow $1 xserver_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the zebra port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_zebra_port',`
	gen_require(`
		type zebra_port_t;
	')

	allow $1 zebra_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the zebra port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_zebra_port',`
	gen_require(`
		type zebra_port_t;
	')

	allow $1 zebra_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the zebra port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_zebra_port',`
	gen_require(`
		type zebra_port_t;
	')

	dontaudit $1 zebra_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the zebra port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_zebra_port',`
	gen_require(`
		type zebra_port_t;
	')

	allow $1 zebra_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the zebra port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_zebra_port',`
	gen_require(`
		type zebra_port_t;
	')

	dontaudit $1 zebra_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the zebra port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_zebra_port',`
	corenet_udp_send_zebra_port($1)
	corenet_udp_receive_zebra_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the zebra port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_zebra_port',`
	corenet_dontaudit_udp_send_zebra_port($1)
	corenet_dontaudit_udp_receive_zebra_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the zebra port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_zebra_port',`
	gen_require(`
		type zebra_port_t;
	')

	allow $1 zebra_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the zebra port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_zebra_port',`
	gen_require(`
		type zebra_port_t;
	')

	allow $1 zebra_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the zebra port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_zebra_port',`
	gen_require(`
		type zebra_port_t;
	')

	allow $1 zebra_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send zebra_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_zebra_client_packets',`
	gen_require(`
		type zebra_client_packet_t;
	')

	allow $1 zebra_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send zebra_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_zebra_client_packets',`
	gen_require(`
		type zebra_client_packet_t;
	')

	dontaudit $1 zebra_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive zebra_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_zebra_client_packets',`
	gen_require(`
		type zebra_client_packet_t;
	')

	allow $1 zebra_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive zebra_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_zebra_client_packets',`
	gen_require(`
		type zebra_client_packet_t;
	')

	dontaudit $1 zebra_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive zebra_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_zebra_client_packets',`
	corenet_send_zebra_client_packets($1)
	corenet_receive_zebra_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive zebra_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_zebra_client_packets',`
	corenet_dontaudit_send_zebra_client_packets($1)
	corenet_dontaudit_receive_zebra_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to zebra_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_zebra_client_packets',`
	gen_require(`
		type zebra_client_packet_t;
	')

	allow $1 zebra_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send zebra_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_zebra_server_packets',`
	gen_require(`
		type zebra_server_packet_t;
	')

	allow $1 zebra_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send zebra_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_zebra_server_packets',`
	gen_require(`
		type zebra_server_packet_t;
	')

	dontaudit $1 zebra_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive zebra_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_zebra_server_packets',`
	gen_require(`
		type zebra_server_packet_t;
	')

	allow $1 zebra_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive zebra_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_zebra_server_packets',`
	gen_require(`
		type zebra_server_packet_t;
	')

	dontaudit $1 zebra_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive zebra_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_zebra_server_packets',`
	corenet_send_zebra_server_packets($1)
	corenet_receive_zebra_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive zebra_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_zebra_server_packets',`
	corenet_dontaudit_send_zebra_server_packets($1)
	corenet_dontaudit_receive_zebra_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to zebra_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_zebra_server_packets',`
	gen_require(`
		type zebra_server_packet_t;
	')

	allow $1 zebra_server_packet_t:packet relabelto;
')




########################################
## <summary>
##	Send and receive TCP traffic on the zope port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_zope_port',`
	gen_require(`
		type zope_port_t;
	')

	allow $1 zope_port_t:tcp_socket { send_msg recv_msg };
')

########################################
## <summary>
##	Send UDP traffic on the zope port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_zope_port',`
	gen_require(`
		type zope_port_t;
	')

	allow $1 zope_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send UDP traffic on the zope port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_send_zope_port',`
	gen_require(`
		type zope_port_t;
	')

	dontaudit $1 zope_port_t:udp_socket send_msg;
')

########################################
## <summary>
##	Receive UDP traffic on the zope port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_zope_port',`
	gen_require(`
		type zope_port_t;
	')

	allow $1 zope_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Do not audit attempts to receive UDP traffic on the zope port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_receive_zope_port',`
	gen_require(`
		type zope_port_t;
	')

	dontaudit $1 zope_port_t:udp_socket recv_msg;
')

########################################
## <summary>
##	Send and receive UDP traffic on the zope port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_zope_port',`
	corenet_udp_send_zope_port($1)
	corenet_udp_receive_zope_port($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive
##	UDP traffic on the zope port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_udp_sendrecv_zope_port',`
	corenet_dontaudit_udp_send_zope_port($1)
	corenet_dontaudit_udp_receive_zope_port($1)
')

########################################
## <summary>
##	Bind TCP sockets to the zope port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_zope_port',`
	gen_require(`
		type zope_port_t;
	')

	allow $1 zope_port_t:tcp_socket name_bind;
	
')

########################################
## <summary>
##	Bind UDP sockets to the zope port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_zope_port',`
	gen_require(`
		type zope_port_t;
	')

	allow $1 zope_port_t:udp_socket name_bind;
	
')

########################################
## <summary>
##	Make a TCP connection to the zope port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_tcp_connect_zope_port',`
	gen_require(`
		type zope_port_t;
	')

	allow $1 zope_port_t:tcp_socket name_connect;
')


########################################
## <summary>
##	Send zope_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_zope_client_packets',`
	gen_require(`
		type zope_client_packet_t;
	')

	allow $1 zope_client_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send zope_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_zope_client_packets',`
	gen_require(`
		type zope_client_packet_t;
	')

	dontaudit $1 zope_client_packet_t:packet send;
')

########################################
## <summary>
##	Receive zope_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_zope_client_packets',`
	gen_require(`
		type zope_client_packet_t;
	')

	allow $1 zope_client_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive zope_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_zope_client_packets',`
	gen_require(`
		type zope_client_packet_t;
	')

	dontaudit $1 zope_client_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive zope_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_zope_client_packets',`
	corenet_send_zope_client_packets($1)
	corenet_receive_zope_client_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive zope_client packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_zope_client_packets',`
	corenet_dontaudit_send_zope_client_packets($1)
	corenet_dontaudit_receive_zope_client_packets($1)
')

########################################
## <summary>
##	Relabel packets to zope_client the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_zope_client_packets',`
	gen_require(`
		type zope_client_packet_t;
	')

	allow $1 zope_client_packet_t:packet relabelto;
')


########################################
## <summary>
##	Send zope_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_send_zope_server_packets',`
	gen_require(`
		type zope_server_packet_t;
	')

	allow $1 zope_server_packet_t:packet send;
')

########################################
## <summary>
##	Do not audit attempts to send zope_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_send_zope_server_packets',`
	gen_require(`
		type zope_server_packet_t;
	')

	dontaudit $1 zope_server_packet_t:packet send;
')

########################################
## <summary>
##	Receive zope_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_receive_zope_server_packets',`
	gen_require(`
		type zope_server_packet_t;
	')

	allow $1 zope_server_packet_t:packet recv;
')

########################################
## <summary>
##	Do not audit attempts to receive zope_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_receive_zope_server_packets',`
	gen_require(`
		type zope_server_packet_t;
	')

	dontaudit $1 zope_server_packet_t:packet recv;
')

########################################
## <summary>
##	Send and receive zope_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_sendrecv_zope_server_packets',`
	corenet_send_zope_server_packets($1)
	corenet_receive_zope_server_packets($1)
')

########################################
## <summary>
##	Do not audit attempts to send and receive zope_server packets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_dontaudit_sendrecv_zope_server_packets',`
	corenet_dontaudit_send_zope_server_packets($1)
	corenet_dontaudit_receive_zope_server_packets($1)
')

########################################
## <summary>
##	Relabel packets to zope_server the packet type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`corenet_relabelto_zope_server_packets',`
	gen_require(`
		type zope_server_packet_t;
	')

	allow $1 zope_server_packet_t:packet relabelto;
')





########################################
## <summary>
##	Send and receive TCP traffic on the compat_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_compat_ipv4_node',`
	gen_require(`
		type compat_ipv4_node_t;
	')

	allow $1 compat_ipv4_node_t:node { tcp_send tcp_recv };
')

########################################
## <summary>
##	Send UDP traffic on the compat_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_compat_ipv4_node',`
	gen_require(`
		type compat_ipv4_node_t;
	')

	allow $1 compat_ipv4_node_t:node udp_send;
')

########################################
## <summary>
##	Receive UDP traffic on the compat_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_compat_ipv4_node',`
	gen_require(`
		type compat_ipv4_node_t;
	')

	allow $1 compat_ipv4_node_t:node udp_recv;
')

########################################
## <summary>
##	Send and receive UDP traffic on the compat_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_compat_ipv4_node',`
	corenet_udp_send_compat_ipv4_node($1)
	corenet_udp_receive_compat_ipv4_node($1)
')

########################################
## <summary>
##	Send raw IP packets on the compat_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_send_compat_ipv4_node',`
	gen_require(`
		type compat_ipv4_node_t;
	')

	allow $1 compat_ipv4_node_t:node rawip_send;
')

########################################
## <summary>
##	Receive raw IP packets on the compat_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_receive_compat_ipv4_node',`
	gen_require(`
		type compat_ipv4_node_t;
	')

	allow $1 compat_ipv4_node_t:node rawip_recv;
')

########################################
## <summary>
##	Send and receive raw IP packets on the compat_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_raw_sendrecv_compat_ipv4_node',`
	corenet_raw_send_compat_ipv4_node($1)
	corenet_raw_receive_compat_ipv4_node($1)
')

########################################
## <summary>
##	Bind TCP sockets to node compat_ipv4.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_compat_ipv4_node',`
	gen_require(`
		type compat_ipv4_node_t;
	')

	allow $1 compat_ipv4_node_t:tcp_socket node_bind;
')

########################################
## <summary>
##	Bind UDP sockets to the compat_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_compat_ipv4_node',`
	gen_require(`
		type compat_ipv4_node_t;
	')

	allow $1 compat_ipv4_node_t:udp_socket node_bind;
')






########################################
## <summary>
##	Send and receive TCP traffic on the inaddr_any node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_inaddr_any_node',`
	gen_require(`
		type inaddr_any_node_t;
	')

	allow $1 inaddr_any_node_t:node { tcp_send tcp_recv };
')

########################################
## <summary>
##	Send UDP traffic on the inaddr_any node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_inaddr_any_node',`
	gen_require(`
		type inaddr_any_node_t;
	')

	allow $1 inaddr_any_node_t:node udp_send;
')

########################################
## <summary>
##	Receive UDP traffic on the inaddr_any node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_inaddr_any_node',`
	gen_require(`
		type inaddr_any_node_t;
	')

	allow $1 inaddr_any_node_t:node udp_recv;
')

########################################
## <summary>
##	Send and receive UDP traffic on the inaddr_any node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_inaddr_any_node',`
	corenet_udp_send_inaddr_any_node($1)
	corenet_udp_receive_inaddr_any_node($1)
')

########################################
## <summary>
##	Send raw IP packets on the inaddr_any node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_send_inaddr_any_node',`
	gen_require(`
		type inaddr_any_node_t;
	')

	allow $1 inaddr_any_node_t:node rawip_send;
')

########################################
## <summary>
##	Receive raw IP packets on the inaddr_any node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_receive_inaddr_any_node',`
	gen_require(`
		type inaddr_any_node_t;
	')

	allow $1 inaddr_any_node_t:node rawip_recv;
')

########################################
## <summary>
##	Send and receive raw IP packets on the inaddr_any node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_raw_sendrecv_inaddr_any_node',`
	corenet_raw_send_inaddr_any_node($1)
	corenet_raw_receive_inaddr_any_node($1)
')

########################################
## <summary>
##	Bind TCP sockets to node inaddr_any.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_inaddr_any_node',`
	gen_require(`
		type inaddr_any_node_t;
	')

	allow $1 inaddr_any_node_t:tcp_socket node_bind;
')

########################################
## <summary>
##	Bind UDP sockets to the inaddr_any node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_inaddr_any_node',`
	gen_require(`
		type inaddr_any_node_t;
	')

	allow $1 inaddr_any_node_t:udp_socket node_bind;
')






########################################
## <summary>
##	Send and receive TCP traffic on the link_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_link_local_node',`
	gen_require(`
		type link_local_node_t;
	')

	allow $1 link_local_node_t:node { tcp_send tcp_recv };
')

########################################
## <summary>
##	Send UDP traffic on the link_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_link_local_node',`
	gen_require(`
		type link_local_node_t;
	')

	allow $1 link_local_node_t:node udp_send;
')

########################################
## <summary>
##	Receive UDP traffic on the link_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_link_local_node',`
	gen_require(`
		type link_local_node_t;
	')

	allow $1 link_local_node_t:node udp_recv;
')

########################################
## <summary>
##	Send and receive UDP traffic on the link_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_link_local_node',`
	corenet_udp_send_link_local_node($1)
	corenet_udp_receive_link_local_node($1)
')

########################################
## <summary>
##	Send raw IP packets on the link_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_send_link_local_node',`
	gen_require(`
		type link_local_node_t;
	')

	allow $1 link_local_node_t:node rawip_send;
')

########################################
## <summary>
##	Receive raw IP packets on the link_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_receive_link_local_node',`
	gen_require(`
		type link_local_node_t;
	')

	allow $1 link_local_node_t:node rawip_recv;
')

########################################
## <summary>
##	Send and receive raw IP packets on the link_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_raw_sendrecv_link_local_node',`
	corenet_raw_send_link_local_node($1)
	corenet_raw_receive_link_local_node($1)
')

########################################
## <summary>
##	Bind TCP sockets to node link_local.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_link_local_node',`
	gen_require(`
		type link_local_node_t;
	')

	allow $1 link_local_node_t:tcp_socket node_bind;
')

########################################
## <summary>
##	Bind UDP sockets to the link_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_link_local_node',`
	gen_require(`
		type link_local_node_t;
	')

	allow $1 link_local_node_t:udp_socket node_bind;
')






########################################
## <summary>
##	Send and receive TCP traffic on the lo node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_lo_node',`
	gen_require(`
		type lo_node_t;
	')

	allow $1 lo_node_t:node { tcp_send tcp_recv };
')

########################################
## <summary>
##	Send UDP traffic on the lo node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_lo_node',`
	gen_require(`
		type lo_node_t;
	')

	allow $1 lo_node_t:node udp_send;
')

########################################
## <summary>
##	Receive UDP traffic on the lo node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_lo_node',`
	gen_require(`
		type lo_node_t;
	')

	allow $1 lo_node_t:node udp_recv;
')

########################################
## <summary>
##	Send and receive UDP traffic on the lo node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_lo_node',`
	corenet_udp_send_lo_node($1)
	corenet_udp_receive_lo_node($1)
')

########################################
## <summary>
##	Send raw IP packets on the lo node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_send_lo_node',`
	gen_require(`
		type lo_node_t;
	')

	allow $1 lo_node_t:node rawip_send;
')

########################################
## <summary>
##	Receive raw IP packets on the lo node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_receive_lo_node',`
	gen_require(`
		type lo_node_t;
	')

	allow $1 lo_node_t:node rawip_recv;
')

########################################
## <summary>
##	Send and receive raw IP packets on the lo node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_raw_sendrecv_lo_node',`
	corenet_raw_send_lo_node($1)
	corenet_raw_receive_lo_node($1)
')

########################################
## <summary>
##	Bind TCP sockets to node lo.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_lo_node',`
	gen_require(`
		type lo_node_t;
	')

	allow $1 lo_node_t:tcp_socket node_bind;
')

########################################
## <summary>
##	Bind UDP sockets to the lo node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_lo_node',`
	gen_require(`
		type lo_node_t;
	')

	allow $1 lo_node_t:udp_socket node_bind;
')






########################################
## <summary>
##	Send and receive TCP traffic on the mapped_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_mapped_ipv4_node',`
	gen_require(`
		type mapped_ipv4_node_t;
	')

	allow $1 mapped_ipv4_node_t:node { tcp_send tcp_recv };
')

########################################
## <summary>
##	Send UDP traffic on the mapped_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_mapped_ipv4_node',`
	gen_require(`
		type mapped_ipv4_node_t;
	')

	allow $1 mapped_ipv4_node_t:node udp_send;
')

########################################
## <summary>
##	Receive UDP traffic on the mapped_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_mapped_ipv4_node',`
	gen_require(`
		type mapped_ipv4_node_t;
	')

	allow $1 mapped_ipv4_node_t:node udp_recv;
')

########################################
## <summary>
##	Send and receive UDP traffic on the mapped_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_mapped_ipv4_node',`
	corenet_udp_send_mapped_ipv4_node($1)
	corenet_udp_receive_mapped_ipv4_node($1)
')

########################################
## <summary>
##	Send raw IP packets on the mapped_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_send_mapped_ipv4_node',`
	gen_require(`
		type mapped_ipv4_node_t;
	')

	allow $1 mapped_ipv4_node_t:node rawip_send;
')

########################################
## <summary>
##	Receive raw IP packets on the mapped_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_receive_mapped_ipv4_node',`
	gen_require(`
		type mapped_ipv4_node_t;
	')

	allow $1 mapped_ipv4_node_t:node rawip_recv;
')

########################################
## <summary>
##	Send and receive raw IP packets on the mapped_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_raw_sendrecv_mapped_ipv4_node',`
	corenet_raw_send_mapped_ipv4_node($1)
	corenet_raw_receive_mapped_ipv4_node($1)
')

########################################
## <summary>
##	Bind TCP sockets to node mapped_ipv4.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_mapped_ipv4_node',`
	gen_require(`
		type mapped_ipv4_node_t;
	')

	allow $1 mapped_ipv4_node_t:tcp_socket node_bind;
')

########################################
## <summary>
##	Bind UDP sockets to the mapped_ipv4 node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_mapped_ipv4_node',`
	gen_require(`
		type mapped_ipv4_node_t;
	')

	allow $1 mapped_ipv4_node_t:udp_socket node_bind;
')






########################################
## <summary>
##	Send and receive TCP traffic on the multicast node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_multicast_node',`
	gen_require(`
		type multicast_node_t;
	')

	allow $1 multicast_node_t:node { tcp_send tcp_recv };
')

########################################
## <summary>
##	Send UDP traffic on the multicast node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_multicast_node',`
	gen_require(`
		type multicast_node_t;
	')

	allow $1 multicast_node_t:node udp_send;
')

########################################
## <summary>
##	Receive UDP traffic on the multicast node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_multicast_node',`
	gen_require(`
		type multicast_node_t;
	')

	allow $1 multicast_node_t:node udp_recv;
')

########################################
## <summary>
##	Send and receive UDP traffic on the multicast node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_multicast_node',`
	corenet_udp_send_multicast_node($1)
	corenet_udp_receive_multicast_node($1)
')

########################################
## <summary>
##	Send raw IP packets on the multicast node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_send_multicast_node',`
	gen_require(`
		type multicast_node_t;
	')

	allow $1 multicast_node_t:node rawip_send;
')

########################################
## <summary>
##	Receive raw IP packets on the multicast node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_receive_multicast_node',`
	gen_require(`
		type multicast_node_t;
	')

	allow $1 multicast_node_t:node rawip_recv;
')

########################################
## <summary>
##	Send and receive raw IP packets on the multicast node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_raw_sendrecv_multicast_node',`
	corenet_raw_send_multicast_node($1)
	corenet_raw_receive_multicast_node($1)
')

########################################
## <summary>
##	Bind TCP sockets to node multicast.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_multicast_node',`
	gen_require(`
		type multicast_node_t;
	')

	allow $1 multicast_node_t:tcp_socket node_bind;
')

########################################
## <summary>
##	Bind UDP sockets to the multicast node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_multicast_node',`
	gen_require(`
		type multicast_node_t;
	')

	allow $1 multicast_node_t:udp_socket node_bind;
')






########################################
## <summary>
##	Send and receive TCP traffic on the site_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_site_local_node',`
	gen_require(`
		type site_local_node_t;
	')

	allow $1 site_local_node_t:node { tcp_send tcp_recv };
')

########################################
## <summary>
##	Send UDP traffic on the site_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_site_local_node',`
	gen_require(`
		type site_local_node_t;
	')

	allow $1 site_local_node_t:node udp_send;
')

########################################
## <summary>
##	Receive UDP traffic on the site_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_site_local_node',`
	gen_require(`
		type site_local_node_t;
	')

	allow $1 site_local_node_t:node udp_recv;
')

########################################
## <summary>
##	Send and receive UDP traffic on the site_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_site_local_node',`
	corenet_udp_send_site_local_node($1)
	corenet_udp_receive_site_local_node($1)
')

########################################
## <summary>
##	Send raw IP packets on the site_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_send_site_local_node',`
	gen_require(`
		type site_local_node_t;
	')

	allow $1 site_local_node_t:node rawip_send;
')

########################################
## <summary>
##	Receive raw IP packets on the site_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_receive_site_local_node',`
	gen_require(`
		type site_local_node_t;
	')

	allow $1 site_local_node_t:node rawip_recv;
')

########################################
## <summary>
##	Send and receive raw IP packets on the site_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_raw_sendrecv_site_local_node',`
	corenet_raw_send_site_local_node($1)
	corenet_raw_receive_site_local_node($1)
')

########################################
## <summary>
##	Bind TCP sockets to node site_local.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_site_local_node',`
	gen_require(`
		type site_local_node_t;
	')

	allow $1 site_local_node_t:tcp_socket node_bind;
')

########################################
## <summary>
##	Bind UDP sockets to the site_local node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_site_local_node',`
	gen_require(`
		type site_local_node_t;
	')

	allow $1 site_local_node_t:udp_socket node_bind;
')






########################################
## <summary>
##	Send and receive TCP traffic on the unspec node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_unspec_node',`
	gen_require(`
		type unspec_node_t;
	')

	allow $1 unspec_node_t:node { tcp_send tcp_recv };
')

########################################
## <summary>
##	Send UDP traffic on the unspec node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_unspec_node',`
	gen_require(`
		type unspec_node_t;
	')

	allow $1 unspec_node_t:node udp_send;
')

########################################
## <summary>
##	Receive UDP traffic on the unspec node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_unspec_node',`
	gen_require(`
		type unspec_node_t;
	')

	allow $1 unspec_node_t:node udp_recv;
')

########################################
## <summary>
##	Send and receive UDP traffic on the unspec node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_unspec_node',`
	corenet_udp_send_unspec_node($1)
	corenet_udp_receive_unspec_node($1)
')

########################################
## <summary>
##	Send raw IP packets on the unspec node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_send_unspec_node',`
	gen_require(`
		type unspec_node_t;
	')

	allow $1 unspec_node_t:node rawip_send;
')

########################################
## <summary>
##	Receive raw IP packets on the unspec node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_receive_unspec_node',`
	gen_require(`
		type unspec_node_t;
	')

	allow $1 unspec_node_t:node rawip_recv;
')

########################################
## <summary>
##	Send and receive raw IP packets on the unspec node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_raw_sendrecv_unspec_node',`
	corenet_raw_send_unspec_node($1)
	corenet_raw_receive_unspec_node($1)
')

########################################
## <summary>
##	Bind TCP sockets to node unspec.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_unspec_node',`
	gen_require(`
		type unspec_node_t;
	')

	allow $1 unspec_node_t:tcp_socket node_bind;
')

########################################
## <summary>
##	Bind UDP sockets to the unspec node.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_udp_bind_unspec_node',`
	gen_require(`
		type unspec_node_t;
	')

	allow $1 unspec_node_t:udp_socket node_bind;
')






########################################
## <summary>
##	Send and receive TCP network traffic on the lo interface.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_tcp_sendrecv_lo_if',`
	gen_require(`
		type lo_netif_t;
	')

	allow $1 lo_netif_t:netif { tcp_send tcp_recv };
')

########################################
## <summary>
##	Send UDP network traffic on the lo interface.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_udp_send_lo_if',`
	gen_require(`
		type lo_netif_t;
	')

	allow $1 lo_netif_t:netif udp_send;
')

########################################
## <summary>
##	Receive UDP network traffic on the lo interface.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_udp_receive_lo_if',`
	gen_require(`
		type lo_netif_t;
	')

	allow $1 lo_netif_t:netif udp_recv;
')

########################################
## <summary>
##	Send and receive UDP network traffic on the lo interface.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_udp_sendrecv_lo_if',`
	corenet_udp_send_lo_if($1)
	corenet_udp_receive_lo_if($1)
')

########################################
## <summary>
##	Send raw IP packets on the lo interface.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="write" weight="10"/>
#
interface(`corenet_raw_send_lo_if',`
	gen_require(`
		type lo_netif_t;
	')

	allow $1 lo_netif_t:netif rawip_send;
')

########################################
## <summary>
##	Receive raw IP packets on the lo interface.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="read" weight="10"/>
#
interface(`corenet_raw_receive_lo_if',`
	gen_require(`
		type lo_netif_t;
	')

	allow $1 lo_netif_t:netif rawip_recv;
')

########################################
## <summary>
##	Send and receive raw IP packets on the lo interface.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="both" weight="10"/>
#
interface(`corenet_raw_sendrecv_lo_if',`
	corenet_raw_send_lo_if($1)
	corenet_raw_receive_lo_if($1)
')



